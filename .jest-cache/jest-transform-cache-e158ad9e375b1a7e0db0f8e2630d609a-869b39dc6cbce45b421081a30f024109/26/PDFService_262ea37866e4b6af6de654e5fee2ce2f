784c9278c565cdc3b4f7a68b10995bc5
"use strict";

/* istanbul ignore next */
function cov_2fumnfmdy7() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts";
  var hash = "ec7d9e9b02786742a580b8bab604738973c8e981";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "37": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "38": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "39": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "40": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "41": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "42": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 22
        }
      },
      "43": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "44": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 84
        }
      },
      "45": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "46": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 76
        }
      },
      "47": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "48": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "49": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "50": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "51": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "52": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "53": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "54": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "55": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "56": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 55
        }
      },
      "57": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 76
        }
      },
      "58": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 28
        }
      },
      "59": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "60": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "61": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 93,
          column: 28
        }
      },
      "62": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "63": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 72
        }
      },
      "64": {
        start: {
          line: 97,
          column: 35
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "65": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 86
        }
      },
      "66": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "67": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "68": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 110,
          column: 17
        }
      },
      "69": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 107
        }
      },
      "70": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 77
        }
      },
      "71": {
        start: {
          line: 113,
          column: 34
        },
        end: {
          line: 113,
          column: 77
        }
      },
      "72": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 84
        }
      },
      "73": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "74": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 82
        }
      },
      "75": {
        start: {
          line: 120,
          column: 35
        },
        end: {
          line: 120,
          column: 67
        }
      },
      "76": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "77": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 121,
          column: 30
        }
      },
      "78": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "79": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 123,
          column: 88
        }
      },
      "80": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 80
        }
      },
      "81": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 40
        }
      },
      "82": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 101
        }
      },
      "83": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 33
        }
      },
      "84": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 34
        }
      },
      "85": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 86
        }
      },
      "86": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "87": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 84
        }
      },
      "88": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 86
        }
      },
      "89": {
        start: {
          line: 138,
          column: 49
        },
        end: {
          line: 138,
          column: 84
        }
      },
      "90": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 150,
          column: 21
        }
      },
      "91": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 149,
          column: 25
        }
      },
      "92": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 142,
          column: 91
        }
      },
      "93": {
        start: {
          line: 143,
          column: 49
        },
        end: {
          line: 143,
          column: 101
        }
      },
      "94": {
        start: {
          line: 144,
          column: 28
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "95": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 75
        }
      },
      "96": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 99
        }
      },
      "97": {
        start: {
          line: 155,
          column: 29
        },
        end: {
          line: 155,
          column: 120
        }
      },
      "98": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 67
        }
      },
      "99": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 38
        }
      },
      "100": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "101": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 75
        }
      },
      "102": {
        start: {
          line: 168,
          column: 24
        },
        end: {
          line: 168,
          column: 62
        }
      },
      "103": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 23
        }
      },
      "104": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 57
        }
      },
      "105": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 77
        }
      },
      "106": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 52
        }
      },
      "107": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 65
        }
      },
      "108": {
        start: {
          line: 184,
          column: 26
        },
        end: {
          line: 184,
          column: 62
        }
      },
      "109": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "110": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 64
        }
      },
      "111": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 187,
          column: 89
        }
      },
      "112": {
        start: {
          line: 187,
          column: 86
        },
        end: {
          line: 187,
          column: 87
        }
      },
      "113": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 59
        }
      },
      "114": {
        start: {
          line: 188,
          column: 34
        },
        end: {
          line: 188,
          column: 57
        }
      },
      "115": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 38
        }
      },
      "116": {
        start: {
          line: 194,
          column: 23
        },
        end: {
          line: 194,
          column: 65
        }
      },
      "117": {
        start: {
          line: 195,
          column: 27
        },
        end: {
          line: 195,
          column: 48
        }
      },
      "118": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "119": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 57
        }
      },
      "120": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 200,
          column: 61
        }
      },
      "121": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 107
        }
      },
      "122": {
        start: {
          line: 201,
          column: 104
        },
        end: {
          line: 201,
          column: 105
        }
      },
      "123": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 59
        }
      },
      "124": {
        start: {
          line: 202,
          column: 35
        },
        end: {
          line: 202,
          column: 57
        }
      },
      "125": {
        start: {
          line: 204,
          column: 26
        },
        end: {
          line: 204,
          column: 62
        }
      },
      "126": {
        start: {
          line: 205,
          column: 28
        },
        end: {
          line: 205,
          column: 134
        }
      },
      "127": {
        start: {
          line: 205,
          column: 119
        },
        end: {
          line: 205,
          column: 132
        }
      },
      "128": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 61
        }
      },
      "129": {
        start: {
          line: 206,
          column: 36
        },
        end: {
          line: 206,
          column: 59
        }
      },
      "130": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "131": {
        start: {
          line: 214,
          column: 23
        },
        end: {
          line: 214,
          column: 65
        }
      },
      "132": {
        start: {
          line: 215,
          column: 29
        },
        end: {
          line: 215,
          column: 65
        }
      },
      "133": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 217,
          column: 55
        }
      },
      "134": {
        start: {
          line: 217,
          column: 47
        },
        end: {
          line: 217,
          column: 54
        }
      },
      "135": {
        start: {
          line: 218,
          column: 22
        },
        end: {
          line: 218,
          column: 67
        }
      },
      "136": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 58
        }
      },
      "137": {
        start: {
          line: 219,
          column: 30
        },
        end: {
          line: 219,
          column: 56
        }
      },
      "138": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 41
        }
      },
      "139": {
        start: {
          line: 224,
          column: 23
        },
        end: {
          line: 224,
          column: 65
        }
      },
      "140": {
        start: {
          line: 225,
          column: 22
        },
        end: {
          line: 225,
          column: 39
        }
      },
      "141": {
        start: {
          line: 226,
          column: 28
        },
        end: {
          line: 228,
          column: 19
        }
      },
      "142": {
        start: {
          line: 227,
          column: 35
        },
        end: {
          line: 227,
          column: 47
        }
      },
      "143": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 232,
          column: 11
        }
      },
      "144": {
        start: {
          line: 230,
          column: 36
        },
        end: {
          line: 230,
          column: 54
        }
      },
      "145": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 87
        }
      },
      "146": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 35
        }
      },
      "147": {
        start: {
          line: 239,
          column: 23
        },
        end: {
          line: 239,
          column: 65
        }
      },
      "148": {
        start: {
          line: 240,
          column: 21
        },
        end: {
          line: 240,
          column: 66
        }
      },
      "149": {
        start: {
          line: 242,
          column: 21
        },
        end: {
          line: 242,
          column: 78
        }
      },
      "150": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      },
      "151": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 35
        }
      },
      "152": {
        start: {
          line: 254,
          column: 23
        },
        end: {
          line: 254,
          column: 65
        }
      },
      "153": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 66
        }
      },
      "154": {
        start: {
          line: 256,
          column: 60
        },
        end: {
          line: 256,
          column: 65
        }
      },
      "155": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 261,
          column: 11
        }
      },
      "156": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 260,
          column: 13
        }
      },
      "157": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 47
        }
      },
      "158": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 35
        }
      },
      "159": {
        start: {
          line: 266,
          column: 23
        },
        end: {
          line: 266,
          column: 65
        }
      },
      "160": {
        start: {
          line: 268,
          column: 24
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "161": {
        start: {
          line: 273,
          column: 28
        },
        end: {
          line: 273,
          column: 44
        }
      },
      "162": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 46
        }
      },
      "163": {
        start: {
          line: 278,
          column: 100
        },
        end: {
          line: 278,
          column: 107
        }
      },
      "164": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "165": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 58
        }
      },
      "166": {
        start: {
          line: 282,
          column: 33
        },
        end: {
          line: 282,
          column: 74
        }
      },
      "167": {
        start: {
          line: 283,
          column: 27
        },
        end: {
          line: 283,
          column: 73
        }
      },
      "168": {
        start: {
          line: 284,
          column: 26
        },
        end: {
          line: 284,
          column: 43
        }
      },
      "169": {
        start: {
          line: 285,
          column: 25
        },
        end: {
          line: 285,
          column: 82
        }
      },
      "170": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "171": {
        start: {
          line: 287,
          column: 42
        },
        end: {
          line: 287,
          column: 56
        }
      },
      "172": {
        start: {
          line: 288,
          column: 34
        },
        end: {
          line: 288,
          column: 81
        }
      },
      "173": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 297,
          column: 19
        }
      },
      "174": {
        start: {
          line: 299,
          column: 27
        },
        end: {
          line: 299,
          column: 46
        }
      },
      "175": {
        start: {
          line: 300,
          column: 31
        },
        end: {
          line: 300,
          column: 70
        }
      },
      "176": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 83
        }
      },
      "177": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 30
        }
      },
      "178": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 66
        }
      },
      "179": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 73
        }
      },
      "180": {
        start: {
          line: 311,
          column: 27
        },
        end: {
          line: 311,
          column: 47
        }
      },
      "181": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "182": {
        start: {
          line: 314,
          column: 25
        },
        end: {
          line: 314,
          column: 45
        }
      },
      "183": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 32
        }
      },
      "184": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 68
        }
      },
      "185": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 24
        }
      },
      "186": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 60
        }
      },
      "187": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 78
        }
      },
      "188": {
        start: {
          line: 326,
          column: 107
        },
        end: {
          line: 326,
          column: 114
        }
      },
      "189": {
        start: {
          line: 327,
          column: 23
        },
        end: {
          line: 327,
          column: 65
        }
      },
      "190": {
        start: {
          line: 328,
          column: 22
        },
        end: {
          line: 328,
          column: 39
        }
      },
      "191": {
        start: {
          line: 329,
          column: 21
        },
        end: {
          line: 329,
          column: 78
        }
      },
      "192": {
        start: {
          line: 330,
          column: 27
        },
        end: {
          line: 330,
          column: 39
        }
      },
      "193": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "194": {
        start: {
          line: 332,
          column: 38
        },
        end: {
          line: 332,
          column: 52
        }
      },
      "195": {
        start: {
          line: 333,
          column: 28
        },
        end: {
          line: 333,
          column: 37
        }
      },
      "196": {
        start: {
          line: 334,
          column: 25
        },
        end: {
          line: 336,
          column: 58
        }
      },
      "197": {
        start: {
          line: 337,
          column: 30
        },
        end: {
          line: 337,
          column: 68
        }
      },
      "198": {
        start: {
          line: 338,
          column: 20
        },
        end: {
          line: 338,
          column: 26
        }
      },
      "199": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 339,
          column: 26
        }
      },
      "200": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "201": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 44
        }
      },
      "202": {
        start: {
          line: 344,
          column: 17
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "203": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 47
        }
      },
      "204": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "205": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 36
        }
      },
      "206": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 356,
          column: 15
        }
      },
      "207": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 35
        }
      },
      "208": {
        start: {
          line: 362,
          column: 23
        },
        end: {
          line: 362,
          column: 65
        }
      },
      "209": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 372,
          column: 10
        }
      },
      "210": {
        start: {
          line: 367,
          column: 64
        },
        end: {
          line: 367,
          column: 72
        }
      },
      "211": {
        start: {
          line: 376,
          column: 23
        },
        end: {
          line: 376,
          column: 65
        }
      },
      "212": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 378,
          column: 44
        }
      },
      "213": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 44
        }
      },
      "214": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 380,
          column: 46
        }
      },
      "215": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 46
        }
      },
      "216": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 382,
          column: 48
        }
      },
      "217": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 48
        }
      },
      "218": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "219": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 50
        }
      },
      "220": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 388,
          column: 48
        }
      },
      "221": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 48
        }
      },
      "222": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 390,
          column: 50
        }
      },
      "223": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 50
        }
      },
      "224": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 392,
          column: 58
        }
      },
      "225": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 58
        }
      },
      "226": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 394,
          column: 66
        }
      },
      "227": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 66
        }
      },
      "228": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 35
        }
      },
      "229": {
        start: {
          line: 399,
          column: 23
        },
        end: {
          line: 399,
          column: 65
        }
      },
      "230": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 406,
          column: 11
        }
      },
      "231": {
        start: {
          line: 410,
          column: 23
        },
        end: {
          line: 410,
          column: 65
        }
      },
      "232": {
        start: {
          line: 411,
          column: 21
        },
        end: {
          line: 411,
          column: 51
        }
      },
      "233": {
        start: {
          line: 414,
          column: 22
        },
        end: {
          line: 414,
          column: 48
        }
      },
      "234": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "235": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 54
        }
      },
      "236": {
        start: {
          line: 419,
          column: 13
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "237": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 54
        }
      },
      "238": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 56
        }
      },
      "239": {
        start: {
          line: 426,
          column: 55
        },
        end: {
          line: 426,
          column: 60
        }
      },
      "240": {
        start: {
          line: 427,
          column: 22
        },
        end: {
          line: 427,
          column: 47
        }
      },
      "241": {
        start: {
          line: 428,
          column: 23
        },
        end: {
          line: 428,
          column: 50
        }
      },
      "242": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 435,
          column: 11
        }
      },
      "243": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 436,
          column: 35
        }
      },
      "244": {
        start: {
          line: 440,
          column: 23
        },
        end: {
          line: 440,
          column: 65
        }
      },
      "245": {
        start: {
          line: 441,
          column: 29
        },
        end: {
          line: 441,
          column: 65
        }
      },
      "246": {
        start: {
          line: 443,
          column: 24
        },
        end: {
          line: 443,
          column: 48
        }
      },
      "247": {
        start: {
          line: 443,
          column: 42
        },
        end: {
          line: 443,
          column: 47
        }
      },
      "248": {
        start: {
          line: 444,
          column: 22
        },
        end: {
          line: 444,
          column: 67
        }
      },
      "249": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 58
        }
      },
      "250": {
        start: {
          line: 445,
          column: 30
        },
        end: {
          line: 445,
          column: 56
        }
      },
      "251": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 41
        }
      },
      "252": {
        start: {
          line: 450,
          column: 23
        },
        end: {
          line: 450,
          column: 65
        }
      },
      "253": {
        start: {
          line: 451,
          column: 21
        },
        end: {
          line: 451,
          column: 51
        }
      },
      "254": {
        start: {
          line: 452,
          column: 34
        },
        end: {
          line: 452,
          column: 48
        }
      },
      "255": {
        start: {
          line: 453,
          column: 25
        },
        end: {
          line: 453,
          column: 43
        }
      },
      "256": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 458,
          column: 10
        }
      },
      "257": {
        start: {
          line: 465,
          column: 23
        },
        end: {
          line: 465,
          column: 65
        }
      },
      "258": {
        start: {
          line: 466,
          column: 22
        },
        end: {
          line: 466,
          column: 39
        }
      },
      "259": {
        start: {
          line: 467,
          column: 28
        },
        end: {
          line: 469,
          column: 19
        }
      },
      "260": {
        start: {
          line: 468,
          column: 35
        },
        end: {
          line: 468,
          column: 47
        }
      },
      "261": {
        start: {
          line: 468,
          column: 61
        },
        end: {
          line: 468,
          column: 62
        }
      },
      "262": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 472,
          column: 11
        }
      },
      "263": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 85
        }
      },
      "264": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 35
        }
      },
      "265": {
        start: {
          line: 479,
          column: 24
        },
        end: {
          line: 479,
          column: 26
        }
      },
      "266": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "267": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 513,
          column: 13
        }
      },
      "268": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 508,
          column: 17
        }
      },
      "269": {
        start: {
          line: 484,
          column: 39
        },
        end: {
          line: 484,
          column: 81
        }
      },
      "270": {
        start: {
          line: 485,
          column: 24
        },
        end: {
          line: 485,
          column: 45
        }
      },
      "271": {
        start: {
          line: 486,
          column: 24
        },
        end: {
          line: 486,
          column: 30
        }
      },
      "272": {
        start: {
          line: 488,
          column: 24
        },
        end: {
          line: 491,
          column: 25
        }
      },
      "273": {
        start: {
          line: 489,
          column: 44
        },
        end: {
          line: 489,
          column: 139
        }
      },
      "274": {
        start: {
          line: 490,
          column: 28
        },
        end: {
          line: 490,
          column: 50
        }
      },
      "275": {
        start: {
          line: 492,
          column: 24
        },
        end: {
          line: 492,
          column: 30
        }
      },
      "276": {
        start: {
          line: 494,
          column: 24
        },
        end: {
          line: 497,
          column: 25
        }
      },
      "277": {
        start: {
          line: 495,
          column: 47
        },
        end: {
          line: 495,
          column: 115
        }
      },
      "278": {
        start: {
          line: 496,
          column: 28
        },
        end: {
          line: 496,
          column: 53
        }
      },
      "279": {
        start: {
          line: 498,
          column: 24
        },
        end: {
          line: 498,
          column: 30
        }
      },
      "280": {
        start: {
          line: 500,
          column: 24
        },
        end: {
          line: 503,
          column: 25
        }
      },
      "281": {
        start: {
          line: 501,
          column: 48
        },
        end: {
          line: 501,
          column: 151
        }
      },
      "282": {
        start: {
          line: 502,
          column: 28
        },
        end: {
          line: 502,
          column: 54
        }
      },
      "283": {
        start: {
          line: 504,
          column: 24
        },
        end: {
          line: 504,
          column: 30
        }
      },
      "284": {
        start: {
          line: 506,
          column: 24
        },
        end: {
          line: 506,
          column: 87
        }
      },
      "285": {
        start: {
          line: 507,
          column: 24
        },
        end: {
          line: 507,
          column: 30
        }
      },
      "286": {
        start: {
          line: 511,
          column: 16
        },
        end: {
          line: 511,
          column: 82
        }
      },
      "287": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 23
        }
      },
      "288": {
        start: {
          line: 518,
          column: 0
        },
        end: {
          line: 518,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 41
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 54
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 72
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 85
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 138,
            column: 38
          },
          end: {
            line: 138,
            column: 39
          }
        },
        loc: {
          start: {
            line: 138,
            column: 49
          },
          end: {
            line: 138,
            column: 84
          }
        },
        line: 138
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 24
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 164
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 176
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 44
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 179
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 183
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 187,
            column: 76
          },
          end: {
            line: 187,
            column: 77
          }
        },
        loc: {
          start: {
            line: 187,
            column: 86
          },
          end: {
            line: 187,
            column: 87
          }
        },
        line: 187
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 188,
            column: 26
          },
          end: {
            line: 188,
            column: 27
          }
        },
        loc: {
          start: {
            line: 188,
            column: 34
          },
          end: {
            line: 188,
            column: 57
          }
        },
        line: 188
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 40
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 193
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 201,
            column: 94
          },
          end: {
            line: 201,
            column: 95
          }
        },
        loc: {
          start: {
            line: 201,
            column: 104
          },
          end: {
            line: 201,
            column: 105
          }
        },
        line: 201
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 202,
            column: 27
          },
          end: {
            line: 202,
            column: 28
          }
        },
        loc: {
          start: {
            line: 202,
            column: 35
          },
          end: {
            line: 202,
            column: 57
          }
        },
        line: 202
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 205,
            column: 109
          },
          end: {
            line: 205,
            column: 110
          }
        },
        loc: {
          start: {
            line: 205,
            column: 119
          },
          end: {
            line: 205,
            column: 132
          }
        },
        line: 205
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 206,
            column: 28
          },
          end: {
            line: 206,
            column: 29
          }
        },
        loc: {
          start: {
            line: 206,
            column: 36
          },
          end: {
            line: 206,
            column: 59
          }
        },
        line: 206
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 46
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 213
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 217,
            column: 40
          },
          end: {
            line: 217,
            column: 41
          }
        },
        loc: {
          start: {
            line: 217,
            column: 47
          },
          end: {
            line: 217,
            column: 54
          }
        },
        line: 217
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 219,
            column: 22
          },
          end: {
            line: 219,
            column: 23
          }
        },
        loc: {
          start: {
            line: 219,
            column: 30
          },
          end: {
            line: 219,
            column: 56
          }
        },
        line: 219
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 55
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 223
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 227,
            column: 30
          },
          end: {
            line: 227,
            column: 31
          }
        },
        loc: {
          start: {
            line: 227,
            column: 35
          },
          end: {
            line: 227,
            column: 47
          }
        },
        line: 227
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 229,
            column: 28
          },
          end: {
            line: 229,
            column: 29
          }
        },
        loc: {
          start: {
            line: 229,
            column: 36
          },
          end: {
            line: 232,
            column: 9
          }
        },
        line: 229
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 6
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 238
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 45
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 253
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 256,
            column: 50
          },
          end: {
            line: 256,
            column: 51
          }
        },
        loc: {
          start: {
            line: 256,
            column: 60
          },
          end: {
            line: 256,
            column: 65
          }
        },
        line: 256
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 257,
            column: 28
          },
          end: {
            line: 257,
            column: 29
          }
        },
        loc: {
          start: {
            line: 257,
            column: 39
          },
          end: {
            line: 261,
            column: 9
          }
        },
        line: 257
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 52
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 265
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        loc: {
          start: {
            line: 277,
            column: 62
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 277
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 17
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 310
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 49
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 325
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 331,
            column: 22
          },
          end: {
            line: 331,
            column: 23
          }
        },
        loc: {
          start: {
            line: 331,
            column: 39
          },
          end: {
            line: 357,
            column: 9
          }
        },
        line: 331
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 32
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 361
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 367,
            column: 59
          },
          end: {
            line: 367,
            column: 60
          }
        },
        loc: {
          start: {
            line: 367,
            column: 64
          },
          end: {
            line: 367,
            column: 72
          }
        },
        line: 367
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 375,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        loc: {
          start: {
            line: 375,
            column: 42
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 375
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 398,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        loc: {
          start: {
            line: 398,
            column: 35
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 398
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 62
          },
          end: {
            line: 437,
            column: 5
          }
        },
        line: 409
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 439,
            column: 5
          }
        },
        loc: {
          start: {
            line: 439,
            column: 43
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 439
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 443,
            column: 37
          },
          end: {
            line: 443,
            column: 38
          }
        },
        loc: {
          start: {
            line: 443,
            column: 42
          },
          end: {
            line: 443,
            column: 47
          }
        },
        line: 443
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 445,
            column: 22
          },
          end: {
            line: 445,
            column: 23
          }
        },
        loc: {
          start: {
            line: 445,
            column: 30
          },
          end: {
            line: 445,
            column: 56
          }
        },
        line: 445
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 50
          },
          end: {
            line: 459,
            column: 5
          }
        },
        line: 449
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 5
          }
        },
        loc: {
          start: {
            line: 464,
            column: 53
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 464
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 468,
            column: 30
          },
          end: {
            line: 468,
            column: 31
          }
        },
        loc: {
          start: {
            line: 468,
            column: 35
          },
          end: {
            line: 468,
            column: 47
          }
        },
        line: 468
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 468,
            column: 56
          },
          end: {
            line: 468,
            column: 57
          }
        },
        loc: {
          start: {
            line: 468,
            column: 61
          },
          end: {
            line: 468,
            column: 62
          }
        },
        line: 468
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 470,
            column: 28
          },
          end: {
            line: 470,
            column: 29
          }
        },
        loc: {
          start: {
            line: 470,
            column: 36
          },
          end: {
            line: 472,
            column: 9
          }
        },
        line: 470
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 35
          },
          end: {
            line: 516,
            column: 5
          }
        },
        line: 478
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "18": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "19": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "20": {
        loc: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "21": {
        loc: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 31
          }
        }, {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 62
          }
        }],
        line: 104
      },
      "22": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "23": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "24": {
        loc: {
          start: {
            line: 122,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "25": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "26": {
        loc: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 150,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 150,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "27": {
        loc: {
          start: {
            line: 155,
            column: 81
          },
          end: {
            line: 155,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 81
          },
          end: {
            line: 155,
            column: 99
          }
        }, {
          start: {
            line: 155,
            column: 103
          },
          end: {
            line: 155,
            column: 118
          }
        }],
        line: 155
      },
      "28": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "29": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 25
          }
        }, {
          start: {
            line: 196,
            column: 29
          },
          end: {
            line: 196,
            column: 52
          }
        }],
        line: 196
      },
      "30": {
        loc: {
          start: {
            line: 226,
            column: 28
          },
          end: {
            line: 228,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 227,
            column: 14
          },
          end: {
            line: 227,
            column: 48
          }
        }, {
          start: {
            line: 228,
            column: 14
          },
          end: {
            line: 228,
            column: 19
          }
        }],
        line: 226
      },
      "31": {
        loc: {
          start: {
            line: 236,
            column: 47
          },
          end: {
            line: 236,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 236,
            column: 55
          },
          end: {
            line: 236,
            column: 61
          }
        }],
        line: 236
      },
      "32": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 13
          },
          end: {
            line: 237,
            column: 19
          }
        }],
        line: 237
      },
      "33": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "34": {
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 27
          }
        }, {
          start: {
            line: 258,
            column: 31
          },
          end: {
            line: 258,
            column: 63
          }
        }],
        line: 258
      },
      "35": {
        loc: {
          start: {
            line: 265,
            column: 32
          },
          end: {
            line: 265,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 265,
            column: 42
          },
          end: {
            line: 265,
            column: 50
          }
        }],
        line: 265
      },
      "36": {
        loc: {
          start: {
            line: 277,
            column: 48
          },
          end: {
            line: 277,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 277,
            column: 58
          },
          end: {
            line: 277,
            column: 60
          }
        }],
        line: 277
      },
      "37": {
        loc: {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 27
          },
          end: {
            line: 278,
            column: 29
          }
        }],
        line: 278
      },
      "38": {
        loc: {
          start: {
            line: 278,
            column: 31
          },
          end: {
            line: 278,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 41
          },
          end: {
            line: 278,
            column: 44
          }
        }],
        line: 278
      },
      "39": {
        loc: {
          start: {
            line: 278,
            column: 46
          },
          end: {
            line: 278,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 57
          },
          end: {
            line: 278,
            column: 59
          }
        }],
        line: 278
      },
      "40": {
        loc: {
          start: {
            line: 278,
            column: 61
          },
          end: {
            line: 278,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 69
          },
          end: {
            line: 278,
            column: 95
          }
        }],
        line: 278
      },
      "41": {
        loc: {
          start: {
            line: 325,
            column: 35
          },
          end: {
            line: 325,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 325,
            column: 45
          },
          end: {
            line: 325,
            column: 47
          }
        }],
        line: 325
      },
      "42": {
        loc: {
          start: {
            line: 326,
            column: 16
          },
          end: {
            line: 326,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 326,
            column: 27
          },
          end: {
            line: 326,
            column: 42
          }
        }],
        line: 326
      },
      "43": {
        loc: {
          start: {
            line: 326,
            column: 44
          },
          end: {
            line: 326,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 326,
            column: 53
          },
          end: {
            line: 326,
            column: 74
          }
        }],
        line: 326
      },
      "44": {
        loc: {
          start: {
            line: 326,
            column: 76
          },
          end: {
            line: 326,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 326,
            column: 87
          },
          end: {
            line: 326,
            column: 89
          }
        }],
        line: 326
      },
      "45": {
        loc: {
          start: {
            line: 326,
            column: 91
          },
          end: {
            line: 326,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 326,
            column: 100
          },
          end: {
            line: 326,
            column: 102
          }
        }],
        line: 326
      },
      "46": {
        loc: {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: 344,
            column: 17
          },
          end: {
            line: 346,
            column: 13
          }
        }],
        line: 341
      },
      "47": {
        loc: {
          start: {
            line: 344,
            column: 17
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 17
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "48": {
        loc: {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 349,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 349,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "49": {
        loc: {
          start: {
            line: 367,
            column: 22
          },
          end: {
            line: 367,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 22
          },
          end: {
            line: 367,
            column: 73
          }
        }, {
          start: {
            line: 367,
            column: 77
          },
          end: {
            line: 367,
            column: 79
          }
        }],
        line: 367
      },
      "50": {
        loc: {
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 378,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 378,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "51": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 380,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 380,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "52": {
        loc: {
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 382,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 382,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "53": {
        loc: {
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "54": {
        loc: {
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 383,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 383,
            column: 29
          }
        }, {
          start: {
            line: 383,
            column: 33
          },
          end: {
            line: 383,
            column: 61
          }
        }],
        line: 383
      },
      "55": {
        loc: {
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 388,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 388,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "56": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 390,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 390,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "57": {
        loc: {
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 392,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 392,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "58": {
        loc: {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 394,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 394,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "59": {
        loc: {
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        }, {
          start: {
            line: 419,
            column: 13
          },
          end: {
            line: 425,
            column: 9
          }
        }],
        line: 415
      },
      "60": {
        loc: {
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 415,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 415,
            column: 29
          }
        }, {
          start: {
            line: 415,
            column: 33
          },
          end: {
            line: 415,
            column: 50
          }
        }],
        line: 415
      },
      "61": {
        loc: {
          start: {
            line: 419,
            column: 13
          },
          end: {
            line: 425,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 13
          },
          end: {
            line: 425,
            column: 9
          }
        }, {
          start: {
            line: 423,
            column: 13
          },
          end: {
            line: 425,
            column: 9
          }
        }],
        line: 419
      },
      "62": {
        loc: {
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 419,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 419,
            column: 34
          }
        }, {
          start: {
            line: 419,
            column: 38
          },
          end: {
            line: 419,
            column: 55
          }
        }],
        line: 419
      },
      "63": {
        loc: {
          start: {
            line: 427,
            column: 22
          },
          end: {
            line: 427,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 22
          },
          end: {
            line: 427,
            column: 35
          }
        }, {
          start: {
            line: 427,
            column: 39
          },
          end: {
            line: 427,
            column: 47
          }
        }],
        line: 427
      },
      "64": {
        loc: {
          start: {
            line: 428,
            column: 23
          },
          end: {
            line: 428,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 23
          },
          end: {
            line: 428,
            column: 37
          }
        }, {
          start: {
            line: 428,
            column: 41
          },
          end: {
            line: 428,
            column: 50
          }
        }],
        line: 428
      },
      "65": {
        loc: {
          start: {
            line: 434,
            column: 21
          },
          end: {
            line: 434,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 21
          },
          end: {
            line: 434,
            column: 36
          }
        }, {
          start: {
            line: 434,
            column: 40
          },
          end: {
            line: 434,
            column: 41
          }
        }],
        line: 434
      },
      "66": {
        loc: {
          start: {
            line: 467,
            column: 28
          },
          end: {
            line: 469,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 468,
            column: 14
          },
          end: {
            line: 468,
            column: 63
          }
        }, {
          start: {
            line: 469,
            column: 14
          },
          end: {
            line: 469,
            column: 19
          }
        }],
        line: 467
      },
      "67": {
        loc: {
          start: {
            line: 482,
            column: 16
          },
          end: {
            line: 508,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 483,
            column: 20
          },
          end: {
            line: 486,
            column: 30
          }
        }, {
          start: {
            line: 487,
            column: 20
          },
          end: {
            line: 492,
            column: 30
          }
        }, {
          start: {
            line: 493,
            column: 20
          },
          end: {
            line: 498,
            column: 30
          }
        }, {
          start: {
            line: 499,
            column: 20
          },
          end: {
            line: 504,
            column: 30
          }
        }, {
          start: {
            line: 505,
            column: 20
          },
          end: {
            line: 507,
            column: 30
          }
        }],
        line: 482
      },
      "68": {
        loc: {
          start: {
            line: 489,
            column: 73
          },
          end: {
            line: 489,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 73
          },
          end: {
            line: 489,
            column: 100
          }
        }, {
          start: {
            line: 489,
            column: 104
          },
          end: {
            line: 489,
            column: 106
          }
        }],
        line: 489
      },
      "69": {
        loc: {
          start: {
            line: 495,
            column: 76
          },
          end: {
            line: 495,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 495,
            column: 76
          },
          end: {
            line: 495,
            column: 102
          }
        }, {
          start: {
            line: 495,
            column: 106
          },
          end: {
            line: 495,
            column: 114
          }
        }],
        line: 495
      },
      "70": {
        loc: {
          start: {
            line: 501,
            column: 78
          },
          end: {
            line: 501,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 78
          },
          end: {
            line: 501,
            column: 101
          }
        }, {
          start: {
            line: 501,
            column: 105
          },
          end: {
            line: 501,
            column: 116
          }
        }],
        line: 501
      },
      "71": {
        loc: {
          start: {
            line: 501,
            column: 118
          },
          end: {
            line: 501,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 118
          },
          end: {
            line: 501,
            column: 144
          }
        }, {
          start: {
            line: 501,
            column: 148
          },
          end: {
            line: 501,
            column: 150
          }
        }],
        line: 501
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0],
      "37": [0],
      "38": [0],
      "39": [0],
      "40": [0],
      "41": [0],
      "42": [0],
      "43": [0],
      "44": [0],
      "45": [0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0, 0, 0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts"],
      sourcesContent: ["import { PDFDocument, PDFPage, rgb, StandardFonts, degrees, PDFFont, PDFImage } from 'pdf-lib';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { PDFDocumentProxy } from 'pdfjs-dist/types/src/display/api';\nimport { loadPDFSafely, validatePDFBytes, createSafePDFBytes } from '../../common/utils';\n\ninterface PDFMetadata {\n  title?: string;\n  author?: string;\n  subject?: string;\n  keywords?: string[];\n  creator?: string;\n  producer?: string;\n  creationDate?: Date;\n  modificationDate?: Date;\n}\n\ninterface ExtractedPage {\n  pageNumber: number;\n  content: Uint8Array;\n}\n\nexport class PDFService {\n  private currentPDF: PDFDocument | null = null;\n  private originalBytes: Uint8Array | null = null;\n  private isModified: boolean = false;\n\n  constructor() {\n    // Note: Worker configuration is handled in index.tsx to avoid conflicts\n    // Just verify it's configured\n    if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {\n      console.warn('\u26A0\uFE0F PDF.js worker not configured - this may cause issues');\n    }\n  }\n\n  /**\n   * Set the current PDF document and track its state\n   */\n  setCurrentPDF(pdfDoc: PDFDocument, originalBytes: Uint8Array) {\n    this.currentPDF = pdfDoc;\n    this.originalBytes = createSafePDFBytes(originalBytes);\n    this.isModified = false;\n    console.log('\u2705 Current PDF set with safe byte tracking');\n  }\n\n  /**\n   * Get current PDF with validation\n   */\n  getCurrentPDF(): PDFDocument {\n    if (!this.currentPDF) {\n      throw new Error('No PDF document is currently loaded');\n    }\n    return this.currentPDF;\n  }\n\n  /**\n   * Mark document as modified for save tracking\n   */\n  markModified() {\n    this.isModified = true;\n    console.log('\uD83D\uDCDD PDF marked as modified');\n  }\n\n  /**\n   * Check if document has unsaved changes\n   */\n  hasUnsavedChanges(): boolean {\n    return this.isModified;\n  }\n\n  /**\n   * Save current PDF with comprehensive error recovery and ArrayBuffer detachment prevention\n   */\n  async saveCurrentPDF(): Promise<Uint8Array> {\n    if (!this.currentPDF) {\n      throw new Error('No PDF document to save');\n    }\n\n    console.log('\uD83D\uDCBE Starting PDF save with enhanced error recovery...');\n    \n    // Retry logic for robust saving\n    const maxRetries = 3;\n    let lastError: Error | null = null;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        console.log(`\uD83D\uDCBE Save attempt ${attempt}/${maxRetries}`);\n        \n        // Create safe save operation with proper byte handling\n        const savedBytes = await this.currentPDF.save({\n          useObjectStreams: false, // Disable for better compatibility\n          addDefaultPage: false,   // Don't add empty pages\n          updateFieldAppearances: true // Update form field appearances\n        });\n        \n        console.log(`\uD83D\uDD0D PDF saved to buffer: ${savedBytes.byteLength} bytes`);\n        \n        // Critical validation step\n        if (!savedBytes || savedBytes.byteLength === 0) {\n          throw new Error('PDF save produced empty or null data');\n        }\n        \n        // Validate the saved PDF data before processing\n        if (!validatePDFBytes(savedBytes)) {\n          throw new Error('PDF save operation produced invalid data - failed header validation');\n        }\n        \n        // Create multiple safe copies to prevent detachment issues\n        console.log('\uD83D\uDD27 Creating detachment-resistant PDF bytes...');\n        const safeBytes = createSafePDFBytes(savedBytes);\n        console.log(`\uD83D\uDD0D Safe bytes created: ${safeBytes.byteLength} bytes`);\n        \n        // Triple validation to ensure integrity\n        if (!validatePDFBytes(safeBytes)) {\n          throw new Error('Safe PDF bytes creation corrupted the data');\n        }\n        \n        // Verify byte-for-byte integrity (sample check)\n        const sampleSize = Math.min(100, savedBytes.length);\n        for (let i = 0; i < sampleSize; i++) {\n          if (safeBytes[i] !== savedBytes[i]) {\n            throw new Error(`Byte integrity check failed at position ${i}`);\n          }\n        }\n        \n        // Update our tracked state\n        this.originalBytes = createSafePDFBytes(safeBytes);\n        this.isModified = false;\n        \n        console.log(`\u2705 PDF saved and validated successfully: ${safeBytes.byteLength} bytes`);\n        return safeBytes;\n        \n      } catch (error) {\n        lastError = error as Error;\n        console.error(`\u274C Save attempt ${attempt} failed:`, lastError.message);\n        \n        // If this is not the last attempt, wait before retrying\n        if (attempt < maxRetries) {\n          console.log(`\u23F3 Waiting before retry attempt ${attempt + 1}...`);\n          await new Promise(resolve => setTimeout(resolve, 1000 * attempt));\n          \n          // Try to recover by creating a fresh PDF instance from current state\n          if (this.originalBytes) {\n            try {\n              console.log('\uD83D\uDD04 Attempting to recover PDF state for retry...');\n              const recoveredPDF = await PDFDocument.load(this.originalBytes);\n              this.currentPDF = recoveredPDF;\n              console.log('\u2705 PDF state recovered for retry');\n            } catch (recoveryError) {\n              console.warn('\u26A0\uFE0F Could not recover PDF state:', (recoveryError as Error).message);\n            }\n          }\n        }\n      }\n    }\n    \n    // If all attempts failed, throw the last error with context\n    const errorMessage = `Failed to save PDF after ${maxRetries} attempts: ${lastError?.message || 'Unknown error'}`;\n    console.error('\u274C All save attempts failed:', errorMessage);\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * Load a PDF document from binary data using safe loading\n   * @param data PDF binary data\n   * @returns Promise with PDF document proxy\n   */\n  async loadPDF(data: Uint8Array): Promise<PDFDocumentProxy> {\n    try {\n      console.log('\uD83D\uDCC4 Loading PDF document with enhanced safety...');\n      \n      // Use the safe loading utility\n      const pdf = await loadPDFSafely(data);\n      return pdf;\n      \n    } catch (error) {\n      console.error('\u274C Error loading PDF:', error);\n      throw new Error(`Failed to load PDF document: ${error.message}`);\n    }\n  }\n\n  async createPDF(): Promise<PDFDocument> {\n    return await PDFDocument.create();\n  }\n\n  async copyPages(\n    sourcePdf: PDFDocument,\n    pageIndices: number[]\n  ): Promise<PDFPage[]> {\n    return await sourcePdf.copyPages(sourcePdf, pageIndices);\n  }\n\n  // Merge multiple PDFs into one\n  async mergePDFs(pdfBuffers: Uint8Array[]): Promise<Uint8Array> {\n    const mergedPdf = await PDFDocument.create();\n    \n    for (const buffer of pdfBuffers) {\n      const pdf = await PDFDocument.load(buffer);\n      const pages = await mergedPdf.copyPages(pdf, pdf.getPages().map((_, i) => i));\n      pages.forEach(page => mergedPdf.addPage(page));\n    }\n    \n    return await mergedPdf.save();\n  }\n\n  // Split PDF at specified page\n  async splitPDF(\n    pdfBytes: Uint8Array,\n    splitPage: number\n  ): Promise<{ first: Uint8Array; second: Uint8Array }> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const totalPages = pdfDoc.getPageCount();\n    \n    if (splitPage < 1 || splitPage >= totalPages) {\n      throw new Error('Invalid split page number');\n    }\n    \n    // Create first part\n    const firstPdf = await PDFDocument.create();\n    const firstPages = await firstPdf.copyPages(\n      pdfDoc,\n      Array.from({ length: splitPage }, (_, i) => i)\n    );\n    firstPages.forEach(page => firstPdf.addPage(page));\n    \n    // Create second part\n    const secondPdf = await PDFDocument.create();\n    const secondPages = await secondPdf.copyPages(\n      pdfDoc,\n      Array.from({ length: totalPages - splitPage }, (_, i) => i + splitPage)\n    );\n    secondPages.forEach(page => secondPdf.addPage(page));\n    \n    return {\n      first: await firstPdf.save(),\n      second: await secondPdf.save()\n    };\n  }\n\n  // Extract specific pages\n  async extractPages(\n    pdfBytes: Uint8Array,\n    pageNumbers: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const extractedPdf = await PDFDocument.create();\n    \n    // Convert page numbers to indices (0-based)\n    const indices = pageNumbers.map(num => num - 1);\n    const pages = await extractedPdf.copyPages(pdfDoc, indices);\n    pages.forEach(page => extractedPdf.addPage(page));\n    \n    return await extractedPdf.save();\n  }\n\n  // Rotate pages\n  async rotatePages(\n    pdfBytes: Uint8Array,\n    rotation: number,\n    pageNumbers?: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    \n    const targetPages = pageNumbers \n      ? pageNumbers.map(n => pages[n - 1])\n      : pages;\n    \n    targetPages.forEach(page => {\n      const currentRotation = page.getRotation();\n      page.setRotation(degrees(currentRotation.angle + rotation));\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Insert blank page\n  async insertBlankPage(\n    pdfBytes: Uint8Array,\n    afterPage: number,\n    width: number = 595.28, // A4 width in points\n    height: number = 841.89 // A4 height in points\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.insertPage(afterPage, [width, height]);\n    \n    // Add placeholder text\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    page.drawText('Blank Page', {\n      x: 50,\n      y: height - 50,\n      size: 10,\n      font,\n      color: rgb(0.8, 0.8, 0.8)\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Delete pages\n  async deletePages(\n    pdfBytes: Uint8Array,\n    pageNumbers: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Sort in descending order to avoid index shifting issues\n    const sortedPages = [...pageNumbers].sort((a, b) => b - a);\n    \n    sortedPages.forEach(pageNum => {\n      if (pageNum > 0 && pageNum <= pdfDoc.getPageCount()) {\n        pdfDoc.removePage(pageNum - 1);\n      }\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Compress PDF (simplified compression)\n  async compressPDF(\n    pdfBytes: Uint8Array,\n    quality: 'low' | 'medium' | 'high' = 'medium'\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Compression options based on quality\n    const options = {\n      low: { useObjectStreams: true, compress: true },\n      medium: { useObjectStreams: false, compress: true },\n      high: { useObjectStreams: false, compress: false }\n    };\n    \n    const saveOptions = options[quality];\n    return await pdfDoc.save(saveOptions);\n  }\n\n  // Add watermark to PDF\n  async addWatermark(\n    pdfBytes: Uint8Array,\n    watermarkText: string,\n    options: {\n      fontSize?: number;\n      opacity?: number;\n      rotation?: number;\n      color?: { r: number; g: number; b: number };\n    } = {}\n  ): Promise<Uint8Array> {\n    const {\n      fontSize = 50,\n      opacity = 0.3,\n      rotation = 45,\n      color = { r: 0.5, g: 0.5, b: 0.5 }\n    } = options;\n    \n    try {\n      console.log('\uD83C\uDFF7\uFE0F Adding watermark to PDF...');\n      \n      // Create safe copy to prevent ArrayBuffer detachment\n      const safePdfBytes = createSafePDFBytes(pdfBytes);\n      const pdfDoc = await PDFDocument.load(safePdfBytes);\n      const pages = pdfDoc.getPages();\n      const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n      \n      for (const page of pages) {\n        const { width, height } = page.getSize();\n        const textWidth = font.widthOfTextAtSize(watermarkText, fontSize);\n        \n        page.drawText(watermarkText, {\n          x: (width - textWidth) / 2,\n          y: height / 2,\n          size: fontSize,\n          font,\n          color: rgb(color.r, color.g, color.b),\n          opacity,\n          rotate: degrees(rotation)\n        });\n      }\n      \n      const result = await pdfDoc.save();\n      const safeResult = createSafePDFBytes(result);\n      \n      console.log(`\u2705 Watermark added successfully to ${pages.length} pages`);\n      return safeResult;\n      \n    } catch (error) {\n      console.error('\u274C Watermark operation failed:', error);\n      throw new Error(`Failed to add watermark: ${error.message}`);\n    }\n  }\n\n  // Create a form on the PDF\n  createForm() {\n    const currentPDF = this.getCurrentPDF();\n    \n    try {\n      // Get or create the form\n      const form = currentPDF.getForm();\n      this.markModified();\n      console.log('\u2705 PDF form accessed/created successfully');\n      return form;\n    } catch (error) {\n      console.error('\u274C Form creation failed:', error);\n      throw new Error(`Failed to create/access form: ${error.message}`);\n    }\n  }\n\n  // Add page numbers\n  async addPageNumbers(\n    pdfBytes: Uint8Array,\n    options: {\n      position?: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n      format?: string; // e.g., \"Page {n} of {total}\"\n      fontSize?: number;\n      margin?: number;\n    } = {}\n  ): Promise<Uint8Array> {\n    const {\n      position = 'bottom-center',\n      format = 'Page {n} of {total}',\n      fontSize = 10,\n      margin = 30\n    } = options;\n    \n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    const totalPages = pages.length;\n    \n    pages.forEach((page, index) => {\n      const { width, height } = page.getSize();\n      const pageNum = index + 1;\n      const text = format\n        .replace('{n}', pageNum.toString())\n        .replace('{total}', totalPages.toString());\n      \n      const textWidth = font.widthOfTextAtSize(text, fontSize);\n      \n      let x = margin;\n      let y = margin;\n      \n      // Calculate position\n      if (position.includes('center')) {\n        x = (width - textWidth) / 2;\n      } else if (position.includes('right')) {\n        x = width - textWidth - margin;\n      }\n      \n      if (position.includes('top')) {\n        y = height - margin;\n      }\n      \n      page.drawText(text, {\n        x,\n        y,\n        size: fontSize,\n        font,\n        color: rgb(0, 0, 0)\n      });\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Get PDF metadata\n  async getMetadata(pdfBytes: Uint8Array): Promise<PDFMetadata> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    return {\n      title: pdfDoc.getTitle(),\n      author: pdfDoc.getAuthor(),\n      subject: pdfDoc.getSubject(),\n      keywords: pdfDoc.getKeywords()?.split(',').map(k => k.trim()) || [],\n      creator: pdfDoc.getCreator(),\n      producer: pdfDoc.getProducer(),\n      creationDate: pdfDoc.getCreationDate(),\n      modificationDate: pdfDoc.getModificationDate()\n    };\n  }\n\n  // Set PDF metadata\n  async setMetadata(\n    pdfBytes: Uint8Array,\n    metadata: PDFMetadata\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    if (metadata.title) pdfDoc.setTitle(metadata.title);\n    if (metadata.author) pdfDoc.setAuthor(metadata.author);\n    if (metadata.subject) pdfDoc.setSubject(metadata.subject);\n    if (metadata.keywords && metadata.keywords.length > 0) {\n      // setKeywords expects string array in pdf-lib\n      pdfDoc.setKeywords(metadata.keywords);\n    }\n    if (metadata.creator) pdfDoc.setCreator(metadata.creator);\n    if (metadata.producer) pdfDoc.setProducer(metadata.producer);\n    if (metadata.creationDate) pdfDoc.setCreationDate(metadata.creationDate);\n    if (metadata.modificationDate) pdfDoc.setModificationDate(metadata.modificationDate);\n    \n    return await pdfDoc.save();\n  }\n\n  // Optimize PDF for web\n  async optimizeForWeb(pdfBytes: Uint8Array): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Web optimization settings\n    return await pdfDoc.save({\n      useObjectStreams: false,\n      addDefaultPage: false,\n      objectsPerTick: 200,\n      updateFieldAppearances: true\n    });\n  }\n\n  // Add image to PDF\n  async addImage(\n    pdfBytes: Uint8Array,\n    imageBytes: Uint8Array,\n    pageNumber: number,\n    options: {\n      x: number;\n      y: number;\n      width?: number;\n      height?: number;\n      opacity?: number;\n    }\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.getPage(pageNumber - 1);\n    \n    let image: PDFImage;\n    \n    // Detect image type and embed accordingly\n    const uint8 = new Uint8Array(imageBytes);\n    if (uint8[0] === 0xFF && uint8[1] === 0xD8) {\n      // JPEG\n      image = await pdfDoc.embedJpg(imageBytes);\n    } else if (uint8[0] === 0x89 && uint8[1] === 0x50) {\n      // PNG\n      image = await pdfDoc.embedPng(imageBytes);\n    } else {\n      throw new Error('Unsupported image format');\n    }\n    \n    const { width: imgWidth, height: imgHeight } = image;\n    const width = options.width || imgWidth;\n    const height = options.height || imgHeight;\n    \n    page.drawImage(image, {\n      x: options.x,\n      y: options.y,\n      width,\n      height,\n      opacity: options.opacity || 1\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Reorder pages\n  async reorderPages(\n    pdfBytes: Uint8Array,\n    newOrder: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const reorderedPdf = await PDFDocument.create();\n    \n    // Convert 1-based to 0-based indices\n    const indices = newOrder.map(n => n - 1);\n    const pages = await reorderedPdf.copyPages(pdfDoc, indices);\n    pages.forEach(page => reorderedPdf.addPage(page));\n    \n    return await reorderedPdf.save();\n  }\n\n  // Get page dimensions\n  async getPageDimensions(\n    pdfBytes: Uint8Array,\n    pageNumber: number\n  ): Promise<{ width: number; height: number; rotation: number }> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.getPage(pageNumber - 1);\n    const { width, height } = page.getSize();\n    const rotation = page.getRotation();\n    \n    return {\n      width,\n      height,\n      rotation: rotation.angle\n    };\n  }\n\n  // Advanced page manipulation tools\n  \n  /**\n   * Crop pages to specified dimensions\n   */\n  async cropPages(\n    pdfBytes: Uint8Array,\n    cropArea: { x: number; y: number; width: number; height: number },\n    pageNumbers?: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    \n    const targetPages = pageNumbers \n      ? pageNumbers.map(n => pages[n - 1]).filter(p => p)\n      : pages;\n    \n    targetPages.forEach(page => {\n      page.setCropBox(cropArea.x, cropArea.y, cropArea.width, cropArea.height);\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  /**\n   * Batch process multiple PDFs\n   */\n  async batchProcess(\n    operations: Array<{\n      type: 'merge' | 'split' | 'rotate' | 'compress' | 'watermark';\n      inputFiles: Uint8Array[];\n      options?: any;\n    }>\n  ): Promise<Uint8Array[]> {\n    const results: Uint8Array[] = [];\n    \n    for (const operation of operations) {\n      try {\n        switch (operation.type) {\n          case 'merge':\n            const merged = await this.mergePDFs(operation.inputFiles);\n            results.push(merged);\n            break;\n            \n          case 'rotate':\n            for (const file of operation.inputFiles) {\n              const rotated = await this.rotatePages(\n                file,\n                operation.options?.rotation || 90,\n                operation.options?.pageNumbers\n              );\n              results.push(rotated);\n            }\n            break;\n            \n          case 'compress':\n            for (const file of operation.inputFiles) {\n              const compressed = await this.compressPDF(\n                file,\n                operation.options?.quality || 'medium'\n              );\n              results.push(compressed);\n            }\n            break;\n            \n          case 'watermark':\n            for (const file of operation.inputFiles) {\n              const watermarked = await this.addWatermark(\n                file,\n                operation.options?.text || 'WATERMARK',\n                operation.options?.options || {}\n              );\n              results.push(watermarked);\n            }\n            break;\n            \n          default:\n            console.warn(`Unsupported batch operation: ${operation.type}`);\n            break;\n        }\n      } catch (error) {\n        console.error(`Batch operation ${operation.type} failed:`, error);\n        // Continue with other operations\n      }\n    }\n    \n    return results;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ec7d9e9b02786742a580b8bab604738973c8e981"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fumnfmdy7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fumnfmdy7();
var __createBinding =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[0]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fumnfmdy7().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[0]++;
  cov_2fumnfmdy7().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[2][0]++;
    cov_2fumnfmdy7().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2fumnfmdy7().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[5][1]++,
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[3][0]++;
    cov_2fumnfmdy7().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[1]++;
        cov_2fumnfmdy7().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[3][1]++;
  }
  cov_2fumnfmdy7().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2fumnfmdy7().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[2]++;
  cov_2fumnfmdy7().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[7][0]++;
    cov_2fumnfmdy7().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[7][1]++;
  }
  cov_2fumnfmdy7().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[11]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fumnfmdy7().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[3]++;
  cov_2fumnfmdy7().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2fumnfmdy7().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[4]++;
  cov_2fumnfmdy7().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[14]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[5]++;
  cov_2fumnfmdy7().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[6]++;
    cov_2fumnfmdy7().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[17]++, []);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[12][0]++;
          cov_2fumnfmdy7().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2fumnfmdy7().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[8]++;
    cov_2fumnfmdy7().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[13][0]++;
      cov_2fumnfmdy7().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[26]++, {});
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[15][0]++;
      cov_2fumnfmdy7().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[16][0]++;
          cov_2fumnfmdy7().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[15][1]++;
    }
    cov_2fumnfmdy7().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2fumnfmdy7().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fumnfmdy7().s[36]++;
exports.PDFService = void 0;
const pdf_lib_1 =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[37]++, require("pdf-lib"));
const pdfjsLib =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[38]++, __importStar(require("pdfjs-dist")));
const utils_1 =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[39]++, require("../../common/utils"));
class PDFService {
  currentPDF =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[40]++, null);
  originalBytes =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[41]++, null);
  isModified =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[42]++, false);
  constructor() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[9]++;
    cov_2fumnfmdy7().s[43]++;
    // Note: Worker configuration is handled in index.tsx to avoid conflicts
    // Just verify it's configured
    if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[17][0]++;
      cov_2fumnfmdy7().s[44]++;
      console.warn('⚠️ PDF.js worker not configured - this may cause issues');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[17][1]++;
    }
  }
  /**
   * Set the current PDF document and track its state
   */
  setCurrentPDF(pdfDoc, originalBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[10]++;
    cov_2fumnfmdy7().s[45]++;
    this.currentPDF = pdfDoc;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[46]++;
    this.originalBytes = (0, utils_1.createSafePDFBytes)(originalBytes);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[47]++;
    this.isModified = false;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[48]++;
    console.log('✅ Current PDF set with safe byte tracking');
  }
  /**
   * Get current PDF with validation
   */
  getCurrentPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[11]++;
    cov_2fumnfmdy7().s[49]++;
    if (!this.currentPDF) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[18][0]++;
      cov_2fumnfmdy7().s[50]++;
      throw new Error('No PDF document is currently loaded');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[18][1]++;
    }
    cov_2fumnfmdy7().s[51]++;
    return this.currentPDF;
  }
  /**
   * Mark document as modified for save tracking
   */
  markModified() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[12]++;
    cov_2fumnfmdy7().s[52]++;
    this.isModified = true;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[53]++;
    console.log('📝 PDF marked as modified');
  }
  /**
   * Check if document has unsaved changes
   */
  hasUnsavedChanges() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[13]++;
    cov_2fumnfmdy7().s[54]++;
    return this.isModified;
  }
  /**
   * Save current PDF with comprehensive error recovery and ArrayBuffer detachment prevention
   */
  async saveCurrentPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[14]++;
    cov_2fumnfmdy7().s[55]++;
    if (!this.currentPDF) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[19][0]++;
      cov_2fumnfmdy7().s[56]++;
      throw new Error('No PDF document to save');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[19][1]++;
    }
    cov_2fumnfmdy7().s[57]++;
    console.log('💾 Starting PDF save with enhanced error recovery...');
    // Retry logic for robust saving
    const maxRetries =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[58]++, 3);
    let lastError =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[59]++, null);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[60]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[61]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[62]++;
      try {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[63]++;
        console.log(`💾 Save attempt ${attempt}/${maxRetries}`);
        // Create safe save operation with proper byte handling
        const savedBytes =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[64]++, await this.currentPDF.save({
          useObjectStreams: false,
          // Disable for better compatibility
          addDefaultPage: false,
          // Don't add empty pages
          updateFieldAppearances: true // Update form field appearances
        }));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[65]++;
        console.log(`🔍 PDF saved to buffer: ${savedBytes.byteLength} bytes`);
        // Critical validation step
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[66]++;
        if (
        /* istanbul ignore next */
        (cov_2fumnfmdy7().b[21][0]++, !savedBytes) ||
        /* istanbul ignore next */
        (cov_2fumnfmdy7().b[21][1]++, savedBytes.byteLength === 0)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[20][0]++;
          cov_2fumnfmdy7().s[67]++;
          throw new Error('PDF save produced empty or null data');
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[20][1]++;
        }
        // Validate the saved PDF data before processing
        cov_2fumnfmdy7().s[68]++;
        if (!(0, utils_1.validatePDFBytes)(savedBytes)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[22][0]++;
          cov_2fumnfmdy7().s[69]++;
          throw new Error('PDF save operation produced invalid data - failed header validation');
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[22][1]++;
        }
        // Create multiple safe copies to prevent detachment issues
        cov_2fumnfmdy7().s[70]++;
        console.log('🔧 Creating detachment-resistant PDF bytes...');
        const safeBytes =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[71]++, (0, utils_1.createSafePDFBytes)(savedBytes));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[72]++;
        console.log(`🔍 Safe bytes created: ${safeBytes.byteLength} bytes`);
        // Triple validation to ensure integrity
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[73]++;
        if (!(0, utils_1.validatePDFBytes)(safeBytes)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[23][0]++;
          cov_2fumnfmdy7().s[74]++;
          throw new Error('Safe PDF bytes creation corrupted the data');
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[23][1]++;
        }
        // Verify byte-for-byte integrity (sample check)
        const sampleSize =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[75]++, Math.min(100, savedBytes.length));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[76]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[77]++, 0); i < sampleSize; i++) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().s[78]++;
          if (safeBytes[i] !== savedBytes[i]) {
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[24][0]++;
            cov_2fumnfmdy7().s[79]++;
            throw new Error(`Byte integrity check failed at position ${i}`);
          } else
          /* istanbul ignore next */
          {
            cov_2fumnfmdy7().b[24][1]++;
          }
        }
        // Update our tracked state
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[80]++;
        this.originalBytes = (0, utils_1.createSafePDFBytes)(safeBytes);
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[81]++;
        this.isModified = false;
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[82]++;
        console.log(`✅ PDF saved and validated successfully: ${safeBytes.byteLength} bytes`);
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[83]++;
        return safeBytes;
      } catch (error) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[84]++;
        lastError = error;
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[85]++;
        console.error(`❌ Save attempt ${attempt} failed:`, lastError.message);
        // If this is not the last attempt, wait before retrying
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[86]++;
        if (attempt < maxRetries) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[25][0]++;
          cov_2fumnfmdy7().s[87]++;
          console.log(`⏳ Waiting before retry attempt ${attempt + 1}...`);
          /* istanbul ignore next */
          cov_2fumnfmdy7().s[88]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_2fumnfmdy7().f[15]++;
            cov_2fumnfmdy7().s[89]++;
            return setTimeout(resolve, 1000 * attempt);
          });
          // Try to recover by creating a fresh PDF instance from current state
          /* istanbul ignore next */
          cov_2fumnfmdy7().s[90]++;
          if (this.originalBytes) {
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[26][0]++;
            cov_2fumnfmdy7().s[91]++;
            try {
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[92]++;
              console.log('🔄 Attempting to recover PDF state for retry...');
              const recoveredPDF =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[93]++, await pdf_lib_1.PDFDocument.load(this.originalBytes));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[94]++;
              this.currentPDF = recoveredPDF;
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[95]++;
              console.log('✅ PDF state recovered for retry');
            } catch (recoveryError) {
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[96]++;
              console.warn('⚠️ Could not recover PDF state:', recoveryError.message);
            }
          } else
          /* istanbul ignore next */
          {
            cov_2fumnfmdy7().b[26][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[25][1]++;
        }
      }
    }
    // If all attempts failed, throw the last error with context
    const errorMessage =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[97]++, `Failed to save PDF after ${maxRetries} attempts: ${
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[27][0]++, lastError?.message) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[27][1]++, 'Unknown error')}`);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[98]++;
    console.error('❌ All save attempts failed:', errorMessage);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[99]++;
    throw new Error(errorMessage);
  }
  /**
   * Load a PDF document from binary data using safe loading
   * @param data PDF binary data
   * @returns Promise with PDF document proxy
   */
  async loadPDF(data) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[16]++;
    cov_2fumnfmdy7().s[100]++;
    try {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[101]++;
      console.log('📄 Loading PDF document with enhanced safety...');
      // Use the safe loading utility
      const pdf =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[102]++, await (0, utils_1.loadPDFSafely)(data));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[103]++;
      return pdf;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[104]++;
      console.error('❌ Error loading PDF:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[105]++;
      throw new Error(`Failed to load PDF document: ${error.message}`);
    }
  }
  async createPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[17]++;
    cov_2fumnfmdy7().s[106]++;
    return await pdf_lib_1.PDFDocument.create();
  }
  async copyPages(sourcePdf, pageIndices) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[18]++;
    cov_2fumnfmdy7().s[107]++;
    return await sourcePdf.copyPages(sourcePdf, pageIndices);
  }
  // Merge multiple PDFs into one
  async mergePDFs(pdfBuffers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[19]++;
    const mergedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[108]++, await pdf_lib_1.PDFDocument.create());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[109]++;
    for (const buffer of pdfBuffers) {
      const pdf =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[110]++, await pdf_lib_1.PDFDocument.load(buffer));
      const pages =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[111]++, await mergedPdf.copyPages(pdf, pdf.getPages().map((_, i) => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[20]++;
        cov_2fumnfmdy7().s[112]++;
        return i;
      })));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[113]++;
      pages.forEach(page => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[21]++;
        cov_2fumnfmdy7().s[114]++;
        return mergedPdf.addPage(page);
      });
    }
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[115]++;
    return await mergedPdf.save();
  }
  // Split PDF at specified page
  async splitPDF(pdfBytes, splitPage) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[22]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[116]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const totalPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[117]++, pdfDoc.getPageCount());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[118]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[29][0]++, splitPage < 1) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[29][1]++, splitPage >= totalPages)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[28][0]++;
      cov_2fumnfmdy7().s[119]++;
      throw new Error('Invalid split page number');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[28][1]++;
    }
    // Create first part
    const firstPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[120]++, await pdf_lib_1.PDFDocument.create());
    const firstPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[121]++, await firstPdf.copyPages(pdfDoc, Array.from({
      length: splitPage
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[23]++;
      cov_2fumnfmdy7().s[122]++;
      return i;
    })));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[123]++;
    firstPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[24]++;
      cov_2fumnfmdy7().s[124]++;
      return firstPdf.addPage(page);
    });
    // Create second part
    const secondPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[125]++, await pdf_lib_1.PDFDocument.create());
    const secondPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[126]++, await secondPdf.copyPages(pdfDoc, Array.from({
      length: totalPages - splitPage
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[25]++;
      cov_2fumnfmdy7().s[127]++;
      return i + splitPage;
    })));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[128]++;
    secondPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[26]++;
      cov_2fumnfmdy7().s[129]++;
      return secondPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[130]++;
    return {
      first: await firstPdf.save(),
      second: await secondPdf.save()
    };
  }
  // Extract specific pages
  async extractPages(pdfBytes, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[27]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[131]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const extractedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[132]++, await pdf_lib_1.PDFDocument.create());
    // Convert page numbers to indices (0-based)
    const indices =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[133]++, pageNumbers.map(num => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[28]++;
      cov_2fumnfmdy7().s[134]++;
      return num - 1;
    }));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[135]++, await extractedPdf.copyPages(pdfDoc, indices));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[136]++;
    pages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[29]++;
      cov_2fumnfmdy7().s[137]++;
      return extractedPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[138]++;
    return await extractedPdf.save();
  }
  // Rotate pages
  async rotatePages(pdfBytes, rotation, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[30]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[139]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[140]++, pdfDoc.getPages());
    const targetPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[141]++, pageNumbers ?
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[30][0]++, pageNumbers.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[31]++;
      cov_2fumnfmdy7().s[142]++;
      return pages[n - 1];
    })) :
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[30][1]++, pages));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[143]++;
    targetPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[32]++;
      const currentRotation =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[144]++, page.getRotation());
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[145]++;
      page.setRotation((0, pdf_lib_1.degrees)(currentRotation.angle + rotation));
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[146]++;
    return await pdfDoc.save();
  }
  // Insert blank page
  async insertBlankPage(pdfBytes, afterPage, width =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[31][0]++, 595.28),
  // A4 width in points
  height =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[32][0]++, 841.89) // A4 height in points
  ) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[33]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[147]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[148]++, pdfDoc.insertPage(afterPage, [width, height]));
    // Add placeholder text
    const font =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[149]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[150]++;
    page.drawText('Blank Page', {
      x: 50,
      y: height - 50,
      size: 10,
      font,
      color: (0, pdf_lib_1.rgb)(0.8, 0.8, 0.8)
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[151]++;
    return await pdfDoc.save();
  }
  // Delete pages
  async deletePages(pdfBytes, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[34]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[152]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Sort in descending order to avoid index shifting issues
    const sortedPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[153]++, [...pageNumbers].sort((a, b) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[35]++;
      cov_2fumnfmdy7().s[154]++;
      return b - a;
    }));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[155]++;
    sortedPages.forEach(pageNum => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[36]++;
      cov_2fumnfmdy7().s[156]++;
      if (
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[34][0]++, pageNum > 0) &&
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[34][1]++, pageNum <= pdfDoc.getPageCount())) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[33][0]++;
        cov_2fumnfmdy7().s[157]++;
        pdfDoc.removePage(pageNum - 1);
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[33][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[158]++;
    return await pdfDoc.save();
  }
  // Compress PDF (simplified compression)
  async compressPDF(pdfBytes, quality =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[35][0]++, 'medium')) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[37]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[159]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Compression options based on quality
    const options =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[160]++, {
      low: {
        useObjectStreams: true,
        compress: true
      },
      medium: {
        useObjectStreams: false,
        compress: true
      },
      high: {
        useObjectStreams: false,
        compress: false
      }
    });
    const saveOptions =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[161]++, options[quality]);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[162]++;
    return await pdfDoc.save(saveOptions);
  }
  // Add watermark to PDF
  async addWatermark(pdfBytes, watermarkText, options =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[36][0]++, {})) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[38]++;
    const {
      fontSize =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[37][0]++, 50),
      opacity =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[38][0]++, 0.3),
      rotation =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[39][0]++, 45),
      color =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[40][0]++, {
        r: 0.5,
        g: 0.5,
        b: 0.5
      })
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[163]++, options);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[164]++;
    try {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[165]++;
      console.log('🏷️ Adding watermark to PDF...');
      // Create safe copy to prevent ArrayBuffer detachment
      const safePdfBytes =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[166]++, (0, utils_1.createSafePDFBytes)(pdfBytes));
      const pdfDoc =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[167]++, await pdf_lib_1.PDFDocument.load(safePdfBytes));
      const pages =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[168]++, pdfDoc.getPages());
      const font =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[169]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[170]++;
      for (const page of pages) {
        const {
          width,
          height
        } =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[171]++, page.getSize());
        const textWidth =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[172]++, font.widthOfTextAtSize(watermarkText, fontSize));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[173]++;
        page.drawText(watermarkText, {
          x: (width - textWidth) / 2,
          y: height / 2,
          size: fontSize,
          font,
          color: (0, pdf_lib_1.rgb)(color.r, color.g, color.b),
          opacity,
          rotate: (0, pdf_lib_1.degrees)(rotation)
        });
      }
      const result =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[174]++, await pdfDoc.save());
      const safeResult =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[175]++, (0, utils_1.createSafePDFBytes)(result));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[176]++;
      console.log(`✅ Watermark added successfully to ${pages.length} pages`);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[177]++;
      return safeResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[178]++;
      console.error('❌ Watermark operation failed:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[179]++;
      throw new Error(`Failed to add watermark: ${error.message}`);
    }
  }
  // Create a form on the PDF
  createForm() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[39]++;
    const currentPDF =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[180]++, this.getCurrentPDF());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[181]++;
    try {
      // Get or create the form
      const form =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[182]++, currentPDF.getForm());
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[183]++;
      this.markModified();
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[184]++;
      console.log('✅ PDF form accessed/created successfully');
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[185]++;
      return form;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[186]++;
      console.error('❌ Form creation failed:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[187]++;
      throw new Error(`Failed to create/access form: ${error.message}`);
    }
  }
  // Add page numbers
  async addPageNumbers(pdfBytes, options =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[41][0]++, {})) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[40]++;
    const {
      position =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[42][0]++, 'bottom-center'),
      format =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[43][0]++, 'Page {n} of {total}'),
      fontSize =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[44][0]++, 10),
      margin =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[45][0]++, 30)
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[188]++, options);
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[189]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[190]++, pdfDoc.getPages());
    const font =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[191]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    const totalPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[192]++, pages.length);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[193]++;
    pages.forEach((page, index) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[41]++;
      const {
        width,
        height
      } =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[194]++, page.getSize());
      const pageNum =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[195]++, index + 1);
      const text =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[196]++, format.replace('{n}', pageNum.toString()).replace('{total}', totalPages.toString()));
      const textWidth =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[197]++, font.widthOfTextAtSize(text, fontSize));
      let x =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[198]++, margin);
      let y =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[199]++, margin);
      // Calculate position
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[200]++;
      if (position.includes('center')) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[46][0]++;
        cov_2fumnfmdy7().s[201]++;
        x = (width - textWidth) / 2;
      } else {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[46][1]++;
        cov_2fumnfmdy7().s[202]++;
        if (position.includes('right')) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[47][0]++;
          cov_2fumnfmdy7().s[203]++;
          x = width - textWidth - margin;
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[47][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[204]++;
      if (position.includes('top')) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[48][0]++;
        cov_2fumnfmdy7().s[205]++;
        y = height - margin;
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[48][1]++;
      }
      cov_2fumnfmdy7().s[206]++;
      page.drawText(text, {
        x,
        y,
        size: fontSize,
        font,
        color: (0, pdf_lib_1.rgb)(0, 0, 0)
      });
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[207]++;
    return await pdfDoc.save();
  }
  // Get PDF metadata
  async getMetadata(pdfBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[42]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[208]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[209]++;
    return {
      title: pdfDoc.getTitle(),
      author: pdfDoc.getAuthor(),
      subject: pdfDoc.getSubject(),
      keywords:
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[49][0]++, pdfDoc.getKeywords()?.split(',').map(k => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[43]++;
        cov_2fumnfmdy7().s[210]++;
        return k.trim();
      })) ||
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[49][1]++, []),
      creator: pdfDoc.getCreator(),
      producer: pdfDoc.getProducer(),
      creationDate: pdfDoc.getCreationDate(),
      modificationDate: pdfDoc.getModificationDate()
    };
  }
  // Set PDF metadata
  async setMetadata(pdfBytes, metadata) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[44]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[211]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[212]++;
    if (metadata.title) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[50][0]++;
      cov_2fumnfmdy7().s[213]++;
      pdfDoc.setTitle(metadata.title);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[50][1]++;
    }
    cov_2fumnfmdy7().s[214]++;
    if (metadata.author) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[51][0]++;
      cov_2fumnfmdy7().s[215]++;
      pdfDoc.setAuthor(metadata.author);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[51][1]++;
    }
    cov_2fumnfmdy7().s[216]++;
    if (metadata.subject) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[52][0]++;
      cov_2fumnfmdy7().s[217]++;
      pdfDoc.setSubject(metadata.subject);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[52][1]++;
    }
    cov_2fumnfmdy7().s[218]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[54][0]++, metadata.keywords) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[54][1]++, metadata.keywords.length > 0)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[53][0]++;
      cov_2fumnfmdy7().s[219]++;
      // setKeywords expects string array in pdf-lib
      pdfDoc.setKeywords(metadata.keywords);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[53][1]++;
    }
    cov_2fumnfmdy7().s[220]++;
    if (metadata.creator) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[55][0]++;
      cov_2fumnfmdy7().s[221]++;
      pdfDoc.setCreator(metadata.creator);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[55][1]++;
    }
    cov_2fumnfmdy7().s[222]++;
    if (metadata.producer) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[56][0]++;
      cov_2fumnfmdy7().s[223]++;
      pdfDoc.setProducer(metadata.producer);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[56][1]++;
    }
    cov_2fumnfmdy7().s[224]++;
    if (metadata.creationDate) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[57][0]++;
      cov_2fumnfmdy7().s[225]++;
      pdfDoc.setCreationDate(metadata.creationDate);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[57][1]++;
    }
    cov_2fumnfmdy7().s[226]++;
    if (metadata.modificationDate) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[58][0]++;
      cov_2fumnfmdy7().s[227]++;
      pdfDoc.setModificationDate(metadata.modificationDate);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[58][1]++;
    }
    cov_2fumnfmdy7().s[228]++;
    return await pdfDoc.save();
  }
  // Optimize PDF for web
  async optimizeForWeb(pdfBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[45]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[229]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Web optimization settings
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[230]++;
    return await pdfDoc.save({
      useObjectStreams: false,
      addDefaultPage: false,
      objectsPerTick: 200,
      updateFieldAppearances: true
    });
  }
  // Add image to PDF
  async addImage(pdfBytes, imageBytes, pageNumber, options) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[46]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[231]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[232]++, pdfDoc.getPage(pageNumber - 1));
    let image;
    // Detect image type and embed accordingly
    const uint8 =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[233]++, new Uint8Array(imageBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[234]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[60][0]++, uint8[0] === 0xFF) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[60][1]++, uint8[1] === 0xD8)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[59][0]++;
      cov_2fumnfmdy7().s[235]++;
      // JPEG
      image = await pdfDoc.embedJpg(imageBytes);
    } else {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[59][1]++;
      cov_2fumnfmdy7().s[236]++;
      if (
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[62][0]++, uint8[0] === 0x89) &&
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[62][1]++, uint8[1] === 0x50)) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[61][0]++;
        cov_2fumnfmdy7().s[237]++;
        // PNG
        image = await pdfDoc.embedPng(imageBytes);
      } else {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[61][1]++;
        cov_2fumnfmdy7().s[238]++;
        throw new Error('Unsupported image format');
      }
    }
    const {
      width: imgWidth,
      height: imgHeight
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[239]++, image);
    const width =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[240]++,
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[63][0]++, options.width) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[63][1]++, imgWidth));
    const height =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[241]++,
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[64][0]++, options.height) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[64][1]++, imgHeight));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[242]++;
    page.drawImage(image, {
      x: options.x,
      y: options.y,
      width,
      height,
      opacity:
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[65][0]++, options.opacity) ||
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[65][1]++, 1)
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[243]++;
    return await pdfDoc.save();
  }
  // Reorder pages
  async reorderPages(pdfBytes, newOrder) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[47]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[244]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const reorderedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[245]++, await pdf_lib_1.PDFDocument.create());
    // Convert 1-based to 0-based indices
    const indices =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[246]++, newOrder.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[48]++;
      cov_2fumnfmdy7().s[247]++;
      return n - 1;
    }));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[248]++, await reorderedPdf.copyPages(pdfDoc, indices));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[249]++;
    pages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[49]++;
      cov_2fumnfmdy7().s[250]++;
      return reorderedPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[251]++;
    return await reorderedPdf.save();
  }
  // Get page dimensions
  async getPageDimensions(pdfBytes, pageNumber) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[50]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[252]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[253]++, pdfDoc.getPage(pageNumber - 1));
    const {
      width,
      height
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[254]++, page.getSize());
    const rotation =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[255]++, page.getRotation());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[256]++;
    return {
      width,
      height,
      rotation: rotation.angle
    };
  }
  // Advanced page manipulation tools
  /**
   * Crop pages to specified dimensions
   */
  async cropPages(pdfBytes, cropArea, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[51]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[257]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[258]++, pdfDoc.getPages());
    const targetPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[259]++, pageNumbers ?
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[66][0]++, pageNumbers.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[52]++;
      cov_2fumnfmdy7().s[260]++;
      return pages[n - 1];
    }).filter(p => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[53]++;
      cov_2fumnfmdy7().s[261]++;
      return p;
    })) :
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[66][1]++, pages));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[262]++;
    targetPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[54]++;
      cov_2fumnfmdy7().s[263]++;
      page.setCropBox(cropArea.x, cropArea.y, cropArea.width, cropArea.height);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[264]++;
    return await pdfDoc.save();
  }
  /**
   * Batch process multiple PDFs
   */
  async batchProcess(operations) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[55]++;
    const results =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[265]++, []);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[266]++;
    for (const operation of operations) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[267]++;
      try {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[268]++;
        switch (operation.type) {
          case 'merge':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[67][0]++;
            const merged =
            /* istanbul ignore next */
            (cov_2fumnfmdy7().s[269]++, await this.mergePDFs(operation.inputFiles));
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[270]++;
            results.push(merged);
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[271]++;
            break;
          case 'rotate':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[67][1]++;
            cov_2fumnfmdy7().s[272]++;
            for (const file of operation.inputFiles) {
              const rotated =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[273]++, await this.rotatePages(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[68][0]++, operation.options?.rotation) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[68][1]++, 90), operation.options?.pageNumbers));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[274]++;
              results.push(rotated);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[275]++;
            break;
          case 'compress':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[67][2]++;
            cov_2fumnfmdy7().s[276]++;
            for (const file of operation.inputFiles) {
              const compressed =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[277]++, await this.compressPDF(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[69][0]++, operation.options?.quality) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[69][1]++, 'medium')));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[278]++;
              results.push(compressed);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[279]++;
            break;
          case 'watermark':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[67][3]++;
            cov_2fumnfmdy7().s[280]++;
            for (const file of operation.inputFiles) {
              const watermarked =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[281]++, await this.addWatermark(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[70][0]++, operation.options?.text) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[70][1]++, 'WATERMARK'),
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[71][0]++, operation.options?.options) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[71][1]++, {})));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[282]++;
              results.push(watermarked);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[283]++;
            break;
          default:
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[67][4]++;
            cov_2fumnfmdy7().s[284]++;
            console.warn(`Unsupported batch operation: ${operation.type}`);
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[285]++;
            break;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[286]++;
        console.error(`Batch operation ${operation.type} failed:`, error);
        // Continue with other operations
      }
    }
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[287]++;
    return results;
  }
}
/* istanbul ignore next */
cov_2fumnfmdy7().s[288]++;
exports.PDFService = PDFService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwZGZfbGliXzEiLCJjb3ZfMmZ1bW5mbWR5NyIsInMiLCJyZXF1aXJlIiwicGRmanNMaWIiLCJfX2ltcG9ydFN0YXIiLCJ1dGlsc18xIiwiUERGU2VydmljZSIsImN1cnJlbnRQREYiLCJvcmlnaW5hbEJ5dGVzIiwiaXNNb2RpZmllZCIsImNvbnN0cnVjdG9yIiwiZiIsIkdsb2JhbFdvcmtlck9wdGlvbnMiLCJ3b3JrZXJTcmMiLCJiIiwiY29uc29sZSIsIndhcm4iLCJzZXRDdXJyZW50UERGIiwicGRmRG9jIiwiY3JlYXRlU2FmZVBERkJ5dGVzIiwibG9nIiwiZ2V0Q3VycmVudFBERiIsIkVycm9yIiwibWFya01vZGlmaWVkIiwiaGFzVW5zYXZlZENoYW5nZXMiLCJzYXZlQ3VycmVudFBERiIsIm1heFJldHJpZXMiLCJsYXN0RXJyb3IiLCJhdHRlbXB0Iiwic2F2ZWRCeXRlcyIsInNhdmUiLCJ1c2VPYmplY3RTdHJlYW1zIiwiYWRkRGVmYXVsdFBhZ2UiLCJ1cGRhdGVGaWVsZEFwcGVhcmFuY2VzIiwiYnl0ZUxlbmd0aCIsInZhbGlkYXRlUERGQnl0ZXMiLCJzYWZlQnl0ZXMiLCJzYW1wbGVTaXplIiwiTWF0aCIsIm1pbiIsImxlbmd0aCIsImkiLCJlcnJvciIsIm1lc3NhZ2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJyZWNvdmVyZWRQREYiLCJQREZEb2N1bWVudCIsImxvYWQiLCJyZWNvdmVyeUVycm9yIiwiZXJyb3JNZXNzYWdlIiwibG9hZFBERiIsImRhdGEiLCJwZGYiLCJsb2FkUERGU2FmZWx5IiwiY3JlYXRlUERGIiwiY3JlYXRlIiwiY29weVBhZ2VzIiwic291cmNlUGRmIiwicGFnZUluZGljZXMiLCJtZXJnZVBERnMiLCJwZGZCdWZmZXJzIiwibWVyZ2VkUGRmIiwiYnVmZmVyIiwicGFnZXMiLCJnZXRQYWdlcyIsIm1hcCIsIl8iLCJmb3JFYWNoIiwicGFnZSIsImFkZFBhZ2UiLCJzcGxpdFBERiIsInBkZkJ5dGVzIiwic3BsaXRQYWdlIiwidG90YWxQYWdlcyIsImdldFBhZ2VDb3VudCIsImZpcnN0UGRmIiwiZmlyc3RQYWdlcyIsIkFycmF5IiwiZnJvbSIsInNlY29uZFBkZiIsInNlY29uZFBhZ2VzIiwiZmlyc3QiLCJzZWNvbmQiLCJleHRyYWN0UGFnZXMiLCJwYWdlTnVtYmVycyIsImV4dHJhY3RlZFBkZiIsImluZGljZXMiLCJudW0iLCJyb3RhdGVQYWdlcyIsInJvdGF0aW9uIiwidGFyZ2V0UGFnZXMiLCJuIiwiY3VycmVudFJvdGF0aW9uIiwiZ2V0Um90YXRpb24iLCJzZXRSb3RhdGlvbiIsImRlZ3JlZXMiLCJhbmdsZSIsImluc2VydEJsYW5rUGFnZSIsImFmdGVyUGFnZSIsIndpZHRoIiwiaGVpZ2h0IiwiaW5zZXJ0UGFnZSIsImZvbnQiLCJlbWJlZEZvbnQiLCJTdGFuZGFyZEZvbnRzIiwiSGVsdmV0aWNhIiwiZHJhd1RleHQiLCJ4IiwieSIsInNpemUiLCJjb2xvciIsInJnYiIsImRlbGV0ZVBhZ2VzIiwic29ydGVkUGFnZXMiLCJzb3J0IiwiYSIsInBhZ2VOdW0iLCJyZW1vdmVQYWdlIiwiY29tcHJlc3NQREYiLCJxdWFsaXR5Iiwib3B0aW9ucyIsImxvdyIsImNvbXByZXNzIiwibWVkaXVtIiwiaGlnaCIsInNhdmVPcHRpb25zIiwiYWRkV2F0ZXJtYXJrIiwid2F0ZXJtYXJrVGV4dCIsImZvbnRTaXplIiwib3BhY2l0eSIsInIiLCJnIiwic2FmZVBkZkJ5dGVzIiwiZ2V0U2l6ZSIsInRleHRXaWR0aCIsIndpZHRoT2ZUZXh0QXRTaXplIiwicm90YXRlIiwicmVzdWx0Iiwic2FmZVJlc3VsdCIsImNyZWF0ZUZvcm0iLCJmb3JtIiwiZ2V0Rm9ybSIsImFkZFBhZ2VOdW1iZXJzIiwicG9zaXRpb24iLCJmb3JtYXQiLCJtYXJnaW4iLCJpbmRleCIsInRleHQiLCJyZXBsYWNlIiwidG9TdHJpbmciLCJpbmNsdWRlcyIsImdldE1ldGFkYXRhIiwidGl0bGUiLCJnZXRUaXRsZSIsImF1dGhvciIsImdldEF1dGhvciIsInN1YmplY3QiLCJnZXRTdWJqZWN0Iiwia2V5d29yZHMiLCJnZXRLZXl3b3JkcyIsInNwbGl0IiwiayIsInRyaW0iLCJjcmVhdG9yIiwiZ2V0Q3JlYXRvciIsInByb2R1Y2VyIiwiZ2V0UHJvZHVjZXIiLCJjcmVhdGlvbkRhdGUiLCJnZXRDcmVhdGlvbkRhdGUiLCJtb2RpZmljYXRpb25EYXRlIiwiZ2V0TW9kaWZpY2F0aW9uRGF0ZSIsInNldE1ldGFkYXRhIiwibWV0YWRhdGEiLCJzZXRUaXRsZSIsInNldEF1dGhvciIsInNldFN1YmplY3QiLCJzZXRLZXl3b3JkcyIsInNldENyZWF0b3IiLCJzZXRQcm9kdWNlciIsInNldENyZWF0aW9uRGF0ZSIsInNldE1vZGlmaWNhdGlvbkRhdGUiLCJvcHRpbWl6ZUZvcldlYiIsIm9iamVjdHNQZXJUaWNrIiwiYWRkSW1hZ2UiLCJpbWFnZUJ5dGVzIiwicGFnZU51bWJlciIsImdldFBhZ2UiLCJpbWFnZSIsInVpbnQ4IiwiVWludDhBcnJheSIsImVtYmVkSnBnIiwiZW1iZWRQbmciLCJpbWdXaWR0aCIsImltZ0hlaWdodCIsImRyYXdJbWFnZSIsInJlb3JkZXJQYWdlcyIsIm5ld09yZGVyIiwicmVvcmRlcmVkUGRmIiwiZ2V0UGFnZURpbWVuc2lvbnMiLCJjcm9wUGFnZXMiLCJjcm9wQXJlYSIsImZpbHRlciIsInAiLCJzZXRDcm9wQm94IiwiYmF0Y2hQcm9jZXNzIiwib3BlcmF0aW9ucyIsInJlc3VsdHMiLCJvcGVyYXRpb24iLCJ0eXBlIiwibWVyZ2VkIiwiaW5wdXRGaWxlcyIsInB1c2giLCJmaWxlIiwicm90YXRlZCIsImNvbXByZXNzZWQiLCJ3YXRlcm1hcmtlZCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFkbWluXFxEb2N1bWVudHNcXFJTVFxcUERGIEVkaXRvclxcc3JjXFxyZW5kZXJlclxcc2VydmljZXNcXFBERlNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUERGRG9jdW1lbnQsIFBERlBhZ2UsIHJnYiwgU3RhbmRhcmRGb250cywgZGVncmVlcywgUERGRm9udCwgUERGSW1hZ2UgfSBmcm9tICdwZGYtbGliJztcbmltcG9ydCAqIGFzIHBkZmpzTGliIGZyb20gJ3BkZmpzLWRpc3QnO1xuaW1wb3J0IHsgUERGRG9jdW1lbnRQcm94eSB9IGZyb20gJ3BkZmpzLWRpc3QvdHlwZXMvc3JjL2Rpc3BsYXkvYXBpJztcbmltcG9ydCB7IGxvYWRQREZTYWZlbHksIHZhbGlkYXRlUERGQnl0ZXMsIGNyZWF0ZVNhZmVQREZCeXRlcyB9IGZyb20gJy4uLy4uL2NvbW1vbi91dGlscyc7XG5cbmludGVyZmFjZSBQREZNZXRhZGF0YSB7XG4gIHRpdGxlPzogc3RyaW5nO1xuICBhdXRob3I/OiBzdHJpbmc7XG4gIHN1YmplY3Q/OiBzdHJpbmc7XG4gIGtleXdvcmRzPzogc3RyaW5nW107XG4gIGNyZWF0b3I/OiBzdHJpbmc7XG4gIHByb2R1Y2VyPzogc3RyaW5nO1xuICBjcmVhdGlvbkRhdGU/OiBEYXRlO1xuICBtb2RpZmljYXRpb25EYXRlPzogRGF0ZTtcbn1cblxuaW50ZXJmYWNlIEV4dHJhY3RlZFBhZ2Uge1xuICBwYWdlTnVtYmVyOiBudW1iZXI7XG4gIGNvbnRlbnQ6IFVpbnQ4QXJyYXk7XG59XG5cbmV4cG9ydCBjbGFzcyBQREZTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBjdXJyZW50UERGOiBQREZEb2N1bWVudCB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIG9yaWdpbmFsQnl0ZXM6IFVpbnQ4QXJyYXkgfCBudWxsID0gbnVsbDtcbiAgcHJpdmF0ZSBpc01vZGlmaWVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gTm90ZTogV29ya2VyIGNvbmZpZ3VyYXRpb24gaXMgaGFuZGxlZCBpbiBpbmRleC50c3ggdG8gYXZvaWQgY29uZmxpY3RzXG4gICAgLy8gSnVzdCB2ZXJpZnkgaXQncyBjb25maWd1cmVkXG4gICAgaWYgKCFwZGZqc0xpYi5HbG9iYWxXb3JrZXJPcHRpb25zLndvcmtlclNyYykge1xuICAgICAgY29uc29sZS53YXJuKCfimqDvuI8gUERGLmpzIHdvcmtlciBub3QgY29uZmlndXJlZCAtIHRoaXMgbWF5IGNhdXNlIGlzc3VlcycpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGN1cnJlbnQgUERGIGRvY3VtZW50IGFuZCB0cmFjayBpdHMgc3RhdGVcbiAgICovXG4gIHNldEN1cnJlbnRQREYocGRmRG9jOiBQREZEb2N1bWVudCwgb3JpZ2luYWxCeXRlczogVWludDhBcnJheSkge1xuICAgIHRoaXMuY3VycmVudFBERiA9IHBkZkRvYztcbiAgICB0aGlzLm9yaWdpbmFsQnl0ZXMgPSBjcmVhdGVTYWZlUERGQnl0ZXMob3JpZ2luYWxCeXRlcyk7XG4gICAgdGhpcy5pc01vZGlmaWVkID0gZmFsc2U7XG4gICAgY29uc29sZS5sb2coJ+KchSBDdXJyZW50IFBERiBzZXQgd2l0aCBzYWZlIGJ5dGUgdHJhY2tpbmcnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgY3VycmVudCBQREYgd2l0aCB2YWxpZGF0aW9uXG4gICAqL1xuICBnZXRDdXJyZW50UERGKCk6IFBERkRvY3VtZW50IHtcbiAgICBpZiAoIXRoaXMuY3VycmVudFBERikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBQREYgZG9jdW1lbnQgaXMgY3VycmVudGx5IGxvYWRlZCcpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5jdXJyZW50UERGO1xuICB9XG5cbiAgLyoqXG4gICAqIE1hcmsgZG9jdW1lbnQgYXMgbW9kaWZpZWQgZm9yIHNhdmUgdHJhY2tpbmdcbiAgICovXG4gIG1hcmtNb2RpZmllZCgpIHtcbiAgICB0aGlzLmlzTW9kaWZpZWQgPSB0cnVlO1xuICAgIGNvbnNvbGUubG9nKCfwn5OdIFBERiBtYXJrZWQgYXMgbW9kaWZpZWQnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBkb2N1bWVudCBoYXMgdW5zYXZlZCBjaGFuZ2VzXG4gICAqL1xuICBoYXNVbnNhdmVkQ2hhbmdlcygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pc01vZGlmaWVkO1xuICB9XG5cbiAgLyoqXG4gICAqIFNhdmUgY3VycmVudCBQREYgd2l0aCBjb21wcmVoZW5zaXZlIGVycm9yIHJlY292ZXJ5IGFuZCBBcnJheUJ1ZmZlciBkZXRhY2htZW50IHByZXZlbnRpb25cbiAgICovXG4gIGFzeW5jIHNhdmVDdXJyZW50UERGKCk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICAgIGlmICghdGhpcy5jdXJyZW50UERGKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIFBERiBkb2N1bWVudCB0byBzYXZlJyk7XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coJ/Cfkr4gU3RhcnRpbmcgUERGIHNhdmUgd2l0aCBlbmhhbmNlZCBlcnJvciByZWNvdmVyeS4uLicpO1xuICAgIFxuICAgIC8vIFJldHJ5IGxvZ2ljIGZvciByb2J1c3Qgc2F2aW5nXG4gICAgY29uc3QgbWF4UmV0cmllcyA9IDM7XG4gICAgbGV0IGxhc3RFcnJvcjogRXJyb3IgfCBudWxsID0gbnVsbDtcbiAgICBcbiAgICBmb3IgKGxldCBhdHRlbXB0ID0gMTsgYXR0ZW1wdCA8PSBtYXhSZXRyaWVzOyBhdHRlbXB0KyspIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5K+IFNhdmUgYXR0ZW1wdCAke2F0dGVtcHR9LyR7bWF4UmV0cmllc31gKTtcbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSBzYWZlIHNhdmUgb3BlcmF0aW9uIHdpdGggcHJvcGVyIGJ5dGUgaGFuZGxpbmdcbiAgICAgICAgY29uc3Qgc2F2ZWRCeXRlcyA9IGF3YWl0IHRoaXMuY3VycmVudFBERi5zYXZlKHtcbiAgICAgICAgICB1c2VPYmplY3RTdHJlYW1zOiBmYWxzZSwgLy8gRGlzYWJsZSBmb3IgYmV0dGVyIGNvbXBhdGliaWxpdHlcbiAgICAgICAgICBhZGREZWZhdWx0UGFnZTogZmFsc2UsICAgLy8gRG9uJ3QgYWRkIGVtcHR5IHBhZ2VzXG4gICAgICAgICAgdXBkYXRlRmllbGRBcHBlYXJhbmNlczogdHJ1ZSAvLyBVcGRhdGUgZm9ybSBmaWVsZCBhcHBlYXJhbmNlc1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5SNIFBERiBzYXZlZCB0byBidWZmZXI6ICR7c2F2ZWRCeXRlcy5ieXRlTGVuZ3RofSBieXRlc2ApO1xuICAgICAgICBcbiAgICAgICAgLy8gQ3JpdGljYWwgdmFsaWRhdGlvbiBzdGVwXG4gICAgICAgIGlmICghc2F2ZWRCeXRlcyB8fCBzYXZlZEJ5dGVzLmJ5dGVMZW5ndGggPT09IDApIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BERiBzYXZlIHByb2R1Y2VkIGVtcHR5IG9yIG51bGwgZGF0YScpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBWYWxpZGF0ZSB0aGUgc2F2ZWQgUERGIGRhdGEgYmVmb3JlIHByb2Nlc3NpbmdcbiAgICAgICAgaWYgKCF2YWxpZGF0ZVBERkJ5dGVzKHNhdmVkQnl0ZXMpKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQREYgc2F2ZSBvcGVyYXRpb24gcHJvZHVjZWQgaW52YWxpZCBkYXRhIC0gZmFpbGVkIGhlYWRlciB2YWxpZGF0aW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSBtdWx0aXBsZSBzYWZlIGNvcGllcyB0byBwcmV2ZW50IGRldGFjaG1lbnQgaXNzdWVzXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5SnIENyZWF0aW5nIGRldGFjaG1lbnQtcmVzaXN0YW50IFBERiBieXRlcy4uLicpO1xuICAgICAgICBjb25zdCBzYWZlQnl0ZXMgPSBjcmVhdGVTYWZlUERGQnl0ZXMoc2F2ZWRCeXRlcyk7XG4gICAgICAgIGNvbnNvbGUubG9nKGDwn5SNIFNhZmUgYnl0ZXMgY3JlYXRlZDogJHtzYWZlQnl0ZXMuYnl0ZUxlbmd0aH0gYnl0ZXNgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRyaXBsZSB2YWxpZGF0aW9uIHRvIGVuc3VyZSBpbnRlZ3JpdHlcbiAgICAgICAgaWYgKCF2YWxpZGF0ZVBERkJ5dGVzKHNhZmVCeXRlcykpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NhZmUgUERGIGJ5dGVzIGNyZWF0aW9uIGNvcnJ1cHRlZCB0aGUgZGF0YScpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBWZXJpZnkgYnl0ZS1mb3ItYnl0ZSBpbnRlZ3JpdHkgKHNhbXBsZSBjaGVjaylcbiAgICAgICAgY29uc3Qgc2FtcGxlU2l6ZSA9IE1hdGgubWluKDEwMCwgc2F2ZWRCeXRlcy5sZW5ndGgpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNhbXBsZVNpemU7IGkrKykge1xuICAgICAgICAgIGlmIChzYWZlQnl0ZXNbaV0gIT09IHNhdmVkQnl0ZXNbaV0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQnl0ZSBpbnRlZ3JpdHkgY2hlY2sgZmFpbGVkIGF0IHBvc2l0aW9uICR7aX1gKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFVwZGF0ZSBvdXIgdHJhY2tlZCBzdGF0ZVxuICAgICAgICB0aGlzLm9yaWdpbmFsQnl0ZXMgPSBjcmVhdGVTYWZlUERGQnl0ZXMoc2FmZUJ5dGVzKTtcbiAgICAgICAgdGhpcy5pc01vZGlmaWVkID0gZmFsc2U7XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhg4pyFIFBERiBzYXZlZCBhbmQgdmFsaWRhdGVkIHN1Y2Nlc3NmdWxseTogJHtzYWZlQnl0ZXMuYnl0ZUxlbmd0aH0gYnl0ZXNgKTtcbiAgICAgICAgcmV0dXJuIHNhZmVCeXRlcztcbiAgICAgICAgXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBsYXN0RXJyb3IgPSBlcnJvciBhcyBFcnJvcjtcbiAgICAgICAgY29uc29sZS5lcnJvcihg4p2MIFNhdmUgYXR0ZW1wdCAke2F0dGVtcHR9IGZhaWxlZDpgLCBsYXN0RXJyb3IubWVzc2FnZSk7XG4gICAgICAgIFxuICAgICAgICAvLyBJZiB0aGlzIGlzIG5vdCB0aGUgbGFzdCBhdHRlbXB0LCB3YWl0IGJlZm9yZSByZXRyeWluZ1xuICAgICAgICBpZiAoYXR0ZW1wdCA8IG1heFJldHJpZXMpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhg4o+zIFdhaXRpbmcgYmVmb3JlIHJldHJ5IGF0dGVtcHQgJHthdHRlbXB0ICsgMX0uLi5gKTtcbiAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCAqIGF0dGVtcHQpKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBUcnkgdG8gcmVjb3ZlciBieSBjcmVhdGluZyBhIGZyZXNoIFBERiBpbnN0YW5jZSBmcm9tIGN1cnJlbnQgc3RhdGVcbiAgICAgICAgICBpZiAodGhpcy5vcmlnaW5hbEJ5dGVzKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygn8J+UhCBBdHRlbXB0aW5nIHRvIHJlY292ZXIgUERGIHN0YXRlIGZvciByZXRyeS4uLicpO1xuICAgICAgICAgICAgICBjb25zdCByZWNvdmVyZWRQREYgPSBhd2FpdCBQREZEb2N1bWVudC5sb2FkKHRoaXMub3JpZ2luYWxCeXRlcyk7XG4gICAgICAgICAgICAgIHRoaXMuY3VycmVudFBERiA9IHJlY292ZXJlZFBERjtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+KchSBQREYgc3RhdGUgcmVjb3ZlcmVkIGZvciByZXRyeScpO1xuICAgICAgICAgICAgfSBjYXRjaCAocmVjb3ZlcnlFcnJvcikge1xuICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ+KaoO+4jyBDb3VsZCBub3QgcmVjb3ZlciBQREYgc3RhdGU6JywgKHJlY292ZXJ5RXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyBJZiBhbGwgYXR0ZW1wdHMgZmFpbGVkLCB0aHJvdyB0aGUgbGFzdCBlcnJvciB3aXRoIGNvbnRleHRcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBgRmFpbGVkIHRvIHNhdmUgUERGIGFmdGVyICR7bWF4UmV0cmllc30gYXR0ZW1wdHM6ICR7bGFzdEVycm9yPy5tZXNzYWdlIHx8ICdVbmtub3duIGVycm9yJ31gO1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBBbGwgc2F2ZSBhdHRlbXB0cyBmYWlsZWQ6JywgZXJyb3JNZXNzYWdlKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JNZXNzYWdlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb2FkIGEgUERGIGRvY3VtZW50IGZyb20gYmluYXJ5IGRhdGEgdXNpbmcgc2FmZSBsb2FkaW5nXG4gICAqIEBwYXJhbSBkYXRhIFBERiBiaW5hcnkgZGF0YVxuICAgKiBAcmV0dXJucyBQcm9taXNlIHdpdGggUERGIGRvY3VtZW50IHByb3h5XG4gICAqL1xuICBhc3luYyBsb2FkUERGKGRhdGE6IFVpbnQ4QXJyYXkpOiBQcm9taXNlPFBERkRvY3VtZW50UHJveHk+IHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ/Cfk4QgTG9hZGluZyBQREYgZG9jdW1lbnQgd2l0aCBlbmhhbmNlZCBzYWZldHkuLi4nKTtcbiAgICAgIFxuICAgICAgLy8gVXNlIHRoZSBzYWZlIGxvYWRpbmcgdXRpbGl0eVxuICAgICAgY29uc3QgcGRmID0gYXdhaXQgbG9hZFBERlNhZmVseShkYXRhKTtcbiAgICAgIHJldHVybiBwZGY7XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGxvYWRpbmcgUERGOicsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGxvYWQgUERGIGRvY3VtZW50OiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgY3JlYXRlUERGKCk6IFByb21pc2U8UERGRG9jdW1lbnQ+IHtcbiAgICByZXR1cm4gYXdhaXQgUERGRG9jdW1lbnQuY3JlYXRlKCk7XG4gIH1cblxuICBhc3luYyBjb3B5UGFnZXMoXG4gICAgc291cmNlUGRmOiBQREZEb2N1bWVudCxcbiAgICBwYWdlSW5kaWNlczogbnVtYmVyW11cbiAgKTogUHJvbWlzZTxQREZQYWdlW10+IHtcbiAgICByZXR1cm4gYXdhaXQgc291cmNlUGRmLmNvcHlQYWdlcyhzb3VyY2VQZGYsIHBhZ2VJbmRpY2VzKTtcbiAgfVxuXG4gIC8vIE1lcmdlIG11bHRpcGxlIFBERnMgaW50byBvbmVcbiAgYXN5bmMgbWVyZ2VQREZzKHBkZkJ1ZmZlcnM6IFVpbnQ4QXJyYXlbXSk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICAgIGNvbnN0IG1lcmdlZFBkZiA9IGF3YWl0IFBERkRvY3VtZW50LmNyZWF0ZSgpO1xuICAgIFxuICAgIGZvciAoY29uc3QgYnVmZmVyIG9mIHBkZkJ1ZmZlcnMpIHtcbiAgICAgIGNvbnN0IHBkZiA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQoYnVmZmVyKTtcbiAgICAgIGNvbnN0IHBhZ2VzID0gYXdhaXQgbWVyZ2VkUGRmLmNvcHlQYWdlcyhwZGYsIHBkZi5nZXRQYWdlcygpLm1hcCgoXywgaSkgPT4gaSkpO1xuICAgICAgcGFnZXMuZm9yRWFjaChwYWdlID0+IG1lcmdlZFBkZi5hZGRQYWdlKHBhZ2UpKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGF3YWl0IG1lcmdlZFBkZi5zYXZlKCk7XG4gIH1cblxuICAvLyBTcGxpdCBQREYgYXQgc3BlY2lmaWVkIHBhZ2VcbiAgYXN5bmMgc3BsaXRQREYoXG4gICAgcGRmQnl0ZXM6IFVpbnQ4QXJyYXksXG4gICAgc3BsaXRQYWdlOiBudW1iZXJcbiAgKTogUHJvbWlzZTx7IGZpcnN0OiBVaW50OEFycmF5OyBzZWNvbmQ6IFVpbnQ4QXJyYXkgfT4ge1xuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIGNvbnN0IHRvdGFsUGFnZXMgPSBwZGZEb2MuZ2V0UGFnZUNvdW50KCk7XG4gICAgXG4gICAgaWYgKHNwbGl0UGFnZSA8IDEgfHwgc3BsaXRQYWdlID49IHRvdGFsUGFnZXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzcGxpdCBwYWdlIG51bWJlcicpO1xuICAgIH1cbiAgICBcbiAgICAvLyBDcmVhdGUgZmlyc3QgcGFydFxuICAgIGNvbnN0IGZpcnN0UGRmID0gYXdhaXQgUERGRG9jdW1lbnQuY3JlYXRlKCk7XG4gICAgY29uc3QgZmlyc3RQYWdlcyA9IGF3YWl0IGZpcnN0UGRmLmNvcHlQYWdlcyhcbiAgICAgIHBkZkRvYyxcbiAgICAgIEFycmF5LmZyb20oeyBsZW5ndGg6IHNwbGl0UGFnZSB9LCAoXywgaSkgPT4gaSlcbiAgICApO1xuICAgIGZpcnN0UGFnZXMuZm9yRWFjaChwYWdlID0+IGZpcnN0UGRmLmFkZFBhZ2UocGFnZSkpO1xuICAgIFxuICAgIC8vIENyZWF0ZSBzZWNvbmQgcGFydFxuICAgIGNvbnN0IHNlY29uZFBkZiA9IGF3YWl0IFBERkRvY3VtZW50LmNyZWF0ZSgpO1xuICAgIGNvbnN0IHNlY29uZFBhZ2VzID0gYXdhaXQgc2Vjb25kUGRmLmNvcHlQYWdlcyhcbiAgICAgIHBkZkRvYyxcbiAgICAgIEFycmF5LmZyb20oeyBsZW5ndGg6IHRvdGFsUGFnZXMgLSBzcGxpdFBhZ2UgfSwgKF8sIGkpID0+IGkgKyBzcGxpdFBhZ2UpXG4gICAgKTtcbiAgICBzZWNvbmRQYWdlcy5mb3JFYWNoKHBhZ2UgPT4gc2Vjb25kUGRmLmFkZFBhZ2UocGFnZSkpO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBmaXJzdDogYXdhaXQgZmlyc3RQZGYuc2F2ZSgpLFxuICAgICAgc2Vjb25kOiBhd2FpdCBzZWNvbmRQZGYuc2F2ZSgpXG4gICAgfTtcbiAgfVxuXG4gIC8vIEV4dHJhY3Qgc3BlY2lmaWMgcGFnZXNcbiAgYXN5bmMgZXh0cmFjdFBhZ2VzKFxuICAgIHBkZkJ5dGVzOiBVaW50OEFycmF5LFxuICAgIHBhZ2VOdW1iZXJzOiBudW1iZXJbXVxuICApOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICBjb25zdCBwZGZEb2MgPSBhd2FpdCBQREZEb2N1bWVudC5sb2FkKHBkZkJ5dGVzKTtcbiAgICBjb25zdCBleHRyYWN0ZWRQZGYgPSBhd2FpdCBQREZEb2N1bWVudC5jcmVhdGUoKTtcbiAgICBcbiAgICAvLyBDb252ZXJ0IHBhZ2UgbnVtYmVycyB0byBpbmRpY2VzICgwLWJhc2VkKVxuICAgIGNvbnN0IGluZGljZXMgPSBwYWdlTnVtYmVycy5tYXAobnVtID0+IG51bSAtIDEpO1xuICAgIGNvbnN0IHBhZ2VzID0gYXdhaXQgZXh0cmFjdGVkUGRmLmNvcHlQYWdlcyhwZGZEb2MsIGluZGljZXMpO1xuICAgIHBhZ2VzLmZvckVhY2gocGFnZSA9PiBleHRyYWN0ZWRQZGYuYWRkUGFnZShwYWdlKSk7XG4gICAgXG4gICAgcmV0dXJuIGF3YWl0IGV4dHJhY3RlZFBkZi5zYXZlKCk7XG4gIH1cblxuICAvLyBSb3RhdGUgcGFnZXNcbiAgYXN5bmMgcm90YXRlUGFnZXMoXG4gICAgcGRmQnl0ZXM6IFVpbnQ4QXJyYXksXG4gICAgcm90YXRpb246IG51bWJlcixcbiAgICBwYWdlTnVtYmVycz86IG51bWJlcltdXG4gICk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIGNvbnN0IHBhZ2VzID0gcGRmRG9jLmdldFBhZ2VzKCk7XG4gICAgXG4gICAgY29uc3QgdGFyZ2V0UGFnZXMgPSBwYWdlTnVtYmVycyBcbiAgICAgID8gcGFnZU51bWJlcnMubWFwKG4gPT4gcGFnZXNbbiAtIDFdKVxuICAgICAgOiBwYWdlcztcbiAgICBcbiAgICB0YXJnZXRQYWdlcy5mb3JFYWNoKHBhZ2UgPT4ge1xuICAgICAgY29uc3QgY3VycmVudFJvdGF0aW9uID0gcGFnZS5nZXRSb3RhdGlvbigpO1xuICAgICAgcGFnZS5zZXRSb3RhdGlvbihkZWdyZWVzKGN1cnJlbnRSb3RhdGlvbi5hbmdsZSArIHJvdGF0aW9uKSk7XG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIGF3YWl0IHBkZkRvYy5zYXZlKCk7XG4gIH1cblxuICAvLyBJbnNlcnQgYmxhbmsgcGFnZVxuICBhc3luYyBpbnNlcnRCbGFua1BhZ2UoXG4gICAgcGRmQnl0ZXM6IFVpbnQ4QXJyYXksXG4gICAgYWZ0ZXJQYWdlOiBudW1iZXIsXG4gICAgd2lkdGg6IG51bWJlciA9IDU5NS4yOCwgLy8gQTQgd2lkdGggaW4gcG9pbnRzXG4gICAgaGVpZ2h0OiBudW1iZXIgPSA4NDEuODkgLy8gQTQgaGVpZ2h0IGluIHBvaW50c1xuICApOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICBjb25zdCBwZGZEb2MgPSBhd2FpdCBQREZEb2N1bWVudC5sb2FkKHBkZkJ5dGVzKTtcbiAgICBjb25zdCBwYWdlID0gcGRmRG9jLmluc2VydFBhZ2UoYWZ0ZXJQYWdlLCBbd2lkdGgsIGhlaWdodF0pO1xuICAgIFxuICAgIC8vIEFkZCBwbGFjZWhvbGRlciB0ZXh0XG4gICAgY29uc3QgZm9udCA9IGF3YWl0IHBkZkRvYy5lbWJlZEZvbnQoU3RhbmRhcmRGb250cy5IZWx2ZXRpY2EpO1xuICAgIHBhZ2UuZHJhd1RleHQoJ0JsYW5rIFBhZ2UnLCB7XG4gICAgICB4OiA1MCxcbiAgICAgIHk6IGhlaWdodCAtIDUwLFxuICAgICAgc2l6ZTogMTAsXG4gICAgICBmb250LFxuICAgICAgY29sb3I6IHJnYigwLjgsIDAuOCwgMC44KVxuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiBhd2FpdCBwZGZEb2Muc2F2ZSgpO1xuICB9XG5cbiAgLy8gRGVsZXRlIHBhZ2VzXG4gIGFzeW5jIGRlbGV0ZVBhZ2VzKFxuICAgIHBkZkJ5dGVzOiBVaW50OEFycmF5LFxuICAgIHBhZ2VOdW1iZXJzOiBudW1iZXJbXVxuICApOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICBjb25zdCBwZGZEb2MgPSBhd2FpdCBQREZEb2N1bWVudC5sb2FkKHBkZkJ5dGVzKTtcbiAgICBcbiAgICAvLyBTb3J0IGluIGRlc2NlbmRpbmcgb3JkZXIgdG8gYXZvaWQgaW5kZXggc2hpZnRpbmcgaXNzdWVzXG4gICAgY29uc3Qgc29ydGVkUGFnZXMgPSBbLi4ucGFnZU51bWJlcnNdLnNvcnQoKGEsIGIpID0+IGIgLSBhKTtcbiAgICBcbiAgICBzb3J0ZWRQYWdlcy5mb3JFYWNoKHBhZ2VOdW0gPT4ge1xuICAgICAgaWYgKHBhZ2VOdW0gPiAwICYmIHBhZ2VOdW0gPD0gcGRmRG9jLmdldFBhZ2VDb3VudCgpKSB7XG4gICAgICAgIHBkZkRvYy5yZW1vdmVQYWdlKHBhZ2VOdW0gLSAxKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gYXdhaXQgcGRmRG9jLnNhdmUoKTtcbiAgfVxuXG4gIC8vIENvbXByZXNzIFBERiAoc2ltcGxpZmllZCBjb21wcmVzc2lvbilcbiAgYXN5bmMgY29tcHJlc3NQREYoXG4gICAgcGRmQnl0ZXM6IFVpbnQ4QXJyYXksXG4gICAgcXVhbGl0eTogJ2xvdycgfCAnbWVkaXVtJyB8ICdoaWdoJyA9ICdtZWRpdW0nXG4gICk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIFxuICAgIC8vIENvbXByZXNzaW9uIG9wdGlvbnMgYmFzZWQgb24gcXVhbGl0eVxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICBsb3c6IHsgdXNlT2JqZWN0U3RyZWFtczogdHJ1ZSwgY29tcHJlc3M6IHRydWUgfSxcbiAgICAgIG1lZGl1bTogeyB1c2VPYmplY3RTdHJlYW1zOiBmYWxzZSwgY29tcHJlc3M6IHRydWUgfSxcbiAgICAgIGhpZ2g6IHsgdXNlT2JqZWN0U3RyZWFtczogZmFsc2UsIGNvbXByZXNzOiBmYWxzZSB9XG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBzYXZlT3B0aW9ucyA9IG9wdGlvbnNbcXVhbGl0eV07XG4gICAgcmV0dXJuIGF3YWl0IHBkZkRvYy5zYXZlKHNhdmVPcHRpb25zKTtcbiAgfVxuXG4gIC8vIEFkZCB3YXRlcm1hcmsgdG8gUERGXG4gIGFzeW5jIGFkZFdhdGVybWFyayhcbiAgICBwZGZCeXRlczogVWludDhBcnJheSxcbiAgICB3YXRlcm1hcmtUZXh0OiBzdHJpbmcsXG4gICAgb3B0aW9uczoge1xuICAgICAgZm9udFNpemU/OiBudW1iZXI7XG4gICAgICBvcGFjaXR5PzogbnVtYmVyO1xuICAgICAgcm90YXRpb24/OiBudW1iZXI7XG4gICAgICBjb2xvcj86IHsgcjogbnVtYmVyOyBnOiBudW1iZXI7IGI6IG51bWJlciB9O1xuICAgIH0gPSB7fVxuICApOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICBjb25zdCB7XG4gICAgICBmb250U2l6ZSA9IDUwLFxuICAgICAgb3BhY2l0eSA9IDAuMyxcbiAgICAgIHJvdGF0aW9uID0gNDUsXG4gICAgICBjb2xvciA9IHsgcjogMC41LCBnOiAwLjUsIGI6IDAuNSB9XG4gICAgfSA9IG9wdGlvbnM7XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn4+377iPIEFkZGluZyB3YXRlcm1hcmsgdG8gUERGLi4uJyk7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBzYWZlIGNvcHkgdG8gcHJldmVudCBBcnJheUJ1ZmZlciBkZXRhY2htZW50XG4gICAgICBjb25zdCBzYWZlUGRmQnl0ZXMgPSBjcmVhdGVTYWZlUERGQnl0ZXMocGRmQnl0ZXMpO1xuICAgICAgY29uc3QgcGRmRG9jID0gYXdhaXQgUERGRG9jdW1lbnQubG9hZChzYWZlUGRmQnl0ZXMpO1xuICAgICAgY29uc3QgcGFnZXMgPSBwZGZEb2MuZ2V0UGFnZXMoKTtcbiAgICAgIGNvbnN0IGZvbnQgPSBhd2FpdCBwZGZEb2MuZW1iZWRGb250KFN0YW5kYXJkRm9udHMuSGVsdmV0aWNhKTtcbiAgICAgIFxuICAgICAgZm9yIChjb25zdCBwYWdlIG9mIHBhZ2VzKSB7XG4gICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gcGFnZS5nZXRTaXplKCk7XG4gICAgICAgIGNvbnN0IHRleHRXaWR0aCA9IGZvbnQud2lkdGhPZlRleHRBdFNpemUod2F0ZXJtYXJrVGV4dCwgZm9udFNpemUpO1xuICAgICAgICBcbiAgICAgICAgcGFnZS5kcmF3VGV4dCh3YXRlcm1hcmtUZXh0LCB7XG4gICAgICAgICAgeDogKHdpZHRoIC0gdGV4dFdpZHRoKSAvIDIsXG4gICAgICAgICAgeTogaGVpZ2h0IC8gMixcbiAgICAgICAgICBzaXplOiBmb250U2l6ZSxcbiAgICAgICAgICBmb250LFxuICAgICAgICAgIGNvbG9yOiByZ2IoY29sb3IuciwgY29sb3IuZywgY29sb3IuYiksXG4gICAgICAgICAgb3BhY2l0eSxcbiAgICAgICAgICByb3RhdGU6IGRlZ3JlZXMocm90YXRpb24pXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwZGZEb2Muc2F2ZSgpO1xuICAgICAgY29uc3Qgc2FmZVJlc3VsdCA9IGNyZWF0ZVNhZmVQREZCeXRlcyhyZXN1bHQpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZyhg4pyFIFdhdGVybWFyayBhZGRlZCBzdWNjZXNzZnVsbHkgdG8gJHtwYWdlcy5sZW5ndGh9IHBhZ2VzYCk7XG4gICAgICByZXR1cm4gc2FmZVJlc3VsdDtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgV2F0ZXJtYXJrIG9wZXJhdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gYWRkIHdhdGVybWFyazogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgIH1cbiAgfVxuXG4gIC8vIENyZWF0ZSBhIGZvcm0gb24gdGhlIFBERlxuICBjcmVhdGVGb3JtKCkge1xuICAgIGNvbnN0IGN1cnJlbnRQREYgPSB0aGlzLmdldEN1cnJlbnRQREYoKTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgLy8gR2V0IG9yIGNyZWF0ZSB0aGUgZm9ybVxuICAgICAgY29uc3QgZm9ybSA9IGN1cnJlbnRQREYuZ2V0Rm9ybSgpO1xuICAgICAgdGhpcy5tYXJrTW9kaWZpZWQoKTtcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgUERGIGZvcm0gYWNjZXNzZWQvY3JlYXRlZCBzdWNjZXNzZnVsbHknKTtcbiAgICAgIHJldHVybiBmb3JtO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgRm9ybSBjcmVhdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gY3JlYXRlL2FjY2VzcyBmb3JtOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIHBhZ2UgbnVtYmVyc1xuICBhc3luYyBhZGRQYWdlTnVtYmVycyhcbiAgICBwZGZCeXRlczogVWludDhBcnJheSxcbiAgICBvcHRpb25zOiB7XG4gICAgICBwb3NpdGlvbj86ICd0b3AtbGVmdCcgfCAndG9wLWNlbnRlcicgfCAndG9wLXJpZ2h0JyB8ICdib3R0b20tbGVmdCcgfCAnYm90dG9tLWNlbnRlcicgfCAnYm90dG9tLXJpZ2h0JztcbiAgICAgIGZvcm1hdD86IHN0cmluZzsgLy8gZS5nLiwgXCJQYWdlIHtufSBvZiB7dG90YWx9XCJcbiAgICAgIGZvbnRTaXplPzogbnVtYmVyO1xuICAgICAgbWFyZ2luPzogbnVtYmVyO1xuICAgIH0gPSB7fVxuICApOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICBjb25zdCB7XG4gICAgICBwb3NpdGlvbiA9ICdib3R0b20tY2VudGVyJyxcbiAgICAgIGZvcm1hdCA9ICdQYWdlIHtufSBvZiB7dG90YWx9JyxcbiAgICAgIGZvbnRTaXplID0gMTAsXG4gICAgICBtYXJnaW4gPSAzMFxuICAgIH0gPSBvcHRpb25zO1xuICAgIFxuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIGNvbnN0IHBhZ2VzID0gcGRmRG9jLmdldFBhZ2VzKCk7XG4gICAgY29uc3QgZm9udCA9IGF3YWl0IHBkZkRvYy5lbWJlZEZvbnQoU3RhbmRhcmRGb250cy5IZWx2ZXRpY2EpO1xuICAgIGNvbnN0IHRvdGFsUGFnZXMgPSBwYWdlcy5sZW5ndGg7XG4gICAgXG4gICAgcGFnZXMuZm9yRWFjaCgocGFnZSwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gcGFnZS5nZXRTaXplKCk7XG4gICAgICBjb25zdCBwYWdlTnVtID0gaW5kZXggKyAxO1xuICAgICAgY29uc3QgdGV4dCA9IGZvcm1hdFxuICAgICAgICAucmVwbGFjZSgne259JywgcGFnZU51bS50b1N0cmluZygpKVxuICAgICAgICAucmVwbGFjZSgne3RvdGFsfScsIHRvdGFsUGFnZXMudG9TdHJpbmcoKSk7XG4gICAgICBcbiAgICAgIGNvbnN0IHRleHRXaWR0aCA9IGZvbnQud2lkdGhPZlRleHRBdFNpemUodGV4dCwgZm9udFNpemUpO1xuICAgICAgXG4gICAgICBsZXQgeCA9IG1hcmdpbjtcbiAgICAgIGxldCB5ID0gbWFyZ2luO1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgcG9zaXRpb25cbiAgICAgIGlmIChwb3NpdGlvbi5pbmNsdWRlcygnY2VudGVyJykpIHtcbiAgICAgICAgeCA9ICh3aWR0aCAtIHRleHRXaWR0aCkgLyAyO1xuICAgICAgfSBlbHNlIGlmIChwb3NpdGlvbi5pbmNsdWRlcygncmlnaHQnKSkge1xuICAgICAgICB4ID0gd2lkdGggLSB0ZXh0V2lkdGggLSBtYXJnaW47XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChwb3NpdGlvbi5pbmNsdWRlcygndG9wJykpIHtcbiAgICAgICAgeSA9IGhlaWdodCAtIG1hcmdpbjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcGFnZS5kcmF3VGV4dCh0ZXh0LCB7XG4gICAgICAgIHgsXG4gICAgICAgIHksXG4gICAgICAgIHNpemU6IGZvbnRTaXplLFxuICAgICAgICBmb250LFxuICAgICAgICBjb2xvcjogcmdiKDAsIDAsIDApXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gYXdhaXQgcGRmRG9jLnNhdmUoKTtcbiAgfVxuXG4gIC8vIEdldCBQREYgbWV0YWRhdGFcbiAgYXN5bmMgZ2V0TWV0YWRhdGEocGRmQnl0ZXM6IFVpbnQ4QXJyYXkpOiBQcm9taXNlPFBERk1ldGFkYXRhPiB7XG4gICAgY29uc3QgcGRmRG9jID0gYXdhaXQgUERGRG9jdW1lbnQubG9hZChwZGZCeXRlcyk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHRpdGxlOiBwZGZEb2MuZ2V0VGl0bGUoKSxcbiAgICAgIGF1dGhvcjogcGRmRG9jLmdldEF1dGhvcigpLFxuICAgICAgc3ViamVjdDogcGRmRG9jLmdldFN1YmplY3QoKSxcbiAgICAgIGtleXdvcmRzOiBwZGZEb2MuZ2V0S2V5d29yZHMoKT8uc3BsaXQoJywnKS5tYXAoayA9PiBrLnRyaW0oKSkgfHwgW10sXG4gICAgICBjcmVhdG9yOiBwZGZEb2MuZ2V0Q3JlYXRvcigpLFxuICAgICAgcHJvZHVjZXI6IHBkZkRvYy5nZXRQcm9kdWNlcigpLFxuICAgICAgY3JlYXRpb25EYXRlOiBwZGZEb2MuZ2V0Q3JlYXRpb25EYXRlKCksXG4gICAgICBtb2RpZmljYXRpb25EYXRlOiBwZGZEb2MuZ2V0TW9kaWZpY2F0aW9uRGF0ZSgpXG4gICAgfTtcbiAgfVxuXG4gIC8vIFNldCBQREYgbWV0YWRhdGFcbiAgYXN5bmMgc2V0TWV0YWRhdGEoXG4gICAgcGRmQnl0ZXM6IFVpbnQ4QXJyYXksXG4gICAgbWV0YWRhdGE6IFBERk1ldGFkYXRhXG4gICk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIFxuICAgIGlmIChtZXRhZGF0YS50aXRsZSkgcGRmRG9jLnNldFRpdGxlKG1ldGFkYXRhLnRpdGxlKTtcbiAgICBpZiAobWV0YWRhdGEuYXV0aG9yKSBwZGZEb2Muc2V0QXV0aG9yKG1ldGFkYXRhLmF1dGhvcik7XG4gICAgaWYgKG1ldGFkYXRhLnN1YmplY3QpIHBkZkRvYy5zZXRTdWJqZWN0KG1ldGFkYXRhLnN1YmplY3QpO1xuICAgIGlmIChtZXRhZGF0YS5rZXl3b3JkcyAmJiBtZXRhZGF0YS5rZXl3b3Jkcy5sZW5ndGggPiAwKSB7XG4gICAgICAvLyBzZXRLZXl3b3JkcyBleHBlY3RzIHN0cmluZyBhcnJheSBpbiBwZGYtbGliXG4gICAgICBwZGZEb2Muc2V0S2V5d29yZHMobWV0YWRhdGEua2V5d29yZHMpO1xuICAgIH1cbiAgICBpZiAobWV0YWRhdGEuY3JlYXRvcikgcGRmRG9jLnNldENyZWF0b3IobWV0YWRhdGEuY3JlYXRvcik7XG4gICAgaWYgKG1ldGFkYXRhLnByb2R1Y2VyKSBwZGZEb2Muc2V0UHJvZHVjZXIobWV0YWRhdGEucHJvZHVjZXIpO1xuICAgIGlmIChtZXRhZGF0YS5jcmVhdGlvbkRhdGUpIHBkZkRvYy5zZXRDcmVhdGlvbkRhdGUobWV0YWRhdGEuY3JlYXRpb25EYXRlKTtcbiAgICBpZiAobWV0YWRhdGEubW9kaWZpY2F0aW9uRGF0ZSkgcGRmRG9jLnNldE1vZGlmaWNhdGlvbkRhdGUobWV0YWRhdGEubW9kaWZpY2F0aW9uRGF0ZSk7XG4gICAgXG4gICAgcmV0dXJuIGF3YWl0IHBkZkRvYy5zYXZlKCk7XG4gIH1cblxuICAvLyBPcHRpbWl6ZSBQREYgZm9yIHdlYlxuICBhc3luYyBvcHRpbWl6ZUZvcldlYihwZGZCeXRlczogVWludDhBcnJheSk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIFxuICAgIC8vIFdlYiBvcHRpbWl6YXRpb24gc2V0dGluZ3NcbiAgICByZXR1cm4gYXdhaXQgcGRmRG9jLnNhdmUoe1xuICAgICAgdXNlT2JqZWN0U3RyZWFtczogZmFsc2UsXG4gICAgICBhZGREZWZhdWx0UGFnZTogZmFsc2UsXG4gICAgICBvYmplY3RzUGVyVGljazogMjAwLFxuICAgICAgdXBkYXRlRmllbGRBcHBlYXJhbmNlczogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgLy8gQWRkIGltYWdlIHRvIFBERlxuICBhc3luYyBhZGRJbWFnZShcbiAgICBwZGZCeXRlczogVWludDhBcnJheSxcbiAgICBpbWFnZUJ5dGVzOiBVaW50OEFycmF5LFxuICAgIHBhZ2VOdW1iZXI6IG51bWJlcixcbiAgICBvcHRpb25zOiB7XG4gICAgICB4OiBudW1iZXI7XG4gICAgICB5OiBudW1iZXI7XG4gICAgICB3aWR0aD86IG51bWJlcjtcbiAgICAgIGhlaWdodD86IG51bWJlcjtcbiAgICAgIG9wYWNpdHk/OiBudW1iZXI7XG4gICAgfVxuICApOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICBjb25zdCBwZGZEb2MgPSBhd2FpdCBQREZEb2N1bWVudC5sb2FkKHBkZkJ5dGVzKTtcbiAgICBjb25zdCBwYWdlID0gcGRmRG9jLmdldFBhZ2UocGFnZU51bWJlciAtIDEpO1xuICAgIFxuICAgIGxldCBpbWFnZTogUERGSW1hZ2U7XG4gICAgXG4gICAgLy8gRGV0ZWN0IGltYWdlIHR5cGUgYW5kIGVtYmVkIGFjY29yZGluZ2x5XG4gICAgY29uc3QgdWludDggPSBuZXcgVWludDhBcnJheShpbWFnZUJ5dGVzKTtcbiAgICBpZiAodWludDhbMF0gPT09IDB4RkYgJiYgdWludDhbMV0gPT09IDB4RDgpIHtcbiAgICAgIC8vIEpQRUdcbiAgICAgIGltYWdlID0gYXdhaXQgcGRmRG9jLmVtYmVkSnBnKGltYWdlQnl0ZXMpO1xuICAgIH0gZWxzZSBpZiAodWludDhbMF0gPT09IDB4ODkgJiYgdWludDhbMV0gPT09IDB4NTApIHtcbiAgICAgIC8vIFBOR1xuICAgICAgaW1hZ2UgPSBhd2FpdCBwZGZEb2MuZW1iZWRQbmcoaW1hZ2VCeXRlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5zdXBwb3J0ZWQgaW1hZ2UgZm9ybWF0Jyk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHsgd2lkdGg6IGltZ1dpZHRoLCBoZWlnaHQ6IGltZ0hlaWdodCB9ID0gaW1hZ2U7XG4gICAgY29uc3Qgd2lkdGggPSBvcHRpb25zLndpZHRoIHx8IGltZ1dpZHRoO1xuICAgIGNvbnN0IGhlaWdodCA9IG9wdGlvbnMuaGVpZ2h0IHx8IGltZ0hlaWdodDtcbiAgICBcbiAgICBwYWdlLmRyYXdJbWFnZShpbWFnZSwge1xuICAgICAgeDogb3B0aW9ucy54LFxuICAgICAgeTogb3B0aW9ucy55LFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICBvcGFjaXR5OiBvcHRpb25zLm9wYWNpdHkgfHwgMVxuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiBhd2FpdCBwZGZEb2Muc2F2ZSgpO1xuICB9XG5cbiAgLy8gUmVvcmRlciBwYWdlc1xuICBhc3luYyByZW9yZGVyUGFnZXMoXG4gICAgcGRmQnl0ZXM6IFVpbnQ4QXJyYXksXG4gICAgbmV3T3JkZXI6IG51bWJlcltdXG4gICk6IFByb21pc2U8VWludDhBcnJheT4ge1xuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIGNvbnN0IHJlb3JkZXJlZFBkZiA9IGF3YWl0IFBERkRvY3VtZW50LmNyZWF0ZSgpO1xuICAgIFxuICAgIC8vIENvbnZlcnQgMS1iYXNlZCB0byAwLWJhc2VkIGluZGljZXNcbiAgICBjb25zdCBpbmRpY2VzID0gbmV3T3JkZXIubWFwKG4gPT4gbiAtIDEpO1xuICAgIGNvbnN0IHBhZ2VzID0gYXdhaXQgcmVvcmRlcmVkUGRmLmNvcHlQYWdlcyhwZGZEb2MsIGluZGljZXMpO1xuICAgIHBhZ2VzLmZvckVhY2gocGFnZSA9PiByZW9yZGVyZWRQZGYuYWRkUGFnZShwYWdlKSk7XG4gICAgXG4gICAgcmV0dXJuIGF3YWl0IHJlb3JkZXJlZFBkZi5zYXZlKCk7XG4gIH1cblxuICAvLyBHZXQgcGFnZSBkaW1lbnNpb25zXG4gIGFzeW5jIGdldFBhZ2VEaW1lbnNpb25zKFxuICAgIHBkZkJ5dGVzOiBVaW50OEFycmF5LFxuICAgIHBhZ2VOdW1iZXI6IG51bWJlclxuICApOiBQcm9taXNlPHsgd2lkdGg6IG51bWJlcjsgaGVpZ2h0OiBudW1iZXI7IHJvdGF0aW9uOiBudW1iZXIgfT4ge1xuICAgIGNvbnN0IHBkZkRvYyA9IGF3YWl0IFBERkRvY3VtZW50LmxvYWQocGRmQnl0ZXMpO1xuICAgIGNvbnN0IHBhZ2UgPSBwZGZEb2MuZ2V0UGFnZShwYWdlTnVtYmVyIC0gMSk7XG4gICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSBwYWdlLmdldFNpemUoKTtcbiAgICBjb25zdCByb3RhdGlvbiA9IHBhZ2UuZ2V0Um90YXRpb24oKTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICByb3RhdGlvbjogcm90YXRpb24uYW5nbGVcbiAgICB9O1xuICB9XG5cbiAgLy8gQWR2YW5jZWQgcGFnZSBtYW5pcHVsYXRpb24gdG9vbHNcbiAgXG4gIC8qKlxuICAgKiBDcm9wIHBhZ2VzIHRvIHNwZWNpZmllZCBkaW1lbnNpb25zXG4gICAqL1xuICBhc3luYyBjcm9wUGFnZXMoXG4gICAgcGRmQnl0ZXM6IFVpbnQ4QXJyYXksXG4gICAgY3JvcEFyZWE6IHsgeDogbnVtYmVyOyB5OiBudW1iZXI7IHdpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyIH0sXG4gICAgcGFnZU51bWJlcnM/OiBudW1iZXJbXVxuICApOiBQcm9taXNlPFVpbnQ4QXJyYXk+IHtcbiAgICBjb25zdCBwZGZEb2MgPSBhd2FpdCBQREZEb2N1bWVudC5sb2FkKHBkZkJ5dGVzKTtcbiAgICBjb25zdCBwYWdlcyA9IHBkZkRvYy5nZXRQYWdlcygpO1xuICAgIFxuICAgIGNvbnN0IHRhcmdldFBhZ2VzID0gcGFnZU51bWJlcnMgXG4gICAgICA/IHBhZ2VOdW1iZXJzLm1hcChuID0+IHBhZ2VzW24gLSAxXSkuZmlsdGVyKHAgPT4gcClcbiAgICAgIDogcGFnZXM7XG4gICAgXG4gICAgdGFyZ2V0UGFnZXMuZm9yRWFjaChwYWdlID0+IHtcbiAgICAgIHBhZ2Uuc2V0Q3JvcEJveChjcm9wQXJlYS54LCBjcm9wQXJlYS55LCBjcm9wQXJlYS53aWR0aCwgY3JvcEFyZWEuaGVpZ2h0KTtcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gYXdhaXQgcGRmRG9jLnNhdmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBCYXRjaCBwcm9jZXNzIG11bHRpcGxlIFBERnNcbiAgICovXG4gIGFzeW5jIGJhdGNoUHJvY2VzcyhcbiAgICBvcGVyYXRpb25zOiBBcnJheTx7XG4gICAgICB0eXBlOiAnbWVyZ2UnIHwgJ3NwbGl0JyB8ICdyb3RhdGUnIHwgJ2NvbXByZXNzJyB8ICd3YXRlcm1hcmsnO1xuICAgICAgaW5wdXRGaWxlczogVWludDhBcnJheVtdO1xuICAgICAgb3B0aW9ucz86IGFueTtcbiAgICB9PlxuICApOiBQcm9taXNlPFVpbnQ4QXJyYXlbXT4ge1xuICAgIGNvbnN0IHJlc3VsdHM6IFVpbnQ4QXJyYXlbXSA9IFtdO1xuICAgIFxuICAgIGZvciAoY29uc3Qgb3BlcmF0aW9uIG9mIG9wZXJhdGlvbnMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHN3aXRjaCAob3BlcmF0aW9uLnR5cGUpIHtcbiAgICAgICAgICBjYXNlICdtZXJnZSc6XG4gICAgICAgICAgICBjb25zdCBtZXJnZWQgPSBhd2FpdCB0aGlzLm1lcmdlUERGcyhvcGVyYXRpb24uaW5wdXRGaWxlcyk7XG4gICAgICAgICAgICByZXN1bHRzLnB1c2gobWVyZ2VkKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgXG4gICAgICAgICAgY2FzZSAncm90YXRlJzpcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmlsZSBvZiBvcGVyYXRpb24uaW5wdXRGaWxlcykge1xuICAgICAgICAgICAgICBjb25zdCByb3RhdGVkID0gYXdhaXQgdGhpcy5yb3RhdGVQYWdlcyhcbiAgICAgICAgICAgICAgICBmaWxlLFxuICAgICAgICAgICAgICAgIG9wZXJhdGlvbi5vcHRpb25zPy5yb3RhdGlvbiB8fCA5MCxcbiAgICAgICAgICAgICAgICBvcGVyYXRpb24ub3B0aW9ucz8ucGFnZU51bWJlcnNcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHJvdGF0ZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBcbiAgICAgICAgICBjYXNlICdjb21wcmVzcyc6XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGZpbGUgb2Ygb3BlcmF0aW9uLmlucHV0RmlsZXMpIHtcbiAgICAgICAgICAgICAgY29uc3QgY29tcHJlc3NlZCA9IGF3YWl0IHRoaXMuY29tcHJlc3NQREYoXG4gICAgICAgICAgICAgICAgZmlsZSxcbiAgICAgICAgICAgICAgICBvcGVyYXRpb24ub3B0aW9ucz8ucXVhbGl0eSB8fCAnbWVkaXVtJ1xuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICByZXN1bHRzLnB1c2goY29tcHJlc3NlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIFxuICAgICAgICAgIGNhc2UgJ3dhdGVybWFyayc6XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGZpbGUgb2Ygb3BlcmF0aW9uLmlucHV0RmlsZXMpIHtcbiAgICAgICAgICAgICAgY29uc3Qgd2F0ZXJtYXJrZWQgPSBhd2FpdCB0aGlzLmFkZFdhdGVybWFyayhcbiAgICAgICAgICAgICAgICBmaWxlLFxuICAgICAgICAgICAgICAgIG9wZXJhdGlvbi5vcHRpb25zPy50ZXh0IHx8ICdXQVRFUk1BUksnLFxuICAgICAgICAgICAgICAgIG9wZXJhdGlvbi5vcHRpb25zPy5vcHRpb25zIHx8IHt9XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIHJlc3VsdHMucHVzaCh3YXRlcm1hcmtlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIFxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYFVuc3VwcG9ydGVkIGJhdGNoIG9wZXJhdGlvbjogJHtvcGVyYXRpb24udHlwZX1gKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBCYXRjaCBvcGVyYXRpb24gJHtvcGVyYXRpb24udHlwZX0gZmFpbGVkOmAsIGVycm9yKTtcbiAgICAgICAgLy8gQ29udGludWUgd2l0aCBvdGhlciBvcGVyYXRpb25zXG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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