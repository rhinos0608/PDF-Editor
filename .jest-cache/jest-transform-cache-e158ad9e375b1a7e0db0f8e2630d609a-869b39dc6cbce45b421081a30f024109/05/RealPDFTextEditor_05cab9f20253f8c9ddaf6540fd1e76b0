f1bef6ee296688bb89cfad6cf0cea41b
"use strict";

/* istanbul ignore next */
function cov_g5kivdxmb() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\RealPDFTextEditor.ts";
  var hash = "9bb2fea451fe3d950f247fbe199248100f36b861";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\RealPDFTextEditor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "37": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "38": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "39": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "40": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 70
        }
      },
      "41": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "42": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 67
        }
      },
      "43": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "44": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 84
        }
      },
      "45": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 69
        }
      },
      "46": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "47": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "48": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 28
        }
      },
      "49": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 28
        }
      },
      "50": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "51": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 60,
          column: 28
        }
      },
      "52": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "53": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 80
        }
      },
      "54": {
        start: {
          line: 64,
          column: 37
        },
        end: {
          line: 64,
          column: 86
        }
      },
      "55": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "56": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 47
        }
      },
      "57": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 68
        }
      },
      "58": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 70
        }
      },
      "59": {
        start: {
          line: 77,
          column: 43
        },
        end: {
          line: 77,
          column: 85
        }
      },
      "60": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 43
        }
      },
      "61": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 73
        }
      },
      "62": {
        start: {
          line: 82,
          column: 40
        },
        end: {
          line: 82,
          column: 41
        }
      },
      "63": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 101,
          column: 17
        }
      },
      "64": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 84,
          column: 49
        }
      },
      "65": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 88,
          column: 21
        }
      },
      "66": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 86,
          column: 98
        }
      },
      "67": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 33
        }
      },
      "68": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 114
        }
      },
      "69": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 100,
          column: 21
        }
      },
      "70": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 99,
          column: 25
        }
      },
      "71": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 92
        }
      },
      "72": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "73": {
        start: {
          line: 94,
          column: 28
        },
        end: {
          line: 94,
          column: 109
        }
      },
      "74": {
        start: {
          line: 97,
          column: 28
        },
        end: {
          line: 97,
          column: 115
        }
      },
      "75": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 83
        }
      },
      "76": {
        start: {
          line: 104,
          column: 41
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "77": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "78": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 65
        }
      },
      "79": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 107
        }
      },
      "80": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 85
        }
      },
      "81": {
        start: {
          line: 120,
          column: 35
        },
        end: {
          line: 120,
          column: 89
        }
      },
      "82": {
        start: {
          line: 121,
          column: 35
        },
        end: {
          line: 121,
          column: 58
        }
      },
      "83": {
        start: {
          line: 122,
          column: 33
        },
        end: {
          line: 122,
          column: 55
        }
      },
      "84": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 125,
          column: 21
        }
      },
      "85": {
        start: {
          line: 123,
          column: 33
        },
        end: {
          line: 123,
          column: 34
        }
      },
      "86": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "87": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 36
        }
      },
      "88": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 103
        }
      },
      "89": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 132,
          column: 17
        }
      },
      "90": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 131,
          column: 76
        }
      },
      "91": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 107
        }
      },
      "92": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 32
        }
      },
      "93": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 34
        }
      },
      "94": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 94
        }
      },
      "95": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 142,
          column: 17
        }
      },
      "96": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 84
        }
      },
      "97": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 86
        }
      },
      "98": {
        start: {
          line: 141,
          column: 49
        },
        end: {
          line: 141,
          column: 84
        }
      },
      "99": {
        start: {
          line: 145,
          column: 29
        },
        end: {
          line: 145,
          column: 125
        }
      },
      "100": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 75
        }
      },
      "101": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 38
        }
      },
      "102": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "103": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "104": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 74
        }
      },
      "105": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "106": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 71
        }
      },
      "107": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "108": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 103
        }
      },
      "109": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "110": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 104
        }
      },
      "111": {
        start: {
          line: 172,
          column: 35
        },
        end: {
          line: 172,
          column: 44
        }
      },
      "112": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "113": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 174,
          column: 44
        }
      },
      "114": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "115": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 52
        }
      },
      "116": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 62
        }
      },
      "117": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 34
        }
      },
      "118": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 186,
          column: 37
        }
      },
      "119": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "120": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 188,
          column: 68
        }
      },
      "121": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 40
        }
      },
      "122": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "123": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "124": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 208,
          column: 17
        }
      },
      "125": {
        start: {
          line: 197,
          column: 24
        },
        end: {
          line: 197,
          column: 89
        }
      },
      "126": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 30
        }
      },
      "127": {
        start: {
          line: 200,
          column: 24
        },
        end: {
          line: 200,
          column: 93
        }
      },
      "128": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 30
        }
      },
      "129": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 90
        }
      },
      "130": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 204,
          column: 30
        }
      },
      "131": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 87
        }
      },
      "132": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 207,
          column: 30
        }
      },
      "133": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 48
        }
      },
      "134": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 61
        }
      },
      "135": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 96
        }
      },
      "136": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 101
        }
      },
      "137": {
        start: {
          line: 222,
          column: 27
        },
        end: {
          line: 222,
          column: 64
        }
      },
      "138": {
        start: {
          line: 223,
          column: 21
        },
        end: {
          line: 223,
          column: 76
        }
      },
      "139": {
        start: {
          line: 224,
          column: 22
        },
        end: {
          line: 224,
          column: 63
        }
      },
      "140": {
        start: {
          line: 226,
          column: 30
        },
        end: {
          line: 226,
          column: 95
        }
      },
      "141": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 90
        }
      },
      "142": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 53
        }
      },
      "143": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 230,
          column: 40
        }
      },
      "144": {
        start: {
          line: 231,
          column: 23
        },
        end: {
          line: 231,
          column: 58
        }
      },
      "145": {
        start: {
          line: 232,
          column: 27
        },
        end: {
          line: 232,
          column: 64
        }
      },
      "146": {
        start: {
          line: 233,
          column: 28
        },
        end: {
          line: 233,
          column: 38
        }
      },
      "147": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "148": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "149": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 74
        }
      },
      "150": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "151": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 68
        }
      },
      "152": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "153": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 81
        }
      },
      "154": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 69
        }
      },
      "155": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "156": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 70
        }
      },
      "157": {
        start: {
          line: 269,
          column: 27
        },
        end: {
          line: 269,
          column: 28
        }
      },
      "158": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 28
        }
      },
      "159": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "160": {
        start: {
          line: 271,
          column: 27
        },
        end: {
          line: 271,
          column: 28
        }
      },
      "161": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "162": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 80
        }
      },
      "163": {
        start: {
          line: 275,
          column: 37
        },
        end: {
          line: 275,
          column: 86
        }
      },
      "164": {
        start: {
          line: 277,
          column: 31
        },
        end: {
          line: 282,
          column: 18
        }
      },
      "165": {
        start: {
          line: 283,
          column: 30
        },
        end: {
          line: 283,
          column: 47
        }
      },
      "166": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 86
        }
      },
      "167": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 72
        }
      },
      "168": {
        start: {
          line: 288,
          column: 34
        },
        end: {
          line: 288,
          column: 43
        }
      },
      "169": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 86
        }
      },
      "170": {
        start: {
          line: 291,
          column: 37
        },
        end: {
          line: 291,
          column: 38
        }
      },
      "171": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 307,
          column: 17
        }
      },
      "172": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 306,
          column: 21
        }
      },
      "173": {
        start: {
          line: 294,
          column: 37
        },
        end: {
          line: 294,
          column: 57
        }
      },
      "174": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 298,
          column: 25
        }
      },
      "175": {
        start: {
          line: 296,
          column: 28
        },
        end: {
          line: 296,
          column: 107
        }
      },
      "176": {
        start: {
          line: 297,
          column: 28
        },
        end: {
          line: 297,
          column: 37
        }
      },
      "177": {
        start: {
          line: 299,
          column: 24
        },
        end: {
          line: 299,
          column: 82
        }
      },
      "178": {
        start: {
          line: 300,
          column: 24
        },
        end: {
          line: 300,
          column: 41
        }
      },
      "179": {
        start: {
          line: 301,
          column: 24
        },
        end: {
          line: 301,
          column: 100
        }
      },
      "180": {
        start: {
          line: 304,
          column: 24
        },
        end: {
          line: 304,
          column: 110
        }
      },
      "181": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 77
        }
      },
      "182": {
        start: {
          line: 310,
          column: 41
        },
        end: {
          line: 314,
          column: 18
        }
      },
      "183": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 334,
          column: 17
        }
      },
      "184": {
        start: {
          line: 320,
          column: 20
        },
        end: {
          line: 320,
          column: 65
        }
      },
      "185": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 321,
          column: 107
        }
      },
      "186": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 324,
          column: 85
        }
      },
      "187": {
        start: {
          line: 326,
          column: 35
        },
        end: {
          line: 326,
          column: 89
        }
      },
      "188": {
        start: {
          line: 327,
          column: 35
        },
        end: {
          line: 327,
          column: 58
        }
      },
      "189": {
        start: {
          line: 328,
          column: 33
        },
        end: {
          line: 328,
          column: 55
        }
      },
      "190": {
        start: {
          line: 329,
          column: 20
        },
        end: {
          line: 331,
          column: 21
        }
      },
      "191": {
        start: {
          line: 329,
          column: 33
        },
        end: {
          line: 329,
          column: 34
        }
      },
      "192": {
        start: {
          line: 330,
          column: 24
        },
        end: {
          line: 330,
          column: 59
        }
      },
      "193": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 36
        }
      },
      "194": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 103
        }
      },
      "195": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 338,
          column: 17
        }
      },
      "196": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 337,
          column: 76
        }
      },
      "197": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 100
        }
      },
      "198": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 32
        }
      },
      "199": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 34
        }
      },
      "200": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 95
        }
      },
      "201": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 348,
          column: 17
        }
      },
      "202": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 84
        }
      },
      "203": {
        start: {
          line: 347,
          column: 20
        },
        end: {
          line: 347,
          column: 85
        }
      },
      "204": {
        start: {
          line: 347,
          column: 49
        },
        end: {
          line: 347,
          column: 83
        }
      },
      "205": {
        start: {
          line: 351,
          column: 29
        },
        end: {
          line: 351,
          column: 127
        }
      },
      "206": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 76
        }
      },
      "207": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 38
        }
      },
      "208": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 62
        }
      },
      "209": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "210": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 69
        }
      },
      "211": {
        start: {
          line: 364,
          column: 29
        },
        end: {
          line: 364,
          column: 31
        }
      },
      "212": {
        start: {
          line: 365,
          column: 26
        },
        end: {
          line: 365,
          column: 28
        }
      },
      "213": {
        start: {
          line: 366,
          column: 26
        },
        end: {
          line: 366,
          column: 28
        }
      },
      "214": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "215": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "216": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 381,
          column: 21
        }
      },
      "217": {
        start: {
          line: 371,
          column: 24
        },
        end: {
          line: 380,
          column: 27
        }
      },
      "218": {
        start: {
          line: 382,
          column: 20
        },
        end: {
          line: 382,
          column: 26
        }
      },
      "219": {
        start: {
          line: 384,
          column: 20
        },
        end: {
          line: 392,
          column: 23
        }
      },
      "220": {
        start: {
          line: 393,
          column: 20
        },
        end: {
          line: 393,
          column: 26
        }
      },
      "221": {
        start: {
          line: 395,
          column: 20
        },
        end: {
          line: 402,
          column: 23
        }
      },
      "222": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 26
        }
      },
      "223": {
        start: {
          line: 406,
          column: 30
        },
        end: {
          line: 406,
          column: 46
        }
      },
      "224": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "225": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 409,
          column: 82
        }
      },
      "226": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 87
        }
      },
      "227": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "228": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 87
        }
      },
      "229": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 89
        }
      },
      "230": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 419,
          column: 9
        }
      },
      "231": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 80
        }
      },
      "232": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 82
        }
      },
      "233": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 57
        }
      },
      "234": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 31
        }
      },
      "235": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 53
        }
      },
      "236": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "237": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 69
        }
      },
      "238": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 461,
          column: 9
        }
      },
      "239": {
        start: {
          line: 432,
          column: 33
        },
        end: {
          line: 432,
          column: 82
        }
      },
      "240": {
        start: {
          line: 433,
          column: 27
        },
        end: {
          line: 433,
          column: 73
        }
      },
      "241": {
        start: {
          line: 434,
          column: 26
        },
        end: {
          line: 434,
          column: 43
        }
      },
      "242": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 452,
          column: 13
        }
      },
      "243": {
        start: {
          line: 436,
          column: 29
        },
        end: {
          line: 436,
          column: 49
        }
      },
      "244": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 438,
          column: 29
        }
      },
      "245": {
        start: {
          line: 438,
          column: 20
        },
        end: {
          line: 438,
          column: 29
        }
      },
      "246": {
        start: {
          line: 440,
          column: 30
        },
        end: {
          line: 440,
          column: 51
        }
      },
      "247": {
        start: {
          line: 441,
          column: 31
        },
        end: {
          line: 441,
          column: 52
        }
      },
      "248": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 450,
          column: 19
        }
      },
      "249": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 451,
          column: 116
        }
      },
      "250": {
        start: {
          line: 453,
          column: 37
        },
        end: {
          line: 453,
          column: 56
        }
      },
      "251": {
        start: {
          line: 455,
          column: 29
        },
        end: {
          line: 455,
          column: 62
        }
      },
      "252": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 28
        }
      },
      "253": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 76
        }
      },
      "254": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 71
        }
      },
      "255": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "256": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 468,
          column: 13
        }
      },
      "257": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 68
        }
      },
      "258": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 471,
          column: 13
        }
      },
      "259": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 100
        }
      },
      "260": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 474,
          column: 13
        }
      },
      "261": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 473,
          column: 101
        }
      },
      "262": {
        start: {
          line: 478,
          column: 28
        },
        end: {
          line: 478,
          column: 37
        }
      },
      "263": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "264": {
        start: {
          line: 480,
          column: 31
        },
        end: {
          line: 480,
          column: 65
        }
      },
      "265": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 40
        }
      },
      "266": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 507,
          column: 9
        }
      },
      "267": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 506,
          column: 13
        }
      },
      "268": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 500,
          column: 17
        }
      },
      "269": {
        start: {
          line: 489,
          column: 24
        },
        end: {
          line: 489,
          column: 89
        }
      },
      "270": {
        start: {
          line: 490,
          column: 24
        },
        end: {
          line: 490,
          column: 30
        }
      },
      "271": {
        start: {
          line: 492,
          column: 24
        },
        end: {
          line: 492,
          column: 93
        }
      },
      "272": {
        start: {
          line: 493,
          column: 24
        },
        end: {
          line: 493,
          column: 30
        }
      },
      "273": {
        start: {
          line: 495,
          column: 24
        },
        end: {
          line: 495,
          column: 90
        }
      },
      "274": {
        start: {
          line: 496,
          column: 24
        },
        end: {
          line: 496,
          column: 30
        }
      },
      "275": {
        start: {
          line: 498,
          column: 24
        },
        end: {
          line: 498,
          column: 87
        }
      },
      "276": {
        start: {
          line: 499,
          column: 24
        },
        end: {
          line: 499,
          column: 30
        }
      },
      "277": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 48
        }
      },
      "278": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 504,
          column: 96
        }
      },
      "279": {
        start: {
          line: 505,
          column: 16
        },
        end: {
          line: 505,
          column: 101
        }
      },
      "280": {
        start: {
          line: 510,
          column: 27
        },
        end: {
          line: 510,
          column: 61
        }
      },
      "281": {
        start: {
          line: 511,
          column: 21
        },
        end: {
          line: 511,
          column: 76
        }
      },
      "282": {
        start: {
          line: 512,
          column: 22
        },
        end: {
          line: 512,
          column: 60
        }
      },
      "283": {
        start: {
          line: 513,
          column: 25
        },
        end: {
          line: 513,
          column: 47
        }
      },
      "284": {
        start: {
          line: 514,
          column: 24
        },
        end: {
          line: 514,
          column: 45
        }
      },
      "285": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 523,
          column: 11
        }
      },
      "286": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 530,
          column: 63
        }
      },
      "287": {
        start: {
          line: 531,
          column: 27
        },
        end: {
          line: 561,
          column: 9
        }
      },
      "288": {
        start: {
          line: 534,
          column: 36
        },
        end: {
          line: 540,
          column: 18
        }
      },
      "289": {
        start: {
          line: 541,
          column: 28
        },
        end: {
          line: 541,
          column: 53
        }
      },
      "290": {
        start: {
          line: 542,
          column: 16
        },
        end: {
          line: 542,
          column: 57
        }
      },
      "291": {
        start: {
          line: 546,
          column: 36
        },
        end: {
          line: 551,
          column: 18
        }
      },
      "292": {
        start: {
          line: 552,
          column: 28
        },
        end: {
          line: 552,
          column: 53
        }
      },
      "293": {
        start: {
          line: 553,
          column: 16
        },
        end: {
          line: 553,
          column: 58
        }
      },
      "294": {
        start: {
          line: 557,
          column: 36
        },
        end: {
          line: 557,
          column: 66
        }
      },
      "295": {
        start: {
          line: 558,
          column: 28
        },
        end: {
          line: 558,
          column: 53
        }
      },
      "296": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 54
        }
      },
      "297": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 575,
          column: 9
        }
      },
      "298": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 574,
          column: 13
        }
      },
      "299": {
        start: {
          line: 564,
          column: 31
        },
        end: {
          line: 564,
          column: 47
        }
      },
      "300": {
        start: {
          line: 565,
          column: 16
        },
        end: {
          line: 565,
          column: 87
        }
      },
      "301": {
        start: {
          line: 566,
          column: 16
        },
        end: {
          line: 566,
          column: 30
        }
      },
      "302": {
        start: {
          line: 569,
          column: 16
        },
        end: {
          line: 569,
          column: 96
        }
      },
      "303": {
        start: {
          line: 570,
          column: 16
        },
        end: {
          line: 573,
          column: 17
        }
      },
      "304": {
        start: {
          line: 571,
          column: 20
        },
        end: {
          line: 571,
          column: 77
        }
      },
      "305": {
        start: {
          line: 572,
          column: 20
        },
        end: {
          line: 572,
          column: 30
        }
      },
      "306": {
        start: {
          line: 576,
          column: 8
        },
        end: {
          line: 576,
          column: 18
        }
      },
      "307": {
        start: {
          line: 579,
          column: 30
        },
        end: {
          line: 579,
          column: 32
        }
      },
      "308": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 605,
          column: 9
        }
      },
      "309": {
        start: {
          line: 580,
          column: 27
        },
        end: {
          line: 580,
          column: 28
        }
      },
      "310": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 604,
          column: 13
        }
      },
      "311": {
        start: {
          line: 582,
          column: 29
        },
        end: {
          line: 582,
          column: 55
        }
      },
      "312": {
        start: {
          line: 583,
          column: 36
        },
        end: {
          line: 586,
          column: 18
        }
      },
      "313": {
        start: {
          line: 587,
          column: 16
        },
        end: {
          line: 599,
          column: 17
        }
      },
      "314": {
        start: {
          line: 588,
          column: 20
        },
        end: {
          line: 598,
          column: 21
        }
      },
      "315": {
        start: {
          line: 589,
          column: 24
        },
        end: {
          line: 597,
          column: 27
        }
      },
      "316": {
        start: {
          line: 602,
          column: 16
        },
        end: {
          line: 602,
          column: 80
        }
      },
      "317": {
        start: {
          line: 603,
          column: 16
        },
        end: {
          line: 603,
          column: 25
        }
      },
      "318": {
        start: {
          line: 606,
          column: 8
        },
        end: {
          line: 606,
          column: 29
        }
      },
      "319": {
        start: {
          line: 609,
          column: 30
        },
        end: {
          line: 609,
          column: 32
        }
      },
      "320": {
        start: {
          line: 610,
          column: 8
        },
        end: {
          line: 632,
          column: 9
        }
      },
      "321": {
        start: {
          line: 610,
          column: 27
        },
        end: {
          line: 610,
          column: 28
        }
      },
      "322": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 631,
          column: 13
        }
      },
      "323": {
        start: {
          line: 612,
          column: 29
        },
        end: {
          line: 612,
          column: 55
        }
      },
      "324": {
        start: {
          line: 613,
          column: 36
        },
        end: {
          line: 613,
          column: 63
        }
      },
      "325": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 626,
          column: 17
        }
      },
      "326": {
        start: {
          line: 615,
          column: 20
        },
        end: {
          line: 625,
          column: 21
        }
      },
      "327": {
        start: {
          line: 616,
          column: 24
        },
        end: {
          line: 624,
          column: 27
        }
      },
      "328": {
        start: {
          line: 629,
          column: 16
        },
        end: {
          line: 629,
          column: 93
        }
      },
      "329": {
        start: {
          line: 630,
          column: 16
        },
        end: {
          line: 630,
          column: 25
        }
      },
      "330": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 633,
          column: 29
        }
      },
      "331": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 636,
          column: 64
        }
      },
      "332": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 656,
          column: 9
        }
      },
      "333": {
        start: {
          line: 639,
          column: 25
        },
        end: {
          line: 639,
          column: 45
        }
      },
      "334": {
        start: {
          line: 640,
          column: 32
        },
        end: {
          line: 640,
          column: 59
        }
      },
      "335": {
        start: {
          line: 641,
          column: 12
        },
        end: {
          line: 651,
          column: 16
        }
      },
      "336": {
        start: {
          line: 642,
          column: 34
        },
        end: {
          line: 642,
          column: 66
        }
      },
      "337": {
        start: {
          line: 643,
          column: 39
        },
        end: {
          line: 651,
          column: 13
        }
      },
      "338": {
        start: {
          line: 654,
          column: 12
        },
        end: {
          line: 654,
          column: 73
        }
      },
      "339": {
        start: {
          line: 655,
          column: 12
        },
        end: {
          line: 655,
          column: 22
        }
      },
      "340": {
        start: {
          line: 662,
          column: 8
        },
        end: {
          line: 678,
          column: 9
        }
      },
      "341": {
        start: {
          line: 663,
          column: 12
        },
        end: {
          line: 664,
          column: 25
        }
      },
      "342": {
        start: {
          line: 664,
          column: 16
        },
        end: {
          line: 664,
          column: 25
        }
      },
      "343": {
        start: {
          line: 666,
          column: 12
        },
        end: {
          line: 677,
          column: 13
        }
      },
      "344": {
        start: {
          line: 670,
          column: 16
        },
        end: {
          line: 676,
          column: 18
        }
      },
      "345": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 679,
          column: 20
        }
      },
      "346": {
        start: {
          line: 686,
          column: 8
        },
        end: {
          line: 686,
          column: 56
        }
      },
      "347": {
        start: {
          line: 687,
          column: 23
        },
        end: {
          line: 687,
          column: 59
        }
      },
      "348": {
        start: {
          line: 688,
          column: 21
        },
        end: {
          line: 688,
          column: 47
        }
      },
      "349": {
        start: {
          line: 689,
          column: 21
        },
        end: {
          line: 689,
          column: 78
        }
      },
      "350": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 698,
          column: 9
        }
      },
      "351": {
        start: {
          line: 691,
          column: 12
        },
        end: {
          line: 697,
          column: 15
        }
      },
      "352": {
        start: {
          line: 699,
          column: 25
        },
        end: {
          line: 699,
          column: 44
        }
      },
      "353": {
        start: {
          line: 700,
          column: 8
        },
        end: {
          line: 700,
          column: 41
        }
      },
      "354": {
        start: {
          line: 701,
          column: 8
        },
        end: {
          line: 701,
          column: 24
        }
      },
      "355": {
        start: {
          line: 704,
          column: 0
        },
        end: {
          line: 704,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 59
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 141,
            column: 38
          },
          end: {
            line: 141,
            column: 39
          }
        },
        loc: {
          start: {
            line: 141,
            column: 49
          },
          end: {
            line: 141,
            column: 84
          }
        },
        line: 141
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 51
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 152
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 171
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 185
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 63
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 221
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 56
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 256
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 347,
            column: 38
          },
          end: {
            line: 347,
            column: 39
          }
        },
        loc: {
          start: {
            line: 347,
            column: 49
          },
          end: {
            line: 347,
            column: 83
          }
        },
        line: 347
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 67
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 358
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        loc: {
          start: {
            line: 426,
            column: 57
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 426
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 5
          }
        },
        loc: {
          start: {
            line: 464,
            column: 49
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 464
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 477,
            column: 5
          }
        },
        loc: {
          start: {
            line: 477,
            column: 65
          },
          end: {
            line: 508,
            column: 5
          }
        },
        line: 477
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 509,
            column: 4
          },
          end: {
            line: 509,
            column: 5
          }
        },
        loc: {
          start: {
            line: 509,
            column: 57
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 509
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        },
        loc: {
          start: {
            line: 529,
            column: 47
          },
          end: {
            line: 577,
            column: 5
          }
        },
        line: 529
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 533,
            column: 12
          },
          end: {
            line: 533,
            column: 13
          }
        },
        loc: {
          start: {
            line: 533,
            column: 24
          },
          end: {
            line: 543,
            column: 13
          }
        },
        line: 533
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 545,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        },
        loc: {
          start: {
            line: 545,
            column: 24
          },
          end: {
            line: 554,
            column: 13
          }
        },
        line: 545
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 556,
            column: 12
          },
          end: {
            line: 556,
            column: 13
          }
        },
        loc: {
          start: {
            line: 556,
            column: 24
          },
          end: {
            line: 560,
            column: 13
          }
        },
        line: 556
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 578,
            column: 4
          },
          end: {
            line: 578,
            column: 5
          }
        },
        loc: {
          start: {
            line: 578,
            column: 39
          },
          end: {
            line: 607,
            column: 5
          }
        },
        line: 578
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 608,
            column: 4
          },
          end: {
            line: 608,
            column: 5
          }
        },
        loc: {
          start: {
            line: 608,
            column: 40
          },
          end: {
            line: 634,
            column: 5
          }
        },
        line: 608
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 635,
            column: 4
          },
          end: {
            line: 635,
            column: 5
          }
        },
        loc: {
          start: {
            line: 635,
            column: 36
          },
          end: {
            line: 657,
            column: 5
          }
        },
        line: 635
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 642,
            column: 24
          },
          end: {
            line: 642,
            column: 25
          }
        },
        loc: {
          start: {
            line: 642,
            column: 34
          },
          end: {
            line: 642,
            column: 66
          }
        },
        line: 642
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 643,
            column: 21
          },
          end: {
            line: 643,
            column: 22
          }
        },
        loc: {
          start: {
            line: 643,
            column: 39
          },
          end: {
            line: 651,
            column: 13
          }
        },
        line: 643
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 661,
            column: 4
          },
          end: {
            line: 661,
            column: 5
          }
        },
        loc: {
          start: {
            line: 661,
            column: 84
          },
          end: {
            line: 680,
            column: 5
          }
        },
        line: 661
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 685,
            column: 4
          },
          end: {
            line: 685,
            column: 5
          }
        },
        loc: {
          start: {
            line: 685,
            column: 39
          },
          end: {
            line: 702,
            column: 5
          }
        },
        line: 685
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "18": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 66
          }
        }],
        line: 47
      },
      "19": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "20": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 25
          }
        }, {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 50,
            column: 54
          }
        }],
        line: 50
      },
      "21": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "22": {
        loc: {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 88,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 88,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "23": {
        loc: {
          start: {
            line: 120,
            column: 35
          },
          end: {
            line: 120,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 35
          },
          end: {
            line: 120,
            column: 58
          }
        }, {
          start: {
            line: 120,
            column: 62
          },
          end: {
            line: 120,
            column: 89
          }
        }],
        line: 120
      },
      "24": {
        loc: {
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 124,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 124,
            column: 53
          }
        }, {
          start: {
            line: 124,
            column: 57
          },
          end: {
            line: 124,
            column: 58
          }
        }],
        line: 124
      },
      "25": {
        loc: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "26": {
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 142,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 142,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "27": {
        loc: {
          start: {
            line: 145,
            column: 86
          },
          end: {
            line: 145,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 86
          },
          end: {
            line: 145,
            column: 104
          }
        }, {
          start: {
            line: 145,
            column: 108
          },
          end: {
            line: 145,
            column: 123
          }
        }],
        line: 145
      },
      "28": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "29": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 36
          }
        }, {
          start: {
            line: 154,
            column: 40
          },
          end: {
            line: 154,
            column: 73
          }
        }],
        line: 154
      },
      "30": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "31": {
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 157,
            column: 49
          }
        }, {
          start: {
            line: 157,
            column: 53
          },
          end: {
            line: 157,
            column: 81
          }
        }],
        line: 157
      },
      "32": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "33": {
        loc: {
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 160,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 160,
            column: 36
          }
        }, {
          start: {
            line: 160,
            column: 40
          },
          end: {
            line: 160,
            column: 70
          }
        }],
        line: 160
      },
      "34": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "35": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 41
          }
        }, {
          start: {
            line: 163,
            column: 45
          },
          end: {
            line: 163,
            column: 71
          }
        }],
        line: 163
      },
      "36": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "37": {
        loc: {
          start: {
            line: 188,
            column: 31
          },
          end: {
            line: 188,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 31
          },
          end: {
            line: 188,
            column: 53
          }
        }, {
          start: {
            line: 188,
            column: 57
          },
          end: {
            line: 188,
            column: 68
          }
        }],
        line: 188
      },
      "38": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 195,
            column: 37
          }
        }, {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 198,
            column: 30
          }
        }, {
          start: {
            line: 199,
            column: 20
          },
          end: {
            line: 201,
            column: 30
          }
        }, {
          start: {
            line: 202,
            column: 20
          },
          end: {
            line: 204,
            column: 30
          }
        }, {
          start: {
            line: 205,
            column: 20
          },
          end: {
            line: 207,
            column: 30
          }
        }],
        line: 194
      },
      "39": {
        loc: {
          start: {
            line: 222,
            column: 27
          },
          end: {
            line: 222,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 27
          },
          end: {
            line: 222,
            column: 49
          }
        }, {
          start: {
            line: 222,
            column: 53
          },
          end: {
            line: 222,
            column: 64
          }
        }],
        line: 222
      },
      "40": {
        loc: {
          start: {
            line: 223,
            column: 21
          },
          end: {
            line: 223,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 21
          },
          end: {
            line: 223,
            column: 46
          }
        }, {
          start: {
            line: 223,
            column: 50
          },
          end: {
            line: 223,
            column: 76
          }
        }],
        line: 223
      },
      "41": {
        loc: {
          start: {
            line: 224,
            column: 22
          },
          end: {
            line: 224,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 22
          },
          end: {
            line: 224,
            column: 39
          }
        }, {
          start: {
            line: 224,
            column: 43
          },
          end: {
            line: 224,
            column: 63
          }
        }],
        line: 224
      },
      "42": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "43": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 29
          }
        }, {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 66
          }
        }],
        line: 259
      },
      "44": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "45": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 262,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 262,
            column: 26
          }
        }, {
          start: {
            line: 262,
            column: 30
          },
          end: {
            line: 262,
            column: 56
          }
        }],
        line: 262
      },
      "46": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "47": {
        loc: {
          start: {
            line: 295,
            column: 24
          },
          end: {
            line: 298,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 24
          },
          end: {
            line: 298,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "48": {
        loc: {
          start: {
            line: 326,
            column: 35
          },
          end: {
            line: 326,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 35
          },
          end: {
            line: 326,
            column: 58
          }
        }, {
          start: {
            line: 326,
            column: 62
          },
          end: {
            line: 326,
            column: 89
          }
        }],
        line: 326
      },
      "49": {
        loc: {
          start: {
            line: 330,
            column: 34
          },
          end: {
            line: 330,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 34
          },
          end: {
            line: 330,
            column: 53
          }
        }, {
          start: {
            line: 330,
            column: 57
          },
          end: {
            line: 330,
            column: 58
          }
        }],
        line: 330
      },
      "50": {
        loc: {
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 338,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 338,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "51": {
        loc: {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 348,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 348,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "52": {
        loc: {
          start: {
            line: 351,
            column: 88
          },
          end: {
            line: 351,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 88
          },
          end: {
            line: 351,
            column: 106
          }
        }, {
          start: {
            line: 351,
            column: 110
          },
          end: {
            line: 351,
            column: 125
          }
        }],
        line: 351
      },
      "53": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "54": {
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 23
          }
        }, {
          start: {
            line: 360,
            column: 27
          },
          end: {
            line: 360,
            column: 50
          }
        }],
        line: 360
      },
      "55": {
        loc: {
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 369,
            column: 16
          },
          end: {
            line: 382,
            column: 26
          }
        }, {
          start: {
            line: 383,
            column: 16
          },
          end: {
            line: 393,
            column: 26
          }
        }, {
          start: {
            line: 394,
            column: 16
          },
          end: {
            line: 403,
            column: 26
          }
        }],
        line: 368
      },
      "56": {
        loc: {
          start: {
            line: 370,
            column: 20
          },
          end: {
            line: 381,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 20
          },
          end: {
            line: 381,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "57": {
        loc: {
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "58": {
        loc: {
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "59": {
        loc: {
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "60": {
        loc: {
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "61": {
        loc: {
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 428,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 428,
            column: 22
          }
        }, {
          start: {
            line: 428,
            column: 26
          },
          end: {
            line: 428,
            column: 48
          }
        }],
        line: 428
      },
      "62": {
        loc: {
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 438,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 438,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "63": {
        loc: {
          start: {
            line: 440,
            column: 30
          },
          end: {
            line: 440,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 30
          },
          end: {
            line: 440,
            column: 44
          }
        }, {
          start: {
            line: 440,
            column: 48
          },
          end: {
            line: 440,
            column: 51
          }
        }],
        line: 440
      },
      "64": {
        loc: {
          start: {
            line: 441,
            column: 31
          },
          end: {
            line: 441,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 31
          },
          end: {
            line: 441,
            column: 46
          }
        }, {
          start: {
            line: 441,
            column: 50
          },
          end: {
            line: 441,
            column: 52
          }
        }],
        line: 441
      },
      "65": {
        loc: {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "66": {
        loc: {
          start: {
            line: 466,
            column: 16
          },
          end: {
            line: 466,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 16
          },
          end: {
            line: 466,
            column: 30
          }
        }, {
          start: {
            line: 466,
            column: 34
          },
          end: {
            line: 466,
            column: 61
          }
        }],
        line: 466
      },
      "67": {
        loc: {
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 471,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 471,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "68": {
        loc: {
          start: {
            line: 469,
            column: 16
          },
          end: {
            line: 469,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 16
          },
          end: {
            line: 469,
            column: 33
          }
        }, {
          start: {
            line: 469,
            column: 37
          },
          end: {
            line: 469,
            column: 64
          }
        }],
        line: 469
      },
      "69": {
        loc: {
          start: {
            line: 472,
            column: 12
          },
          end: {
            line: 474,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 12
          },
          end: {
            line: 474,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "70": {
        loc: {
          start: {
            line: 472,
            column: 16
          },
          end: {
            line: 472,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 16
          },
          end: {
            line: 472,
            column: 38
          }
        }, {
          start: {
            line: 472,
            column: 42
          },
          end: {
            line: 472,
            column: 65
          }
        }],
        line: 472
      },
      "71": {
        loc: {
          start: {
            line: 480,
            column: 31
          },
          end: {
            line: 480,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 480,
            column: 31
          },
          end: {
            line: 480,
            column: 50
          }
        }, {
          start: {
            line: 480,
            column: 54
          },
          end: {
            line: 480,
            column: 65
          }
        }],
        line: 480
      },
      "72": {
        loc: {
          start: {
            line: 486,
            column: 16
          },
          end: {
            line: 500,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 487,
            column: 20
          },
          end: {
            line: 487,
            column: 37
          }
        }, {
          start: {
            line: 488,
            column: 20
          },
          end: {
            line: 490,
            column: 30
          }
        }, {
          start: {
            line: 491,
            column: 20
          },
          end: {
            line: 493,
            column: 30
          }
        }, {
          start: {
            line: 494,
            column: 20
          },
          end: {
            line: 496,
            column: 30
          }
        }, {
          start: {
            line: 497,
            column: 20
          },
          end: {
            line: 499,
            column: 30
          }
        }],
        line: 486
      },
      "73": {
        loc: {
          start: {
            line: 510,
            column: 27
          },
          end: {
            line: 510,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 27
          },
          end: {
            line: 510,
            column: 46
          }
        }, {
          start: {
            line: 510,
            column: 50
          },
          end: {
            line: 510,
            column: 61
          }
        }],
        line: 510
      },
      "74": {
        loc: {
          start: {
            line: 511,
            column: 21
          },
          end: {
            line: 511,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 21
          },
          end: {
            line: 511,
            column: 46
          }
        }, {
          start: {
            line: 511,
            column: 50
          },
          end: {
            line: 511,
            column: 76
          }
        }],
        line: 511
      },
      "75": {
        loc: {
          start: {
            line: 512,
            column: 22
          },
          end: {
            line: 512,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 512,
            column: 22
          },
          end: {
            line: 512,
            column: 36
          }
        }, {
          start: {
            line: 512,
            column: 40
          },
          end: {
            line: 512,
            column: 60
          }
        }],
        line: 512
      },
      "76": {
        loc: {
          start: {
            line: 513,
            column: 25
          },
          end: {
            line: 513,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 25
          },
          end: {
            line: 513,
            column: 42
          }
        }, {
          start: {
            line: 513,
            column: 46
          },
          end: {
            line: 513,
            column: 47
          }
        }],
        line: 513
      },
      "77": {
        loc: {
          start: {
            line: 514,
            column: 24
          },
          end: {
            line: 514,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 514,
            column: 24
          },
          end: {
            line: 514,
            column: 40
          }
        }, {
          start: {
            line: 514,
            column: 44
          },
          end: {
            line: 514,
            column: 45
          }
        }],
        line: 514
      },
      "78": {
        loc: {
          start: {
            line: 570,
            column: 16
          },
          end: {
            line: 573,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 570,
            column: 16
          },
          end: {
            line: 573,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 570
      },
      "79": {
        loc: {
          start: {
            line: 588,
            column: 20
          },
          end: {
            line: 598,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 20
          },
          end: {
            line: 598,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 588
      },
      "80": {
        loc: {
          start: {
            line: 588,
            column: 24
          },
          end: {
            line: 588,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 588,
            column: 24
          },
          end: {
            line: 588,
            column: 37
          }
        }, {
          start: {
            line: 588,
            column: 41
          },
          end: {
            line: 588,
            column: 56
          }
        }],
        line: 588
      },
      "81": {
        loc: {
          start: {
            line: 594,
            column: 38
          },
          end: {
            line: 594,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 594,
            column: 38
          },
          end: {
            line: 594,
            column: 65
          }
        }, {
          start: {
            line: 594,
            column: 69
          },
          end: {
            line: 594,
            column: 71
          }
        }],
        line: 594
      },
      "82": {
        loc: {
          start: {
            line: 595,
            column: 35
          },
          end: {
            line: 595,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 595,
            column: 35
          },
          end: {
            line: 595,
            column: 45
          }
        }, {
          start: {
            line: 595,
            column: 49
          },
          end: {
            line: 595,
            column: 50
          }
        }],
        line: 595
      },
      "83": {
        loc: {
          start: {
            line: 596,
            column: 36
          },
          end: {
            line: 596,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 596,
            column: 36
          },
          end: {
            line: 596,
            column: 63
          }
        }, {
          start: {
            line: 596,
            column: 67
          },
          end: {
            line: 596,
            column: 69
          }
        }],
        line: 596
      },
      "84": {
        loc: {
          start: {
            line: 615,
            column: 20
          },
          end: {
            line: 625,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 615,
            column: 20
          },
          end: {
            line: 625,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 615
      },
      "85": {
        loc: {
          start: {
            line: 615,
            column: 24
          },
          end: {
            line: 615,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 615,
            column: 24
          },
          end: {
            line: 615,
            column: 37
          }
        }, {
          start: {
            line: 615,
            column: 41
          },
          end: {
            line: 615,
            column: 56
          }
        }],
        line: 615
      },
      "86": {
        loc: {
          start: {
            line: 619,
            column: 31
          },
          end: {
            line: 619,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 619,
            column: 31
          },
          end: {
            line: 619,
            column: 50
          }
        }, {
          start: {
            line: 619,
            column: 54
          },
          end: {
            line: 619,
            column: 55
          }
        }],
        line: 619
      },
      "87": {
        loc: {
          start: {
            line: 620,
            column: 31
          },
          end: {
            line: 620,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 620,
            column: 31
          },
          end: {
            line: 620,
            column: 50
          }
        }, {
          start: {
            line: 620,
            column: 54
          },
          end: {
            line: 620,
            column: 55
          }
        }],
        line: 620
      },
      "88": {
        loc: {
          start: {
            line: 622,
            column: 35
          },
          end: {
            line: 622,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 622,
            column: 35
          },
          end: {
            line: 622,
            column: 45
          }
        }, {
          start: {
            line: 622,
            column: 49
          },
          end: {
            line: 622,
            column: 50
          }
        }],
        line: 622
      },
      "89": {
        loc: {
          start: {
            line: 642,
            column: 34
          },
          end: {
            line: 642,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 642,
            column: 34
          },
          end: {
            line: 642,
            column: 47
          }
        }, {
          start: {
            line: 642,
            column: 51
          },
          end: {
            line: 642,
            column: 66
          }
        }],
        line: 642
      },
      "90": {
        loc: {
          start: {
            line: 661,
            column: 68
          },
          end: {
            line: 661,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 661,
            column: 80
          },
          end: {
            line: 661,
            column: 82
          }
        }],
        line: 661
      },
      "91": {
        loc: {
          start: {
            line: 663,
            column: 12
          },
          end: {
            line: 664,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 663,
            column: 12
          },
          end: {
            line: 664,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 663
      },
      "92": {
        loc: {
          start: {
            line: 666,
            column: 12
          },
          end: {
            line: 677,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 666,
            column: 12
          },
          end: {
            line: 677,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 666
      },
      "93": {
        loc: {
          start: {
            line: 666,
            column: 16
          },
          end: {
            line: 669,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 666,
            column: 16
          },
          end: {
            line: 666,
            column: 48
          }
        }, {
          start: {
            line: 667,
            column: 16
          },
          end: {
            line: 667,
            column: 65
          }
        }, {
          start: {
            line: 668,
            column: 16
          },
          end: {
            line: 668,
            column: 48
          }
        }, {
          start: {
            line: 669,
            column: 16
          },
          end: {
            line: 669,
            column: 66
          }
        }],
        line: 666
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0, 0, 0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\RealPDFTextEditor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\RealPDFTextEditor.ts"],
      sourcesContent: ["import { PDFDocument, StandardFonts, rgb, PDFPage, PDFFont, PDFRef, PDFPageLeaf, PDFArray, PDFDict, PDFName, PDFString } from 'pdf-lib';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { createSafePDFBytes, validatePDFBytes } from '../../common/utils';\n\ninterface TextToReplace {\n  oldText: string;\n  newText: string;\n  page: number;\n  x: number;\n  y: number;\n  fontSize: number;\n  fontFamily?: string;\n  color?: { r: number; g: number; b: number };\n}\n\ninterface TextEditOperation {\n  type: 'replace' | 'add' | 'delete';\n  page: number;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  text: string;\n  newText?: string;\n  fontSize: number;\n  fontFamily?: string;\n  color?: { r: number; g: number; b: number };\n}\n\nexport class RealPDFTextEditor {\n  \n  /**\n   * Advanced PDF text editing with comprehensive error recovery and real text modification\n   */\n  async replaceTextInPDF(originalPdfBytes: Uint8Array, replacements: TextToReplace[]): Promise<Uint8Array> {\n    console.log('\uD83D\uDD04 Performing ADVANCED PDF text replacement...');\n    \n    // Validate input\n    if (!originalPdfBytes || originalPdfBytes.byteLength === 0) {\n      throw new Error('Cannot edit empty or null PDF bytes');\n    }\n    \n    if (!replacements || replacements.length === 0) {\n      console.log('\u26A0\uFE0F No text replacements provided, returning original PDF');\n      return createSafePDFBytes(originalPdfBytes);\n    }\n    \n    // Validate PDF before editing\n    if (!validatePDFBytes(originalPdfBytes)) {\n      throw new Error('Invalid PDF provided for text editing');\n    }\n    \n    const maxRetries = 3;\n    let lastError: Error | null = null;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        console.log(`\uD83D\uDCDD Text editing attempt ${attempt}/${maxRetries}`);\n        \n        // Create safe copy to prevent detachment\n        const safePdfBytes = createSafePDFBytes(originalPdfBytes);\n        \n        // Load PDF with enhanced options\n        const pdfDoc = await PDFDocument.load(safePdfBytes, {\n          ignoreEncryption: false,\n          parseSpeed: 1,\n          throwOnInvalidJPEGData: false,\n          updateMetadata: true\n        });\n        \n        const pages = pdfDoc.getPages();\n        console.log(`\uD83D\uDCC4 PDF loaded: ${pages.length} pages`);\n        \n        // Validate replacement data\n        this.validateReplacements(replacements, pages.length);\n        \n        // Group replacements by page for efficient processing\n        const replacementsByPage = this.groupReplacementsByPage(replacements);\n        \n        // Embed fonts (cache for reuse)\n        const fontCache = new Map<string, PDFFont>();\n        await this.prepareFonts(pdfDoc, replacements, fontCache);\n        \n        // Process each page with replacements\n        let totalReplacements = 0;\n        for (const [pageIndex, pageReplacements] of replacementsByPage.entries()) {\n          const page = pages[pageIndex];\n          if (!page) {\n            console.warn(`\u26A0\uFE0F Page ${pageIndex + 1} not found, skipping replacements`);\n            continue;\n          }\n          \n          console.log(`\uD83D\uDCDD Processing ${pageReplacements.length} replacements on page ${pageIndex + 1}`);\n          \n          for (const replacement of pageReplacements) {\n            try {\n              await this.performTextReplacement(page, replacement, fontCache);\n              totalReplacements++;\n              console.log(`\u2705 Replaced \"${replacement.oldText}\" with \"${replacement.newText}\"`);\n            } catch (replError) {\n              console.error(`\u274C Failed to replace text on page ${pageIndex + 1}:`, (replError as Error).message);\n              // Continue with other replacements instead of failing completely\n            }\n          }\n        }\n        \n        console.log(`\uD83D\uDCCA Completed ${totalReplacements} text replacements`);\n        \n        // Save with optimal settings\n        const modifiedPdfBytes = await pdfDoc.save({\n          useObjectStreams: false, // Better compatibility\n          addDefaultPage: false,\n          updateFieldAppearances: true\n        });\n        \n        // CRITICAL FIX: Prevent ArrayBuffer detachment issues\n        // Create a completely new Uint8Array to avoid detachment\n        let safeCopy: Uint8Array;\n        try {\n          // Primary method: Use Uint8Array.from which creates a new buffer\n          safeCopy = Uint8Array.from(modifiedPdfBytes);\n          console.log(`\u2705 Created safe copy using Uint8Array.from: ${safeCopy.byteLength} bytes`);\n        } catch (e) {\n          console.warn('\u26A0\uFE0F Uint8Array.from failed, using fallback method');\n          // Fallback: Manual byte-by-byte copy\n          const length = modifiedPdfBytes.length || modifiedPdfBytes.byteLength;\n          const buffer = new ArrayBuffer(length);\n          const view = new Uint8Array(buffer);\n          for (let i = 0; i < length; i++) {\n            view[i] = modifiedPdfBytes[i] || 0;\n          }\n          safeCopy = view;\n          console.log(`\u2705 Created safe copy using manual copy: ${safeCopy.byteLength} bytes`);\n        }\n        \n        // Validate the result\n        if (!validatePDFBytes(safeCopy)) {\n          console.warn('\u26A0\uFE0F PDF validation failed but continuing');\n        }\n        \n        console.log(`\u2705 PDF text replacement completed successfully: ${safeCopy.byteLength} bytes`);\n        return safeCopy;\n        \n      } catch (error) {\n        lastError = error as Error;\n        console.error(`\u274C Text editing attempt ${attempt} failed:`, lastError.message);\n        \n        if (attempt < maxRetries) {\n          console.log(`\u23F3 Waiting before retry attempt ${attempt + 1}...`);\n          await new Promise(resolve => setTimeout(resolve, 1000 * attempt));\n        }\n      }\n    }\n    \n    const errorMessage = `Failed to edit PDF text after ${maxRetries} attempts: ${lastError?.message || 'Unknown error'}`;\n    console.error('\u274C All text editing attempts failed:', errorMessage);\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * Validate replacement operations before processing\n   */\n  private validateReplacements(replacements: TextToReplace[], totalPages: number): void {\n    for (const replacement of replacements) {\n      if (!replacement.oldText || replacement.oldText.trim() === '') {\n        throw new Error('Empty oldText in replacement operation');\n      }\n      \n      if (replacement.newText === undefined || replacement.newText === null) {\n        throw new Error('newText cannot be null or undefined');\n      }\n      \n      if (replacement.page < 0 || replacement.page >= totalPages) {\n        throw new Error(`Invalid page index ${replacement.page}. PDF has ${totalPages} pages`);\n      }\n      \n      if (replacement.fontSize <= 0 || replacement.fontSize > 200) {\n        throw new Error(`Invalid font size ${replacement.fontSize}. Must be between 1 and 200`);\n      }\n    }\n  }\n\n  /**\n   * Group replacements by page for efficient processing\n   */\n  private groupReplacementsByPage(replacements: TextToReplace[]): Map<number, TextToReplace[]> {\n    const replacementsByPage = new Map<number, TextToReplace[]>();\n    \n    for (const replacement of replacements) {\n      const pageNum = replacement.page;\n      if (!replacementsByPage.has(pageNum)) {\n        replacementsByPage.set(pageNum, []);\n      }\n      replacementsByPage.get(pageNum)!.push(replacement);\n    }\n    \n    return replacementsByPage;\n  }\n\n  /**\n   * Prepare and cache fonts for all replacements\n   */\n  private async prepareFonts(pdfDoc: PDFDocument, replacements: TextToReplace[], fontCache: Map<string, PDFFont>): Promise<void> {\n    const uniqueFonts = new Set<string>();\n    \n    for (const replacement of replacements) {\n      const fontFamily = replacement.fontFamily || 'Helvetica';\n      uniqueFonts.add(fontFamily);\n    }\n    \n    for (const fontFamily of uniqueFonts) {\n      try {\n        let font: PDFFont;\n        \n        switch (fontFamily.toLowerCase()) {\n          case 'helvetica':\n          default:\n            font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n            break;\n          case 'helvetica-bold':\n            font = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n            break;\n          case 'times-roman':\n            font = await pdfDoc.embedFont(StandardFonts.TimesRoman);\n            break;\n          case 'courier':\n            font = await pdfDoc.embedFont(StandardFonts.Courier);\n            break;\n        }\n        \n        fontCache.set(fontFamily, font);\n        console.log(`\uD83D\uDCDD Font cached: ${fontFamily}`);\n        \n      } catch (error) {\n        console.warn(`\u26A0\uFE0F Failed to embed font ${fontFamily}, using Helvetica fallback`);\n        fontCache.set(fontFamily, await pdfDoc.embedFont(StandardFonts.Helvetica));\n      }\n    }\n  }\n\n  /**\n   * Perform individual text replacement with advanced covering technique\n   */\n  private async performTextReplacement(\n    page: PDFPage, \n    replacement: TextToReplace, \n    fontCache: Map<string, PDFFont>\n  ): Promise<void> {\n    const fontFamily = replacement.fontFamily || 'Helvetica';\n    const font = fontCache.get(fontFamily) || fontCache.get('Helvetica')!;\n    const color = replacement.color || { r: 0, g: 0, b: 0 };\n    \n    // Calculate dimensions for accurate covering\n    const originalWidth = font.widthOfTextAtSize(replacement.oldText, replacement.fontSize);\n    const newWidth = font.widthOfTextAtSize(replacement.newText, replacement.fontSize);\n    const textHeight = replacement.fontSize * 1.2; // Include line height\n    \n    // Enhanced covering: use slightly larger rectangle with better positioning\n    const coverX = replacement.x - 1;\n    const coverY = replacement.y - (textHeight * 0.25);\n    const coverWidth = Math.max(originalWidth, newWidth) + 2;\n    const coverHeight = textHeight;\n    \n    // Cover the original text with background-matched rectangle\n    page.drawRectangle({\n      x: coverX,\n      y: coverY,\n      width: coverWidth,\n      height: coverHeight,\n      color: rgb(1, 1, 1), // White - could be improved to match background\n      opacity: 1,\n      borderWidth: 0\n    });\n    \n    // Draw the new text with precise positioning\n    page.drawText(replacement.newText, {\n      x: replacement.x,\n      y: replacement.y,\n      size: replacement.fontSize,\n      font,\n      color: rgb(color.r, color.g, color.b)\n    });\n  }\n  \n  /**\n   * Enhanced text addition with comprehensive error handling and font support\n   */\n  async addTextToPDF(originalPdfBytes: Uint8Array, textAdditions: Array<{\n    text: string;\n    page: number;\n    x: number;\n    y: number;\n    fontSize: number;\n    fontFamily?: string;\n    color?: { r: number; g: number; b: number };\n    rotation?: number;\n    opacity?: number;\n  }>): Promise<Uint8Array> {\n    console.log('\u2795 Adding new text to PDF with enhanced features...');\n    \n    // Validate input\n    if (!originalPdfBytes || originalPdfBytes.byteLength === 0) {\n      throw new Error('Cannot add text to empty or null PDF');\n    }\n    \n    if (!textAdditions || textAdditions.length === 0) {\n      console.log('\u26A0\uFE0F No text additions provided, returning original PDF');\n      return createSafePDFBytes(originalPdfBytes);\n    }\n    \n    if (!validatePDFBytes(originalPdfBytes)) {\n      throw new Error('Invalid PDF provided for text addition');\n    }\n    \n    const maxRetries = 3;\n    let lastError: Error | null = null;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        console.log(`\u2795 Text addition attempt ${attempt}/${maxRetries}`);\n        \n        // Create safe copy\n        const safePdfBytes = createSafePDFBytes(originalPdfBytes);\n        \n        // Load PDF\n        const pdfDoc = await PDFDocument.load(safePdfBytes, {\n          ignoreEncryption: false,\n          parseSpeed: 1,\n          throwOnInvalidJPEGData: false,\n          updateMetadata: true\n        });\n        \n        const pages = pdfDoc.getPages();\n        console.log(`\uD83D\uDCC4 PDF loaded for text addition: ${pages.length} pages`);\n        \n        // Validate additions\n        this.validateTextAdditions(textAdditions, pages.length);\n        \n        // Prepare fonts\n        const fontCache = new Map<string, PDFFont>();\n        await this.prepareFontsForAdditions(pdfDoc, textAdditions, fontCache);\n        \n        // Add text to each page\n        let totalAdditions = 0;\n        for (const addition of textAdditions) {\n          try {\n            const page = pages[addition.page];\n            if (!page) {\n              console.warn(`\u26A0\uFE0F Page ${addition.page + 1} not found, skipping text addition`);\n              continue;\n            }\n            \n            await this.performTextAddition(page, addition, fontCache);\n            totalAdditions++;\n            console.log(`\u2705 Added text \"${addition.text}\" to page ${addition.page + 1}`);\n            \n          } catch (addError) {\n            console.error(`\u274C Failed to add text to page ${addition.page + 1}:`, (addError as Error).message);\n            // Continue with other additions\n          }\n        }\n        \n        console.log(`\uD83D\uDCCA Completed ${totalAdditions} text additions`);\n        \n        // Save with optimal settings\n        const modifiedPdfBytes = await pdfDoc.save({\n          useObjectStreams: false,\n          addDefaultPage: false,\n          updateFieldAppearances: true\n        });\n        \n        // CRITICAL FIX: Prevent ArrayBuffer detachment issues\n        // Create a completely new Uint8Array to avoid detachment\n        let safeCopy: Uint8Array;\n        try {\n          // Primary method: Use Uint8Array.from which creates a new buffer\n          safeCopy = Uint8Array.from(modifiedPdfBytes);\n          console.log(`\u2705 Created safe copy using Uint8Array.from: ${safeCopy.byteLength} bytes`);\n        } catch (e) {\n          console.warn('\u26A0\uFE0F Uint8Array.from failed, using fallback method');\n          // Fallback: Manual byte-by-byte copy\n          const length = modifiedPdfBytes.length || modifiedPdfBytes.byteLength;\n          const buffer = new ArrayBuffer(length);\n          const view = new Uint8Array(buffer);\n          for (let i = 0; i < length; i++) {\n            view[i] = modifiedPdfBytes[i] || 0;\n          }\n          safeCopy = view;\n          console.log(`\u2705 Created safe copy using manual copy: ${safeCopy.byteLength} bytes`);\n        }\n        \n        // Validate result\n        if (!validatePDFBytes(safeCopy)) {\n          console.warn('\u26A0\uFE0F PDF validation failed but continuing');\n        }\n        \n        console.log(`\u2705 Text addition completed successfully: ${safeCopy.byteLength} bytes`);\n        return safeCopy;\n        \n      } catch (error) {\n        lastError = error as Error;\n        console.error(`\u274C Text addition attempt ${attempt} failed:`, lastError.message);\n        \n        if (attempt < maxRetries) {\n          console.log(`\u23F3 Waiting before retry attempt ${attempt + 1}...`);\n          await new Promise(resolve => setTimeout(resolve, 500 * attempt));\n        }\n      }\n    }\n    \n    const errorMessage = `Failed to add text to PDF after ${maxRetries} attempts: ${lastError?.message || 'Unknown error'}`;\n    console.error('\u274C All text addition attempts failed:', errorMessage);\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * Batch text editing operations (replace, add, delete)\n   */\n  async performBatchTextOperations(originalPdfBytes: Uint8Array, operations: TextEditOperation[]): Promise<Uint8Array> {\n    console.log('\uD83D\uDD04 Performing batch text operations...');\n    \n    if (!operations || operations.length === 0) {\n      return createSafePDFBytes(originalPdfBytes);\n    }\n    \n    // Group operations by type for optimal processing\n    const replacements: TextToReplace[] = [];\n    const additions: any[] = [];\n    const deletions: any[] = [];\n    \n    for (const operation of operations) {\n      switch (operation.type) {\n        case 'replace':\n          if (operation.newText) {\n            replacements.push({\n              oldText: operation.text,\n              newText: operation.newText,\n              page: operation.page,\n              x: operation.x,\n              y: operation.y,\n              fontSize: operation.fontSize,\n              fontFamily: operation.fontFamily,\n              color: operation.color\n            });\n          }\n          break;\n          \n        case 'add':\n          additions.push({\n            text: operation.text,\n            page: operation.page,\n            x: operation.x,\n            y: operation.y,\n            fontSize: operation.fontSize,\n            fontFamily: operation.fontFamily,\n            color: operation.color\n          });\n          break;\n          \n        case 'delete':\n          deletions.push({\n            text: operation.text,\n            page: operation.page,\n            x: operation.x,\n            y: operation.y,\n            width: operation.width,\n            height: operation.height\n          });\n          break;\n      }\n    }\n    \n    let currentPdfBytes = originalPdfBytes;\n    \n    // Process operations in optimal order: deletions, replacements, additions\n    if (deletions.length > 0) {\n      console.log(`\uD83D\uDDD1\uFE0F Processing ${deletions.length} deletion operations`);\n      currentPdfBytes = await this.deleteTextFromPDF(currentPdfBytes, deletions);\n    }\n    \n    if (replacements.length > 0) {\n      console.log(`\uD83D\uDD04 Processing ${replacements.length} replacement operations`);\n      currentPdfBytes = await this.replaceTextInPDF(currentPdfBytes, replacements);\n    }\n    \n    if (additions.length > 0) {\n      console.log(`\u2795 Processing ${additions.length} addition operations`);\n      currentPdfBytes = await this.addTextToPDF(currentPdfBytes, additions);\n    }\n    \n    console.log('\u2705 Batch text operations completed');\n    return currentPdfBytes;\n  }\n\n  /**\n   * Delete text from PDF by covering with background color\n   */\n  async deleteTextFromPDF(originalPdfBytes: Uint8Array, deletions: Array<{\n    text: string;\n    page: number;\n    x: number;\n    y: number;\n    width?: number;\n    height?: number;\n  }>): Promise<Uint8Array> {\n    console.log('\uD83D\uDDD1\uFE0F Deleting text from PDF...');\n    \n    if (!deletions || deletions.length === 0) {\n      return createSafePDFBytes(originalPdfBytes);\n    }\n    \n    try {\n      const safePdfBytes = createSafePDFBytes(originalPdfBytes);\n      const pdfDoc = await PDFDocument.load(safePdfBytes);\n      const pages = pdfDoc.getPages();\n      \n      for (const deletion of deletions) {\n        const page = pages[deletion.page];\n        if (!page) continue;\n        \n        // Use provided dimensions or estimate from text\n        const width = deletion.width || 100; // Default width\n        const height = deletion.height || 20; // Default height\n        \n        // Cover with white rectangle\n        page.drawRectangle({\n          x: deletion.x,\n          y: deletion.y,\n          width,\n          height,\n          color: rgb(1, 1, 1), // White\n          opacity: 1\n        });\n        \n        console.log(`\uD83D\uDDD1\uFE0F Deleted text area at (${deletion.x}, ${deletion.y}) on page ${deletion.page + 1}`);\n      }\n      \n      const modifiedPdfBytes = await pdfDoc.save();\n      // CRITICAL FIX: Ensure proper Uint8Array construction\n      const safeCopy = Uint8Array.from(modifiedPdfBytes);\n      return safeCopy;\n      \n    } catch (error) {\n      console.error('\u274C Error deleting text from PDF:', (error as Error).message);\n      throw new Error(`Failed to delete text: ${(error as Error).message}`);\n    }\n  }\n\n  // Helper methods for validation and font management\n  private validateTextAdditions(additions: any[], totalPages: number): void {\n    for (const addition of additions) {\n      if (!addition.text || addition.text.trim() === '') {\n        throw new Error('Empty text in addition operation');\n      }\n      \n      if (addition.page < 0 || addition.page >= totalPages) {\n        throw new Error(`Invalid page index ${addition.page}. PDF has ${totalPages} pages`);\n      }\n      \n      if (addition.fontSize <= 0 || addition.fontSize > 200) {\n        throw new Error(`Invalid font size ${addition.fontSize}. Must be between 1 and 200`);\n      }\n    }\n  }\n\n  private async prepareFontsForAdditions(pdfDoc: PDFDocument, additions: any[], fontCache: Map<string, PDFFont>): Promise<void> {\n    const uniqueFonts = new Set<string>();\n    \n    for (const addition of additions) {\n      const fontFamily = addition.fontFamily || 'Helvetica';\n      uniqueFonts.add(fontFamily);\n    }\n    \n    for (const fontFamily of uniqueFonts) {\n      try {\n        let font: PDFFont;\n        \n        switch (fontFamily.toLowerCase()) {\n          case 'helvetica':\n          default:\n            font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n            break;\n          case 'helvetica-bold':\n            font = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n            break;\n          case 'times-roman':\n            font = await pdfDoc.embedFont(StandardFonts.TimesRoman);\n            break;\n          case 'courier':\n            font = await pdfDoc.embedFont(StandardFonts.Courier);\n            break;\n        }\n        \n        fontCache.set(fontFamily, font);\n        \n      } catch (error) {\n        console.warn(`\u26A0\uFE0F Failed to embed font ${fontFamily}, using Helvetica fallback`);\n        fontCache.set(fontFamily, await pdfDoc.embedFont(StandardFonts.Helvetica));\n      }\n    }\n  }\n\n  private async performTextAddition(page: PDFPage, addition: any, fontCache: Map<string, PDFFont>): Promise<void> {\n    const fontFamily = addition.fontFamily || 'Helvetica';\n    const font = fontCache.get(fontFamily) || fontCache.get('Helvetica')!;\n    const color = addition.color || { r: 0, g: 0, b: 0 };\n    const rotation = addition.rotation || 0;\n    const opacity = addition.opacity || 1;\n    \n    page.drawText(addition.text, {\n      x: addition.x,\n      y: addition.y,\n      size: addition.fontSize,\n      font,\n      color: rgb(color.r, color.g, color.b),\n      rotate: degrees(rotation),\n      opacity\n    });\n  }\n  \n  /**\n   * Extract existing text from PDF for editing with Emergency Recovery\n   * Returns text with position information\n   */\n  async extractEditableTextFromPDF(pdfBytes: Uint8Array): Promise<Array<{\n    text: string;\n    page: number;\n    x: number;\n    y: number;\n    fontSize: number;\n    width: number;\n    height: number;\n  }>> {\n    console.log('\uD83D\uDD0D Extracting editable text from PDF...');\n    \n    const strategies = [\n      // Strategy 1: Full extraction with optimizations\n      async () => {\n        const loadingTask = pdfjsLib.getDocument({\n          data: pdfBytes,\n          useWorkerFetch: false,\n          isEvalSupported: false,\n          useSystemFonts: true,\n          disableFontFace: false\n        });\n        const pdf = await loadingTask.promise;\n        return this.extractWithFullFeatures(pdf);\n      },\n      \n      // Strategy 2: Simplified extraction\n      async () => {\n        const loadingTask = pdfjsLib.getDocument({\n          data: pdfBytes,\n          useWorkerFetch: false,\n          isEvalSupported: false,\n          disableFontFace: true\n        });\n        const pdf = await loadingTask.promise;\n        return this.extractWithBasicFeatures(pdf);\n      },\n      \n      // Strategy 3: Emergency extraction (minimal)\n      async () => {\n        const loadingTask = pdfjsLib.getDocument(pdfBytes);\n        const pdf = await loadingTask.promise;\n        return this.extractEmergencyMode(pdf);\n      }\n    ];\n    \n    for (const [index, strategy] of strategies.entries()) {\n      try {\n        const result = await strategy();\n        console.log(`\u2705 Text extraction successful with strategy ${index + 1}`);\n        return result;\n      } catch (error) {\n        console.warn(`\u26A0\uFE0F Text extraction strategy ${index + 1} failed:`, error.message);\n        if (index === strategies.length - 1) {\n          console.error('\u274C All text extraction strategies failed');\n          return [];\n        }\n      }\n    }\n    \n    return [];\n  }\n  \n  private async extractWithFullFeatures(pdf: any): Promise<any[]> {\n    const extractedText: any[] = [];\n    \n    for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n      try {\n        const page = await pdf.getPage(pageNum);\n        const textContent = await page.getTextContent({\n          normalizeWhitespace: false,\n          disableCombineTextItems: false\n        });\n        \n        for (const item of textContent.items) {\n          if ('str' in item && item.str.trim()) {\n            extractedText.push({\n              text: item.str,\n              page: pageNum - 1,\n              x: item.transform[4],\n              y: item.transform[5],\n              fontSize: Math.abs(item.transform[0]) || 12,\n              width: item.width || 0,\n              height: Math.abs(item.transform[3]) || 12\n            });\n          }\n        }\n      } catch (pageError) {\n        console.warn(`\u26A0\uFE0F Error processing page ${pageNum}:`, pageError);\n        continue;\n      }\n    }\n    \n    return extractedText;\n  }\n  \n  private async extractWithBasicFeatures(pdf: any): Promise<any[]> {\n    const extractedText: any[] = [];\n    \n    for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n      try {\n        const page = await pdf.getPage(pageNum);\n        const textContent = await page.getTextContent();\n        \n        for (const item of textContent.items) {\n          if ('str' in item && item.str.trim()) {\n            extractedText.push({\n              text: item.str,\n              page: pageNum - 1,\n              x: item.transform?.[4] || 0,\n              y: item.transform?.[5] || 0,\n              fontSize: 12, // Default size\n              width: item.width || 0,\n              height: 12\n            });\n          }\n        }\n      } catch (pageError) {\n        console.warn(`\u26A0\uFE0F Error processing page ${pageNum} (basic mode):`, pageError);\n        continue;\n      }\n    }\n    \n    return extractedText;\n  }\n  \n  private async extractEmergencyMode(pdf: any): Promise<any[]> {\n    console.warn('\uD83D\uDEA8 Using emergency text extraction mode');\n    \n    try {\n      // Just try to get basic text from first page\n      const page = await pdf.getPage(1);\n      const textContent = await page.getTextContent();\n      \n      return textContent.items\n        .filter((item: any) => 'str' in item && item.str.trim())\n        .map((item: any, index: number) => ({\n          text: item.str,\n          page: 0,\n          x: index * 100, // Basic positioning\n          y: 100,\n          fontSize: 12,\n          width: 100,\n          height: 12\n        }));\n    } catch (error) {\n      console.error('\uD83D\uDEA8 Emergency extraction also failed:', error);\n      return [];\n    }\n  }\n  \n  /**\n   * Find text at specific coordinates for click-to-edit\n   */\n  findTextAtCoordinates(\n    extractedText: Array<{\n      text: string;\n      page: number;\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      fontSize: number;\n    }>,\n    pageIndex: number,\n    clickX: number,\n    clickY: number,\n    tolerance: number = 10\n  ): {\n    text: string;\n    page: number;\n    x: number;\n    y: number;\n    fontSize: number;\n  } | null {\n    \n    for (const textItem of extractedText) {\n      if (textItem.page !== pageIndex) continue;\n      \n      // Check if click is within text bounds\n      if (clickX >= textItem.x - tolerance &&\n          clickX <= textItem.x + textItem.width + tolerance &&\n          clickY >= textItem.y - tolerance &&\n          clickY <= textItem.y + textItem.height + tolerance) {\n        \n        return {\n          text: textItem.text,\n          page: textItem.page,\n          x: textItem.x,\n          y: textItem.y,\n          fontSize: textItem.fontSize\n        };\n      }\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Create a completely new PDF from scratch with text\n   * Useful for testing\n   */\n  async createPDFWithText(textItems: Array<{\n    text: string;\n    x: number;\n    y: number;\n    fontSize: number;\n  }>): Promise<Uint8Array> {\n    console.log('\uD83D\uDCC4 Creating new PDF with text...');\n    \n    const pdfDoc = await PDFDocument.create();\n    const page = pdfDoc.addPage([595, 842]); // A4 size\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    \n    for (const item of textItems) {\n      page.drawText(item.text, {\n        x: item.x,\n        y: item.y,\n        size: item.fontSize,\n        font,\n        color: rgb(0, 0, 0)\n      });\n    }\n    \n    const pdfBytes = await pdfDoc.save();\n    console.log('\u2705 New PDF created');\n    \n    return pdfBytes;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9bb2fea451fe3d950f247fbe199248100f36b861"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_g5kivdxmb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_g5kivdxmb();
var __createBinding =
/* istanbul ignore next */
(cov_g5kivdxmb().s[0]++,
/* istanbul ignore next */
(cov_g5kivdxmb().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_g5kivdxmb().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_g5kivdxmb().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_g5kivdxmb().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_g5kivdxmb().f[0]++;
  cov_g5kivdxmb().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_g5kivdxmb().b[2][0]++;
    cov_g5kivdxmb().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_g5kivdxmb().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_g5kivdxmb().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_g5kivdxmb().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_g5kivdxmb().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_g5kivdxmb().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_g5kivdxmb().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_g5kivdxmb().b[5][1]++,
  /* istanbul ignore next */
  (cov_g5kivdxmb().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_g5kivdxmb().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_g5kivdxmb().b[3][0]++;
    cov_g5kivdxmb().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_g5kivdxmb().f[1]++;
        cov_g5kivdxmb().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_g5kivdxmb().b[3][1]++;
  }
  cov_g5kivdxmb().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_g5kivdxmb().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_g5kivdxmb().f[2]++;
  cov_g5kivdxmb().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_g5kivdxmb().b[7][0]++;
    cov_g5kivdxmb().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_g5kivdxmb().b[7][1]++;
  }
  cov_g5kivdxmb().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_g5kivdxmb().s[11]++,
/* istanbul ignore next */
(cov_g5kivdxmb().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_g5kivdxmb().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_g5kivdxmb().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_g5kivdxmb().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_g5kivdxmb().f[3]++;
  cov_g5kivdxmb().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_g5kivdxmb().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_g5kivdxmb().f[4]++;
  cov_g5kivdxmb().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_g5kivdxmb().s[14]++,
/* istanbul ignore next */
(cov_g5kivdxmb().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_g5kivdxmb().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_g5kivdxmb().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_g5kivdxmb().f[5]++;
  cov_g5kivdxmb().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[6]++;
    cov_g5kivdxmb().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_g5kivdxmb().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[17]++, []);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[12][0]++;
          cov_g5kivdxmb().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_g5kivdxmb().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_g5kivdxmb().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_g5kivdxmb().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[8]++;
    cov_g5kivdxmb().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[13][0]++;
      cov_g5kivdxmb().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[26]++, {});
    /* istanbul ignore next */
    cov_g5kivdxmb().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[15][0]++;
      cov_g5kivdxmb().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[16][0]++;
          cov_g5kivdxmb().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[15][1]++;
    }
    cov_g5kivdxmb().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_g5kivdxmb().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_g5kivdxmb().s[36]++;
exports.RealPDFTextEditor = void 0;
const pdf_lib_1 =
/* istanbul ignore next */
(cov_g5kivdxmb().s[37]++, require("pdf-lib"));
const pdfjsLib =
/* istanbul ignore next */
(cov_g5kivdxmb().s[38]++, __importStar(require("pdfjs-dist")));
const utils_1 =
/* istanbul ignore next */
(cov_g5kivdxmb().s[39]++, require("../../common/utils"));
class RealPDFTextEditor {
  /**
   * Advanced PDF text editing with comprehensive error recovery and real text modification
   */
  async replaceTextInPDF(originalPdfBytes, replacements) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[9]++;
    cov_g5kivdxmb().s[40]++;
    console.log('🔄 Performing ADVANCED PDF text replacement...');
    // Validate input
    /* istanbul ignore next */
    cov_g5kivdxmb().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[18][0]++, !originalPdfBytes) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[18][1]++, originalPdfBytes.byteLength === 0)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[17][0]++;
      cov_g5kivdxmb().s[42]++;
      throw new Error('Cannot edit empty or null PDF bytes');
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[17][1]++;
    }
    cov_g5kivdxmb().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[20][0]++, !replacements) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[20][1]++, replacements.length === 0)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[19][0]++;
      cov_g5kivdxmb().s[44]++;
      console.log('⚠️ No text replacements provided, returning original PDF');
      /* istanbul ignore next */
      cov_g5kivdxmb().s[45]++;
      return (0, utils_1.createSafePDFBytes)(originalPdfBytes);
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[19][1]++;
    }
    // Validate PDF before editing
    cov_g5kivdxmb().s[46]++;
    if (!(0, utils_1.validatePDFBytes)(originalPdfBytes)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[21][0]++;
      cov_g5kivdxmb().s[47]++;
      throw new Error('Invalid PDF provided for text editing');
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[21][1]++;
    }
    const maxRetries =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[48]++, 3);
    let lastError =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[49]++, null);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[50]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[51]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[52]++;
      try {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[53]++;
        console.log(`📝 Text editing attempt ${attempt}/${maxRetries}`);
        // Create safe copy to prevent detachment
        const safePdfBytes =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[54]++, (0, utils_1.createSafePDFBytes)(originalPdfBytes));
        // Load PDF with enhanced options
        const pdfDoc =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[55]++, await pdf_lib_1.PDFDocument.load(safePdfBytes, {
          ignoreEncryption: false,
          parseSpeed: 1,
          throwOnInvalidJPEGData: false,
          updateMetadata: true
        }));
        const pages =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[56]++, pdfDoc.getPages());
        /* istanbul ignore next */
        cov_g5kivdxmb().s[57]++;
        console.log(`📄 PDF loaded: ${pages.length} pages`);
        // Validate replacement data
        /* istanbul ignore next */
        cov_g5kivdxmb().s[58]++;
        this.validateReplacements(replacements, pages.length);
        // Group replacements by page for efficient processing
        const replacementsByPage =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[59]++, this.groupReplacementsByPage(replacements));
        // Embed fonts (cache for reuse)
        const fontCache =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[60]++, new Map());
        /* istanbul ignore next */
        cov_g5kivdxmb().s[61]++;
        await this.prepareFonts(pdfDoc, replacements, fontCache);
        // Process each page with replacements
        let totalReplacements =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[62]++, 0);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[63]++;
        for (const [pageIndex, pageReplacements] of replacementsByPage.entries()) {
          const page =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[64]++, pages[pageIndex]);
          /* istanbul ignore next */
          cov_g5kivdxmb().s[65]++;
          if (!page) {
            /* istanbul ignore next */
            cov_g5kivdxmb().b[22][0]++;
            cov_g5kivdxmb().s[66]++;
            console.warn(`⚠️ Page ${pageIndex + 1} not found, skipping replacements`);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[67]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_g5kivdxmb().b[22][1]++;
          }
          cov_g5kivdxmb().s[68]++;
          console.log(`📝 Processing ${pageReplacements.length} replacements on page ${pageIndex + 1}`);
          /* istanbul ignore next */
          cov_g5kivdxmb().s[69]++;
          for (const replacement of pageReplacements) {
            /* istanbul ignore next */
            cov_g5kivdxmb().s[70]++;
            try {
              /* istanbul ignore next */
              cov_g5kivdxmb().s[71]++;
              await this.performTextReplacement(page, replacement, fontCache);
              /* istanbul ignore next */
              cov_g5kivdxmb().s[72]++;
              totalReplacements++;
              /* istanbul ignore next */
              cov_g5kivdxmb().s[73]++;
              console.log(`✅ Replaced "${replacement.oldText}" with "${replacement.newText}"`);
            } catch (replError) {
              /* istanbul ignore next */
              cov_g5kivdxmb().s[74]++;
              console.error(`❌ Failed to replace text on page ${pageIndex + 1}:`, replError.message);
              // Continue with other replacements instead of failing completely
            }
          }
        }
        /* istanbul ignore next */
        cov_g5kivdxmb().s[75]++;
        console.log(`📊 Completed ${totalReplacements} text replacements`);
        // Save with optimal settings
        const modifiedPdfBytes =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[76]++, await pdfDoc.save({
          useObjectStreams: false,
          // Better compatibility
          addDefaultPage: false,
          updateFieldAppearances: true
        }));
        // CRITICAL FIX: Prevent ArrayBuffer detachment issues
        // Create a completely new Uint8Array to avoid detachment
        let safeCopy;
        /* istanbul ignore next */
        cov_g5kivdxmb().s[77]++;
        try {
          /* istanbul ignore next */
          cov_g5kivdxmb().s[78]++;
          // Primary method: Use Uint8Array.from which creates a new buffer
          safeCopy = Uint8Array.from(modifiedPdfBytes);
          /* istanbul ignore next */
          cov_g5kivdxmb().s[79]++;
          console.log(`✅ Created safe copy using Uint8Array.from: ${safeCopy.byteLength} bytes`);
        } catch (e) {
          /* istanbul ignore next */
          cov_g5kivdxmb().s[80]++;
          console.warn('⚠️ Uint8Array.from failed, using fallback method');
          // Fallback: Manual byte-by-byte copy
          const length =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[81]++,
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[23][0]++, modifiedPdfBytes.length) ||
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[23][1]++, modifiedPdfBytes.byteLength));
          const buffer =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[82]++, new ArrayBuffer(length));
          const view =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[83]++, new Uint8Array(buffer));
          /* istanbul ignore next */
          cov_g5kivdxmb().s[84]++;
          for (let i =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[85]++, 0); i < length; i++) {
            /* istanbul ignore next */
            cov_g5kivdxmb().s[86]++;
            view[i] =
            /* istanbul ignore next */
            (cov_g5kivdxmb().b[24][0]++, modifiedPdfBytes[i]) ||
            /* istanbul ignore next */
            (cov_g5kivdxmb().b[24][1]++, 0);
          }
          /* istanbul ignore next */
          cov_g5kivdxmb().s[87]++;
          safeCopy = view;
          /* istanbul ignore next */
          cov_g5kivdxmb().s[88]++;
          console.log(`✅ Created safe copy using manual copy: ${safeCopy.byteLength} bytes`);
        }
        // Validate the result
        /* istanbul ignore next */
        cov_g5kivdxmb().s[89]++;
        if (!(0, utils_1.validatePDFBytes)(safeCopy)) {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[25][0]++;
          cov_g5kivdxmb().s[90]++;
          console.warn('⚠️ PDF validation failed but continuing');
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[25][1]++;
        }
        cov_g5kivdxmb().s[91]++;
        console.log(`✅ PDF text replacement completed successfully: ${safeCopy.byteLength} bytes`);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[92]++;
        return safeCopy;
      } catch (error) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[93]++;
        lastError = error;
        /* istanbul ignore next */
        cov_g5kivdxmb().s[94]++;
        console.error(`❌ Text editing attempt ${attempt} failed:`, lastError.message);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[95]++;
        if (attempt < maxRetries) {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[26][0]++;
          cov_g5kivdxmb().s[96]++;
          console.log(`⏳ Waiting before retry attempt ${attempt + 1}...`);
          /* istanbul ignore next */
          cov_g5kivdxmb().s[97]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_g5kivdxmb().f[10]++;
            cov_g5kivdxmb().s[98]++;
            return setTimeout(resolve, 1000 * attempt);
          });
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[26][1]++;
        }
      }
    }
    const errorMessage =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[99]++, `Failed to edit PDF text after ${maxRetries} attempts: ${
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[27][0]++, lastError?.message) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[27][1]++, 'Unknown error')}`);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[100]++;
    console.error('❌ All text editing attempts failed:', errorMessage);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[101]++;
    throw new Error(errorMessage);
  }
  /**
   * Validate replacement operations before processing
   */
  validateReplacements(replacements, totalPages) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[11]++;
    cov_g5kivdxmb().s[102]++;
    for (const replacement of replacements) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[103]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[29][0]++, !replacement.oldText) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[29][1]++, replacement.oldText.trim() === '')) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[28][0]++;
        cov_g5kivdxmb().s[104]++;
        throw new Error('Empty oldText in replacement operation');
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[28][1]++;
      }
      cov_g5kivdxmb().s[105]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[31][0]++, replacement.newText === undefined) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[31][1]++, replacement.newText === null)) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[30][0]++;
        cov_g5kivdxmb().s[106]++;
        throw new Error('newText cannot be null or undefined');
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[30][1]++;
      }
      cov_g5kivdxmb().s[107]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[33][0]++, replacement.page < 0) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[33][1]++, replacement.page >= totalPages)) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[32][0]++;
        cov_g5kivdxmb().s[108]++;
        throw new Error(`Invalid page index ${replacement.page}. PDF has ${totalPages} pages`);
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[32][1]++;
      }
      cov_g5kivdxmb().s[109]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[35][0]++, replacement.fontSize <= 0) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[35][1]++, replacement.fontSize > 200)) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[34][0]++;
        cov_g5kivdxmb().s[110]++;
        throw new Error(`Invalid font size ${replacement.fontSize}. Must be between 1 and 200`);
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[34][1]++;
      }
    }
  }
  /**
   * Group replacements by page for efficient processing
   */
  groupReplacementsByPage(replacements) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[12]++;
    const replacementsByPage =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[111]++, new Map());
    /* istanbul ignore next */
    cov_g5kivdxmb().s[112]++;
    for (const replacement of replacements) {
      const pageNum =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[113]++, replacement.page);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[114]++;
      if (!replacementsByPage.has(pageNum)) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[36][0]++;
        cov_g5kivdxmb().s[115]++;
        replacementsByPage.set(pageNum, []);
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[36][1]++;
      }
      cov_g5kivdxmb().s[116]++;
      replacementsByPage.get(pageNum).push(replacement);
    }
    /* istanbul ignore next */
    cov_g5kivdxmb().s[117]++;
    return replacementsByPage;
  }
  /**
   * Prepare and cache fonts for all replacements
   */
  async prepareFonts(pdfDoc, replacements, fontCache) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[13]++;
    const uniqueFonts =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[118]++, new Set());
    /* istanbul ignore next */
    cov_g5kivdxmb().s[119]++;
    for (const replacement of replacements) {
      const fontFamily =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[120]++,
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[37][0]++, replacement.fontFamily) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[37][1]++, 'Helvetica'));
      /* istanbul ignore next */
      cov_g5kivdxmb().s[121]++;
      uniqueFonts.add(fontFamily);
    }
    /* istanbul ignore next */
    cov_g5kivdxmb().s[122]++;
    for (const fontFamily of uniqueFonts) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[123]++;
      try {
        let font;
        /* istanbul ignore next */
        cov_g5kivdxmb().s[124]++;
        switch (fontFamily.toLowerCase()) {
          case 'helvetica':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[38][0]++;
          default:
            /* istanbul ignore next */
            cov_g5kivdxmb().b[38][1]++;
            cov_g5kivdxmb().s[125]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[126]++;
            break;
          case 'helvetica-bold':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[38][2]++;
            cov_g5kivdxmb().s[127]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.HelveticaBold);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[128]++;
            break;
          case 'times-roman':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[38][3]++;
            cov_g5kivdxmb().s[129]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.TimesRoman);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[130]++;
            break;
          case 'courier':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[38][4]++;
            cov_g5kivdxmb().s[131]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Courier);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[132]++;
            break;
        }
        /* istanbul ignore next */
        cov_g5kivdxmb().s[133]++;
        fontCache.set(fontFamily, font);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[134]++;
        console.log(`📝 Font cached: ${fontFamily}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[135]++;
        console.warn(`⚠️ Failed to embed font ${fontFamily}, using Helvetica fallback`);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[136]++;
        fontCache.set(fontFamily, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
      }
    }
  }
  /**
   * Perform individual text replacement with advanced covering technique
   */
  async performTextReplacement(page, replacement, fontCache) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[14]++;
    const fontFamily =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[137]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[39][0]++, replacement.fontFamily) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[39][1]++, 'Helvetica'));
    const font =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[138]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[40][0]++, fontCache.get(fontFamily)) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[40][1]++, fontCache.get('Helvetica')));
    const color =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[139]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[41][0]++, replacement.color) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[41][1]++, {
      r: 0,
      g: 0,
      b: 0
    }));
    // Calculate dimensions for accurate covering
    const originalWidth =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[140]++, font.widthOfTextAtSize(replacement.oldText, replacement.fontSize));
    const newWidth =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[141]++, font.widthOfTextAtSize(replacement.newText, replacement.fontSize));
    const textHeight =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[142]++, replacement.fontSize * 1.2); // Include line height
    // Enhanced covering: use slightly larger rectangle with better positioning
    const coverX =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[143]++, replacement.x - 1);
    const coverY =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[144]++, replacement.y - textHeight * 0.25);
    const coverWidth =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[145]++, Math.max(originalWidth, newWidth) + 2);
    const coverHeight =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[146]++, textHeight);
    // Cover the original text with background-matched rectangle
    /* istanbul ignore next */
    cov_g5kivdxmb().s[147]++;
    page.drawRectangle({
      x: coverX,
      y: coverY,
      width: coverWidth,
      height: coverHeight,
      color: (0, pdf_lib_1.rgb)(1, 1, 1),
      // White - could be improved to match background
      opacity: 1,
      borderWidth: 0
    });
    // Draw the new text with precise positioning
    /* istanbul ignore next */
    cov_g5kivdxmb().s[148]++;
    page.drawText(replacement.newText, {
      x: replacement.x,
      y: replacement.y,
      size: replacement.fontSize,
      font,
      color: (0, pdf_lib_1.rgb)(color.r, color.g, color.b)
    });
  }
  /**
   * Enhanced text addition with comprehensive error handling and font support
   */
  async addTextToPDF(originalPdfBytes, textAdditions) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[15]++;
    cov_g5kivdxmb().s[149]++;
    console.log('➕ Adding new text to PDF with enhanced features...');
    // Validate input
    /* istanbul ignore next */
    cov_g5kivdxmb().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[43][0]++, !originalPdfBytes) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[43][1]++, originalPdfBytes.byteLength === 0)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[42][0]++;
      cov_g5kivdxmb().s[151]++;
      throw new Error('Cannot add text to empty or null PDF');
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[42][1]++;
    }
    cov_g5kivdxmb().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[45][0]++, !textAdditions) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[45][1]++, textAdditions.length === 0)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[44][0]++;
      cov_g5kivdxmb().s[153]++;
      console.log('⚠️ No text additions provided, returning original PDF');
      /* istanbul ignore next */
      cov_g5kivdxmb().s[154]++;
      return (0, utils_1.createSafePDFBytes)(originalPdfBytes);
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[44][1]++;
    }
    cov_g5kivdxmb().s[155]++;
    if (!(0, utils_1.validatePDFBytes)(originalPdfBytes)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[46][0]++;
      cov_g5kivdxmb().s[156]++;
      throw new Error('Invalid PDF provided for text addition');
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[46][1]++;
    }
    const maxRetries =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[157]++, 3);
    let lastError =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[158]++, null);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[159]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[160]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[161]++;
      try {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[162]++;
        console.log(`➕ Text addition attempt ${attempt}/${maxRetries}`);
        // Create safe copy
        const safePdfBytes =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[163]++, (0, utils_1.createSafePDFBytes)(originalPdfBytes));
        // Load PDF
        const pdfDoc =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[164]++, await pdf_lib_1.PDFDocument.load(safePdfBytes, {
          ignoreEncryption: false,
          parseSpeed: 1,
          throwOnInvalidJPEGData: false,
          updateMetadata: true
        }));
        const pages =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[165]++, pdfDoc.getPages());
        /* istanbul ignore next */
        cov_g5kivdxmb().s[166]++;
        console.log(`📄 PDF loaded for text addition: ${pages.length} pages`);
        // Validate additions
        /* istanbul ignore next */
        cov_g5kivdxmb().s[167]++;
        this.validateTextAdditions(textAdditions, pages.length);
        // Prepare fonts
        const fontCache =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[168]++, new Map());
        /* istanbul ignore next */
        cov_g5kivdxmb().s[169]++;
        await this.prepareFontsForAdditions(pdfDoc, textAdditions, fontCache);
        // Add text to each page
        let totalAdditions =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[170]++, 0);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[171]++;
        for (const addition of textAdditions) {
          /* istanbul ignore next */
          cov_g5kivdxmb().s[172]++;
          try {
            const page =
            /* istanbul ignore next */
            (cov_g5kivdxmb().s[173]++, pages[addition.page]);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[174]++;
            if (!page) {
              /* istanbul ignore next */
              cov_g5kivdxmb().b[47][0]++;
              cov_g5kivdxmb().s[175]++;
              console.warn(`⚠️ Page ${addition.page + 1} not found, skipping text addition`);
              /* istanbul ignore next */
              cov_g5kivdxmb().s[176]++;
              continue;
            } else
            /* istanbul ignore next */
            {
              cov_g5kivdxmb().b[47][1]++;
            }
            cov_g5kivdxmb().s[177]++;
            await this.performTextAddition(page, addition, fontCache);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[178]++;
            totalAdditions++;
            /* istanbul ignore next */
            cov_g5kivdxmb().s[179]++;
            console.log(`✅ Added text "${addition.text}" to page ${addition.page + 1}`);
          } catch (addError) {
            /* istanbul ignore next */
            cov_g5kivdxmb().s[180]++;
            console.error(`❌ Failed to add text to page ${addition.page + 1}:`, addError.message);
            // Continue with other additions
          }
        }
        /* istanbul ignore next */
        cov_g5kivdxmb().s[181]++;
        console.log(`📊 Completed ${totalAdditions} text additions`);
        // Save with optimal settings
        const modifiedPdfBytes =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[182]++, await pdfDoc.save({
          useObjectStreams: false,
          addDefaultPage: false,
          updateFieldAppearances: true
        }));
        // CRITICAL FIX: Prevent ArrayBuffer detachment issues
        // Create a completely new Uint8Array to avoid detachment
        let safeCopy;
        /* istanbul ignore next */
        cov_g5kivdxmb().s[183]++;
        try {
          /* istanbul ignore next */
          cov_g5kivdxmb().s[184]++;
          // Primary method: Use Uint8Array.from which creates a new buffer
          safeCopy = Uint8Array.from(modifiedPdfBytes);
          /* istanbul ignore next */
          cov_g5kivdxmb().s[185]++;
          console.log(`✅ Created safe copy using Uint8Array.from: ${safeCopy.byteLength} bytes`);
        } catch (e) {
          /* istanbul ignore next */
          cov_g5kivdxmb().s[186]++;
          console.warn('⚠️ Uint8Array.from failed, using fallback method');
          // Fallback: Manual byte-by-byte copy
          const length =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[187]++,
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[48][0]++, modifiedPdfBytes.length) ||
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[48][1]++, modifiedPdfBytes.byteLength));
          const buffer =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[188]++, new ArrayBuffer(length));
          const view =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[189]++, new Uint8Array(buffer));
          /* istanbul ignore next */
          cov_g5kivdxmb().s[190]++;
          for (let i =
          /* istanbul ignore next */
          (cov_g5kivdxmb().s[191]++, 0); i < length; i++) {
            /* istanbul ignore next */
            cov_g5kivdxmb().s[192]++;
            view[i] =
            /* istanbul ignore next */
            (cov_g5kivdxmb().b[49][0]++, modifiedPdfBytes[i]) ||
            /* istanbul ignore next */
            (cov_g5kivdxmb().b[49][1]++, 0);
          }
          /* istanbul ignore next */
          cov_g5kivdxmb().s[193]++;
          safeCopy = view;
          /* istanbul ignore next */
          cov_g5kivdxmb().s[194]++;
          console.log(`✅ Created safe copy using manual copy: ${safeCopy.byteLength} bytes`);
        }
        // Validate result
        /* istanbul ignore next */
        cov_g5kivdxmb().s[195]++;
        if (!(0, utils_1.validatePDFBytes)(safeCopy)) {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[50][0]++;
          cov_g5kivdxmb().s[196]++;
          console.warn('⚠️ PDF validation failed but continuing');
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[50][1]++;
        }
        cov_g5kivdxmb().s[197]++;
        console.log(`✅ Text addition completed successfully: ${safeCopy.byteLength} bytes`);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[198]++;
        return safeCopy;
      } catch (error) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[199]++;
        lastError = error;
        /* istanbul ignore next */
        cov_g5kivdxmb().s[200]++;
        console.error(`❌ Text addition attempt ${attempt} failed:`, lastError.message);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[201]++;
        if (attempt < maxRetries) {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[51][0]++;
          cov_g5kivdxmb().s[202]++;
          console.log(`⏳ Waiting before retry attempt ${attempt + 1}...`);
          /* istanbul ignore next */
          cov_g5kivdxmb().s[203]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_g5kivdxmb().f[16]++;
            cov_g5kivdxmb().s[204]++;
            return setTimeout(resolve, 500 * attempt);
          });
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[51][1]++;
        }
      }
    }
    const errorMessage =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[205]++, `Failed to add text to PDF after ${maxRetries} attempts: ${
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[52][0]++, lastError?.message) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[52][1]++, 'Unknown error')}`);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[206]++;
    console.error('❌ All text addition attempts failed:', errorMessage);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[207]++;
    throw new Error(errorMessage);
  }
  /**
   * Batch text editing operations (replace, add, delete)
   */
  async performBatchTextOperations(originalPdfBytes, operations) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[17]++;
    cov_g5kivdxmb().s[208]++;
    console.log('🔄 Performing batch text operations...');
    /* istanbul ignore next */
    cov_g5kivdxmb().s[209]++;
    if (
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[54][0]++, !operations) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[54][1]++, operations.length === 0)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[53][0]++;
      cov_g5kivdxmb().s[210]++;
      return (0, utils_1.createSafePDFBytes)(originalPdfBytes);
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[53][1]++;
    }
    // Group operations by type for optimal processing
    const replacements =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[211]++, []);
    const additions =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[212]++, []);
    const deletions =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[213]++, []);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[214]++;
    for (const operation of operations) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[215]++;
      switch (operation.type) {
        case 'replace':
          /* istanbul ignore next */
          cov_g5kivdxmb().b[55][0]++;
          cov_g5kivdxmb().s[216]++;
          if (operation.newText) {
            /* istanbul ignore next */
            cov_g5kivdxmb().b[56][0]++;
            cov_g5kivdxmb().s[217]++;
            replacements.push({
              oldText: operation.text,
              newText: operation.newText,
              page: operation.page,
              x: operation.x,
              y: operation.y,
              fontSize: operation.fontSize,
              fontFamily: operation.fontFamily,
              color: operation.color
            });
          } else
          /* istanbul ignore next */
          {
            cov_g5kivdxmb().b[56][1]++;
          }
          cov_g5kivdxmb().s[218]++;
          break;
        case 'add':
          /* istanbul ignore next */
          cov_g5kivdxmb().b[55][1]++;
          cov_g5kivdxmb().s[219]++;
          additions.push({
            text: operation.text,
            page: operation.page,
            x: operation.x,
            y: operation.y,
            fontSize: operation.fontSize,
            fontFamily: operation.fontFamily,
            color: operation.color
          });
          /* istanbul ignore next */
          cov_g5kivdxmb().s[220]++;
          break;
        case 'delete':
          /* istanbul ignore next */
          cov_g5kivdxmb().b[55][2]++;
          cov_g5kivdxmb().s[221]++;
          deletions.push({
            text: operation.text,
            page: operation.page,
            x: operation.x,
            y: operation.y,
            width: operation.width,
            height: operation.height
          });
          /* istanbul ignore next */
          cov_g5kivdxmb().s[222]++;
          break;
      }
    }
    let currentPdfBytes =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[223]++, originalPdfBytes);
    // Process operations in optimal order: deletions, replacements, additions
    /* istanbul ignore next */
    cov_g5kivdxmb().s[224]++;
    if (deletions.length > 0) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[57][0]++;
      cov_g5kivdxmb().s[225]++;
      console.log(`🗑️ Processing ${deletions.length} deletion operations`);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[226]++;
      currentPdfBytes = await this.deleteTextFromPDF(currentPdfBytes, deletions);
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[57][1]++;
    }
    cov_g5kivdxmb().s[227]++;
    if (replacements.length > 0) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[58][0]++;
      cov_g5kivdxmb().s[228]++;
      console.log(`🔄 Processing ${replacements.length} replacement operations`);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[229]++;
      currentPdfBytes = await this.replaceTextInPDF(currentPdfBytes, replacements);
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[58][1]++;
    }
    cov_g5kivdxmb().s[230]++;
    if (additions.length > 0) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[59][0]++;
      cov_g5kivdxmb().s[231]++;
      console.log(`➕ Processing ${additions.length} addition operations`);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[232]++;
      currentPdfBytes = await this.addTextToPDF(currentPdfBytes, additions);
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[59][1]++;
    }
    cov_g5kivdxmb().s[233]++;
    console.log('✅ Batch text operations completed');
    /* istanbul ignore next */
    cov_g5kivdxmb().s[234]++;
    return currentPdfBytes;
  }
  /**
   * Delete text from PDF by covering with background color
   */
  async deleteTextFromPDF(originalPdfBytes, deletions) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[18]++;
    cov_g5kivdxmb().s[235]++;
    console.log('🗑️ Deleting text from PDF...');
    /* istanbul ignore next */
    cov_g5kivdxmb().s[236]++;
    if (
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[61][0]++, !deletions) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[61][1]++, deletions.length === 0)) {
      /* istanbul ignore next */
      cov_g5kivdxmb().b[60][0]++;
      cov_g5kivdxmb().s[237]++;
      return (0, utils_1.createSafePDFBytes)(originalPdfBytes);
    } else
    /* istanbul ignore next */
    {
      cov_g5kivdxmb().b[60][1]++;
    }
    cov_g5kivdxmb().s[238]++;
    try {
      const safePdfBytes =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[239]++, (0, utils_1.createSafePDFBytes)(originalPdfBytes));
      const pdfDoc =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[240]++, await pdf_lib_1.PDFDocument.load(safePdfBytes));
      const pages =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[241]++, pdfDoc.getPages());
      /* istanbul ignore next */
      cov_g5kivdxmb().s[242]++;
      for (const deletion of deletions) {
        const page =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[243]++, pages[deletion.page]);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[244]++;
        if (!page) {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[62][0]++;
          cov_g5kivdxmb().s[245]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[62][1]++;
        }
        // Use provided dimensions or estimate from text
        const width =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[246]++,
        /* istanbul ignore next */
        (cov_g5kivdxmb().b[63][0]++, deletion.width) ||
        /* istanbul ignore next */
        (cov_g5kivdxmb().b[63][1]++, 100)); // Default width
        const height =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[247]++,
        /* istanbul ignore next */
        (cov_g5kivdxmb().b[64][0]++, deletion.height) ||
        /* istanbul ignore next */
        (cov_g5kivdxmb().b[64][1]++, 20)); // Default height
        // Cover with white rectangle
        /* istanbul ignore next */
        cov_g5kivdxmb().s[248]++;
        page.drawRectangle({
          x: deletion.x,
          y: deletion.y,
          width,
          height,
          color: (0, pdf_lib_1.rgb)(1, 1, 1),
          // White
          opacity: 1
        });
        /* istanbul ignore next */
        cov_g5kivdxmb().s[249]++;
        console.log(`🗑️ Deleted text area at (${deletion.x}, ${deletion.y}) on page ${deletion.page + 1}`);
      }
      const modifiedPdfBytes =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[250]++, await pdfDoc.save());
      // CRITICAL FIX: Ensure proper Uint8Array construction
      const safeCopy =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[251]++, Uint8Array.from(modifiedPdfBytes));
      /* istanbul ignore next */
      cov_g5kivdxmb().s[252]++;
      return safeCopy;
    } catch (error) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[253]++;
      console.error('❌ Error deleting text from PDF:', error.message);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[254]++;
      throw new Error(`Failed to delete text: ${error.message}`);
    }
  }
  // Helper methods for validation and font management
  validateTextAdditions(additions, totalPages) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[19]++;
    cov_g5kivdxmb().s[255]++;
    for (const addition of additions) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[256]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[66][0]++, !addition.text) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[66][1]++, addition.text.trim() === '')) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[65][0]++;
        cov_g5kivdxmb().s[257]++;
        throw new Error('Empty text in addition operation');
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[65][1]++;
      }
      cov_g5kivdxmb().s[258]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[68][0]++, addition.page < 0) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[68][1]++, addition.page >= totalPages)) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[67][0]++;
        cov_g5kivdxmb().s[259]++;
        throw new Error(`Invalid page index ${addition.page}. PDF has ${totalPages} pages`);
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[67][1]++;
      }
      cov_g5kivdxmb().s[260]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[70][0]++, addition.fontSize <= 0) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[70][1]++, addition.fontSize > 200)) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[69][0]++;
        cov_g5kivdxmb().s[261]++;
        throw new Error(`Invalid font size ${addition.fontSize}. Must be between 1 and 200`);
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[69][1]++;
      }
    }
  }
  async prepareFontsForAdditions(pdfDoc, additions, fontCache) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[20]++;
    const uniqueFonts =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[262]++, new Set());
    /* istanbul ignore next */
    cov_g5kivdxmb().s[263]++;
    for (const addition of additions) {
      const fontFamily =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[264]++,
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[71][0]++, addition.fontFamily) ||
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[71][1]++, 'Helvetica'));
      /* istanbul ignore next */
      cov_g5kivdxmb().s[265]++;
      uniqueFonts.add(fontFamily);
    }
    /* istanbul ignore next */
    cov_g5kivdxmb().s[266]++;
    for (const fontFamily of uniqueFonts) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[267]++;
      try {
        let font;
        /* istanbul ignore next */
        cov_g5kivdxmb().s[268]++;
        switch (fontFamily.toLowerCase()) {
          case 'helvetica':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[72][0]++;
          default:
            /* istanbul ignore next */
            cov_g5kivdxmb().b[72][1]++;
            cov_g5kivdxmb().s[269]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[270]++;
            break;
          case 'helvetica-bold':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[72][2]++;
            cov_g5kivdxmb().s[271]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.HelveticaBold);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[272]++;
            break;
          case 'times-roman':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[72][3]++;
            cov_g5kivdxmb().s[273]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.TimesRoman);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[274]++;
            break;
          case 'courier':
            /* istanbul ignore next */
            cov_g5kivdxmb().b[72][4]++;
            cov_g5kivdxmb().s[275]++;
            font = await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Courier);
            /* istanbul ignore next */
            cov_g5kivdxmb().s[276]++;
            break;
        }
        /* istanbul ignore next */
        cov_g5kivdxmb().s[277]++;
        fontCache.set(fontFamily, font);
      } catch (error) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[278]++;
        console.warn(`⚠️ Failed to embed font ${fontFamily}, using Helvetica fallback`);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[279]++;
        fontCache.set(fontFamily, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
      }
    }
  }
  async performTextAddition(page, addition, fontCache) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[21]++;
    const fontFamily =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[280]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[73][0]++, addition.fontFamily) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[73][1]++, 'Helvetica'));
    const font =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[281]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[74][0]++, fontCache.get(fontFamily)) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[74][1]++, fontCache.get('Helvetica')));
    const color =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[282]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[75][0]++, addition.color) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[75][1]++, {
      r: 0,
      g: 0,
      b: 0
    }));
    const rotation =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[283]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[76][0]++, addition.rotation) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[76][1]++, 0));
    const opacity =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[284]++,
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[77][0]++, addition.opacity) ||
    /* istanbul ignore next */
    (cov_g5kivdxmb().b[77][1]++, 1));
    /* istanbul ignore next */
    cov_g5kivdxmb().s[285]++;
    page.drawText(addition.text, {
      x: addition.x,
      y: addition.y,
      size: addition.fontSize,
      font,
      color: (0, pdf_lib_1.rgb)(color.r, color.g, color.b),
      rotate: degrees(rotation),
      opacity
    });
  }
  /**
   * Extract existing text from PDF for editing with Emergency Recovery
   * Returns text with position information
   */
  async extractEditableTextFromPDF(pdfBytes) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[22]++;
    cov_g5kivdxmb().s[286]++;
    console.log('🔍 Extracting editable text from PDF...');
    const strategies =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[287]++, [
    // Strategy 1: Full extraction with optimizations
    async () => {
      /* istanbul ignore next */
      cov_g5kivdxmb().f[23]++;
      const loadingTask =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[288]++, pdfjsLib.getDocument({
        data: pdfBytes,
        useWorkerFetch: false,
        isEvalSupported: false,
        useSystemFonts: true,
        disableFontFace: false
      }));
      const pdf =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[289]++, await loadingTask.promise);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[290]++;
      return this.extractWithFullFeatures(pdf);
    },
    // Strategy 2: Simplified extraction
    async () => {
      /* istanbul ignore next */
      cov_g5kivdxmb().f[24]++;
      const loadingTask =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[291]++, pdfjsLib.getDocument({
        data: pdfBytes,
        useWorkerFetch: false,
        isEvalSupported: false,
        disableFontFace: true
      }));
      const pdf =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[292]++, await loadingTask.promise);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[293]++;
      return this.extractWithBasicFeatures(pdf);
    },
    // Strategy 3: Emergency extraction (minimal)
    async () => {
      /* istanbul ignore next */
      cov_g5kivdxmb().f[25]++;
      const loadingTask =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[294]++, pdfjsLib.getDocument(pdfBytes));
      const pdf =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[295]++, await loadingTask.promise);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[296]++;
      return this.extractEmergencyMode(pdf);
    }]);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[297]++;
    for (const [index, strategy] of strategies.entries()) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[298]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[299]++, await strategy());
        /* istanbul ignore next */
        cov_g5kivdxmb().s[300]++;
        console.log(`✅ Text extraction successful with strategy ${index + 1}`);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[301]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[302]++;
        console.warn(`⚠️ Text extraction strategy ${index + 1} failed:`, error.message);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[303]++;
        if (index === strategies.length - 1) {
          /* istanbul ignore next */
          cov_g5kivdxmb().b[78][0]++;
          cov_g5kivdxmb().s[304]++;
          console.error('❌ All text extraction strategies failed');
          /* istanbul ignore next */
          cov_g5kivdxmb().s[305]++;
          return [];
        } else
        /* istanbul ignore next */
        {
          cov_g5kivdxmb().b[78][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_g5kivdxmb().s[306]++;
    return [];
  }
  async extractWithFullFeatures(pdf) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[26]++;
    const extractedText =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[307]++, []);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[308]++;
    for (let pageNum =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[309]++, 1); pageNum <= pdf.numPages; pageNum++) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[310]++;
      try {
        const page =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[311]++, await pdf.getPage(pageNum));
        const textContent =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[312]++, await page.getTextContent({
          normalizeWhitespace: false,
          disableCombineTextItems: false
        }));
        /* istanbul ignore next */
        cov_g5kivdxmb().s[313]++;
        for (const item of textContent.items) {
          /* istanbul ignore next */
          cov_g5kivdxmb().s[314]++;
          if (
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[80][0]++, 'str' in item) &&
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[80][1]++, item.str.trim())) {
            /* istanbul ignore next */
            cov_g5kivdxmb().b[79][0]++;
            cov_g5kivdxmb().s[315]++;
            extractedText.push({
              text: item.str,
              page: pageNum - 1,
              x: item.transform[4],
              y: item.transform[5],
              fontSize:
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[81][0]++, Math.abs(item.transform[0])) ||
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[81][1]++, 12),
              width:
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[82][0]++, item.width) ||
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[82][1]++, 0),
              height:
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[83][0]++, Math.abs(item.transform[3])) ||
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[83][1]++, 12)
            });
          } else
          /* istanbul ignore next */
          {
            cov_g5kivdxmb().b[79][1]++;
          }
        }
      } catch (pageError) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[316]++;
        console.warn(`⚠️ Error processing page ${pageNum}:`, pageError);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[317]++;
        continue;
      }
    }
    /* istanbul ignore next */
    cov_g5kivdxmb().s[318]++;
    return extractedText;
  }
  async extractWithBasicFeatures(pdf) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[27]++;
    const extractedText =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[319]++, []);
    /* istanbul ignore next */
    cov_g5kivdxmb().s[320]++;
    for (let pageNum =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[321]++, 1); pageNum <= pdf.numPages; pageNum++) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[322]++;
      try {
        const page =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[323]++, await pdf.getPage(pageNum));
        const textContent =
        /* istanbul ignore next */
        (cov_g5kivdxmb().s[324]++, await page.getTextContent());
        /* istanbul ignore next */
        cov_g5kivdxmb().s[325]++;
        for (const item of textContent.items) {
          /* istanbul ignore next */
          cov_g5kivdxmb().s[326]++;
          if (
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[85][0]++, 'str' in item) &&
          /* istanbul ignore next */
          (cov_g5kivdxmb().b[85][1]++, item.str.trim())) {
            /* istanbul ignore next */
            cov_g5kivdxmb().b[84][0]++;
            cov_g5kivdxmb().s[327]++;
            extractedText.push({
              text: item.str,
              page: pageNum - 1,
              x:
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[86][0]++, item.transform?.[4]) ||
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[86][1]++, 0),
              y:
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[87][0]++, item.transform?.[5]) ||
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[87][1]++, 0),
              fontSize: 12,
              // Default size
              width:
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[88][0]++, item.width) ||
              /* istanbul ignore next */
              (cov_g5kivdxmb().b[88][1]++, 0),
              height: 12
            });
          } else
          /* istanbul ignore next */
          {
            cov_g5kivdxmb().b[84][1]++;
          }
        }
      } catch (pageError) {
        /* istanbul ignore next */
        cov_g5kivdxmb().s[328]++;
        console.warn(`⚠️ Error processing page ${pageNum} (basic mode):`, pageError);
        /* istanbul ignore next */
        cov_g5kivdxmb().s[329]++;
        continue;
      }
    }
    /* istanbul ignore next */
    cov_g5kivdxmb().s[330]++;
    return extractedText;
  }
  async extractEmergencyMode(pdf) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[28]++;
    cov_g5kivdxmb().s[331]++;
    console.warn('🚨 Using emergency text extraction mode');
    /* istanbul ignore next */
    cov_g5kivdxmb().s[332]++;
    try {
      // Just try to get basic text from first page
      const page =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[333]++, await pdf.getPage(1));
      const textContent =
      /* istanbul ignore next */
      (cov_g5kivdxmb().s[334]++, await page.getTextContent());
      /* istanbul ignore next */
      cov_g5kivdxmb().s[335]++;
      return textContent.items.filter(item => {
        /* istanbul ignore next */
        cov_g5kivdxmb().f[29]++;
        cov_g5kivdxmb().s[336]++;
        return /* istanbul ignore next */(cov_g5kivdxmb().b[89][0]++, 'str' in item) &&
        /* istanbul ignore next */
        (cov_g5kivdxmb().b[89][1]++, item.str.trim());
      }).map((item, index) => {
        /* istanbul ignore next */
        cov_g5kivdxmb().f[30]++;
        cov_g5kivdxmb().s[337]++;
        return {
          text: item.str,
          page: 0,
          x: index * 100,
          // Basic positioning
          y: 100,
          fontSize: 12,
          width: 100,
          height: 12
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[338]++;
      console.error('🚨 Emergency extraction also failed:', error);
      /* istanbul ignore next */
      cov_g5kivdxmb().s[339]++;
      return [];
    }
  }
  /**
   * Find text at specific coordinates for click-to-edit
   */
  findTextAtCoordinates(extractedText, pageIndex, clickX, clickY, tolerance =
  /* istanbul ignore next */
  (cov_g5kivdxmb().b[90][0]++, 10)) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[31]++;
    cov_g5kivdxmb().s[340]++;
    for (const textItem of extractedText) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[341]++;
      if (textItem.page !== pageIndex) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[91][0]++;
        cov_g5kivdxmb().s[342]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[91][1]++;
      }
      // Check if click is within text bounds
      cov_g5kivdxmb().s[343]++;
      if (
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[93][0]++, clickX >= textItem.x - tolerance) &&
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[93][1]++, clickX <= textItem.x + textItem.width + tolerance) &&
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[93][2]++, clickY >= textItem.y - tolerance) &&
      /* istanbul ignore next */
      (cov_g5kivdxmb().b[93][3]++, clickY <= textItem.y + textItem.height + tolerance)) {
        /* istanbul ignore next */
        cov_g5kivdxmb().b[92][0]++;
        cov_g5kivdxmb().s[344]++;
        return {
          text: textItem.text,
          page: textItem.page,
          x: textItem.x,
          y: textItem.y,
          fontSize: textItem.fontSize
        };
      } else
      /* istanbul ignore next */
      {
        cov_g5kivdxmb().b[92][1]++;
      }
    }
    /* istanbul ignore next */
    cov_g5kivdxmb().s[345]++;
    return null;
  }
  /**
   * Create a completely new PDF from scratch with text
   * Useful for testing
   */
  async createPDFWithText(textItems) {
    /* istanbul ignore next */
    cov_g5kivdxmb().f[32]++;
    cov_g5kivdxmb().s[346]++;
    console.log('📄 Creating new PDF with text...');
    const pdfDoc =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[347]++, await pdf_lib_1.PDFDocument.create());
    const page =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[348]++, pdfDoc.addPage([595, 842])); // A4 size
    const font =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[349]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    /* istanbul ignore next */
    cov_g5kivdxmb().s[350]++;
    for (const item of textItems) {
      /* istanbul ignore next */
      cov_g5kivdxmb().s[351]++;
      page.drawText(item.text, {
        x: item.x,
        y: item.y,
        size: item.fontSize,
        font,
        color: (0, pdf_lib_1.rgb)(0, 0, 0)
      });
    }
    const pdfBytes =
    /* istanbul ignore next */
    (cov_g5kivdxmb().s[352]++, await pdfDoc.save());
    /* istanbul ignore next */
    cov_g5kivdxmb().s[353]++;
    console.log('✅ New PDF created');
    /* istanbul ignore next */
    cov_g5kivdxmb().s[354]++;
    return pdfBytes;
  }
}
/* istanbul ignore next */
cov_g5kivdxmb().s[355]++;
exports.RealPDFTextEditor = RealPDFTextEditor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,