29e1303b9bb501bffd9b341f5170f8b7
"use strict";

/**
 * Array Utility Functions
 * Consolidated array manipulation utilities used throughout the application
 */
/* istanbul ignore next */
function cov_27qrqctqij() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\common\\utils\\arrayUtils.ts";
  var hash = "4c171b1b1641932db2c158e9913efb80764c2b2e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\common\\utils\\arrayUtils.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 36
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "5": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "6": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "7": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "8": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "9": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "10": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "12": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "13": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 36
        }
      },
      "19": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 67
        }
      },
      "20": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "22": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "23": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 45,
          column: 39
        }
      },
      "24": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 25
        }
      },
      "25": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "26": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 54,
          column: 20
        }
      },
      "27": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 20
        }
      },
      "28": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "29": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "30": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "31": {
        start: {
          line: 57,
          column: 17
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "32": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "33": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "34": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 16
        }
      },
      "35": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "36": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 22
        }
      },
      "37": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "38": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 75,
          column: 72
        }
      },
      "39": {
        start: {
          line: 75,
          column: 52
        },
        end: {
          line: 75,
          column: 68
        }
      },
      "40": {
        start: {
          line: 76,
          column: 19
        },
        end: {
          line: 76,
          column: 46
        }
      },
      "41": {
        start: {
          line: 77,
          column: 17
        },
        end: {
          line: 77,
          column: 18
        }
      },
      "42": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "43": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 34
        }
      },
      "44": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "45": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 18
        }
      },
      "46": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "47": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 55
        }
      },
      "48": {
        start: {
          line: 91,
          column: 19
        },
        end: {
          line: 91,
          column: 21
        }
      },
      "49": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "50": {
        start: {
          line: 92,
          column: 17
        },
        end: {
          line: 92,
          column: 18
        }
      },
      "51": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 51
        }
      },
      "52": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 18
        }
      },
      "53": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "54": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "55": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "56": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "57": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "58": {
        start: {
          line: 105,
          column: 17
        },
        end: {
          line: 105,
          column: 18
        }
      },
      "59": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 106,
          column: 24
        }
      },
      "60": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "61": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 107,
          column: 22
        }
      },
      "62": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "63": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 30
        }
      },
      "64": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 22
        }
      },
      "65": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 114,
          column: 21
        }
      },
      "66": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 21
        }
      },
      "67": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "68": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 124,
          column: 18
        }
      },
      "69": {
        start: {
          line: 123,
          column: 21
        },
        end: {
          line: 123,
          column: 55
        }
      },
      "70": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "71": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 53
        }
      },
      "72": {
        start: {
          line: 133,
          column: 18
        },
        end: {
          line: 133,
          column: 48
        }
      },
      "73": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "74": {
        start: {
          line: 134,
          column: 17
        },
        end: {
          line: 134,
          column: 18
        }
      },
      "75": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 54
        }
      },
      "76": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 17
        }
      },
      "77": {
        start: {
          line: 143,
          column: 19
        },
        end: {
          line: 143,
          column: 69
        }
      },
      "78": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 24
        }
      },
      "79": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "80": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "81": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 27
        }
      },
      "82": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "toUint8Array",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 21
          }
        },
        loc: {
          start: {
            line: 20,
            column: 28
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "toArrayBuffer",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 22
          }
        },
        loc: {
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 38
      },
      "2": {
        name: "arraysEqual",
        decl: {
          start: {
            line: 52,
            column: 9
          },
          end: {
            line: 52,
            column: 20
          }
        },
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 52
      },
      "3": {
        name: "cloneUint8Array",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 24
          }
        },
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 66
      },
      "4": {
        name: "concatUint8Arrays",
        decl: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 26
          }
        },
        loc: {
          start: {
            line: 74,
            column: 38
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 39
          }
        },
        loc: {
          start: {
            line: 75,
            column: 52
          },
          end: {
            line: 75,
            column: 68
          }
        },
        line: 75
      },
      "6": {
        name: "chunkUint8Array",
        decl: {
          start: {
            line: 87,
            column: 9
          },
          end: {
            line: 87,
            column: 24
          }
        },
        loc: {
          start: {
            line: 87,
            column: 43
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 87
      },
      "7": {
        name: "findBytePattern",
        decl: {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 100,
            column: 24
          }
        },
        loc: {
          start: {
            line: 100,
            column: 43
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 100
      },
      "8": {
        name: "uint8ArrayToHex",
        decl: {
          start: {
            line: 121,
            column: 9
          },
          end: {
            line: 121,
            column: 24
          }
        },
        loc: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 121
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 123,
            column: 14
          }
        },
        loc: {
          start: {
            line: 123,
            column: 21
          },
          end: {
            line: 123,
            column: 55
          }
        },
        line: 123
      },
      "10": {
        name: "hexToUint8Array",
        decl: {
          start: {
            line: 129,
            column: 9
          },
          end: {
            line: 129,
            column: 24
          }
        },
        loc: {
          start: {
            line: 129,
            column: 30
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 129
      },
      "11": {
        name: "isBinaryData",
        decl: {
          start: {
            line: 142,
            column: 9
          },
          end: {
            line: 142,
            column: 21
          }
        },
        loc: {
          start: {
            line: 142,
            column: 48
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 142
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 39
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 35
          }
        }, {
          start: {
            line: 40,
            column: 39
          },
          end: {
            line: 40,
            column: 93
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 54,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 56,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "12": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 104,
            column: 18
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 104,
            column: 18
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "13": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "14": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 114,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "15": {
        loc: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "16": {
        loc: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 142,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 142,
            column: 42
          },
          end: {
            line: 142,
            column: 46
          }
        }],
        line: 142
      },
      "17": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "18": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 22
          }
        }, {
          start: {
            line: 147,
            column: 27
          },
          end: {
            line: 147,
            column: 36
          }
        }, {
          start: {
            line: 147,
            column: 40
          },
          end: {
            line: 147,
            column: 50
          }
        }, {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 147,
            column: 65
          }
        }, {
          start: {
            line: 147,
            column: 69
          },
          end: {
            line: 147,
            column: 80
          }
        }, {
          start: {
            line: 147,
            column: 85
          },
          end: {
            line: 147,
            column: 95
          }
        }],
        line: 147
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\common\\utils\\arrayUtils.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\common\\utils\\arrayUtils.ts"],
      sourcesContent: ["/**\n * Array Utility Functions\n * Consolidated array manipulation utilities used throughout the application\n */\n\n/**\n * Safely convert various data types to Uint8Array\n */\nexport function toUint8Array(data: ArrayBuffer | Uint8Array | Buffer | number[]): Uint8Array {\n  if (data instanceof Uint8Array) {\n    return data;\n  }\n  \n  if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data);\n  }\n  \n  if (Buffer && Buffer.isBuffer(data)) {\n    return new Uint8Array(data);\n  }\n  \n  if (Array.isArray(data)) {\n    return new Uint8Array(data);\n  }\n  \n  throw new Error(`Cannot convert ${typeof data} to Uint8Array`);\n}\n\n/**\n * Safely convert Uint8Array to ArrayBuffer\n */\nexport function toArrayBuffer(uint8Array: Uint8Array): ArrayBuffer {\n  // If the Uint8Array is already backed by the exact ArrayBuffer we need\n  if (uint8Array.byteOffset === 0 && uint8Array.byteLength === uint8Array.buffer.byteLength) {\n    return uint8Array.buffer;\n  }\n  \n  // Otherwise, create a new ArrayBuffer with the exact bytes\n  const buffer = new ArrayBuffer(uint8Array.byteLength);\n  const view = new Uint8Array(buffer);\n  view.set(uint8Array);\n  return buffer;\n}\n\n/**\n * Compare two Uint8Arrays for equality\n */\nexport function arraysEqual(a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) return true;\n  if (a.length !== b.length) return false;\n  \n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  \n  return true;\n}\n\n/**\n * Create a deep copy of a Uint8Array\n */\nexport function cloneUint8Array(array: Uint8Array): Uint8Array {\n  const cloned = new Uint8Array(array.length);\n  cloned.set(array);\n  return cloned;\n}\n\n/**\n * Concatenate multiple Uint8Arrays\n */\nexport function concatUint8Arrays(...arrays: Uint8Array[]): Uint8Array {\n  const totalLength = arrays.reduce((sum, arr) => sum + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  \n  let offset = 0;\n  for (const array of arrays) {\n    result.set(array, offset);\n    offset += array.length;\n  }\n  \n  return result;\n}\n\n/**\n * Split Uint8Array into chunks of specified size\n */\nexport function chunkUint8Array(array: Uint8Array, chunkSize: number): Uint8Array[] {\n  if (chunkSize <= 0) {\n    throw new Error('Chunk size must be positive');\n  }\n  \n  const chunks: Uint8Array[] = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    chunks.push(array.slice(i, i + chunkSize));\n  }\n  \n  return chunks;\n}\n\n/**\n * Find the index of a byte pattern within a Uint8Array\n */\nexport function findBytePattern(haystack: Uint8Array, needle: Uint8Array): number {\n  if (needle.length === 0) return 0;\n  if (needle.length > haystack.length) return -1;\n  \n  for (let i = 0; i <= haystack.length - needle.length; i++) {\n    let found = true;\n    for (let j = 0; j < needle.length; j++) {\n      if (haystack[i + j] !== needle[j]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) return i;\n  }\n  \n  return -1;\n}\n\n/**\n * Convert Uint8Array to hex string\n */\nexport function uint8ArrayToHex(array: Uint8Array): string {\n  return Array.from(array)\n    .map(byte => byte.toString(16).padStart(2, '0'))\n    .join('');\n}\n\n/**\n * Convert hex string to Uint8Array\n */\nexport function hexToUint8Array(hex: string): Uint8Array {\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid hex string length');\n  }\n  \n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < hex.length; i += 2) {\n    array[i / 2] = parseInt(hex.substr(i, 2), 16);\n  }\n  \n  return array;\n}\n\n/**\n * Check if array is likely binary data\n */\nexport function isBinaryData(array: Uint8Array, sampleSize: number = 1024): boolean {\n  const sample = array.slice(0, Math.min(sampleSize, array.length));\n  let nonTextBytes = 0;\n  \n  for (const byte of sample) {\n    // Count bytes that are not typical text characters\n    if (byte === 0 || (byte < 32 && byte !== 9 && byte !== 10 && byte !== 13) || byte > 126) {\n      nonTextBytes++;\n    }\n  }\n  \n  // If more than 30% of bytes are non-text, consider it binary\n  return (nonTextBytes / sample.length) > 0.3;\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4c171b1b1641932db2c158e9913efb80764c2b2e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27qrqctqij = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27qrqctqij();
cov_27qrqctqij().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27qrqctqij().s[1]++;
exports.toUint8Array = toUint8Array;
/* istanbul ignore next */
cov_27qrqctqij().s[2]++;
exports.toArrayBuffer = toArrayBuffer;
/* istanbul ignore next */
cov_27qrqctqij().s[3]++;
exports.arraysEqual = arraysEqual;
/* istanbul ignore next */
cov_27qrqctqij().s[4]++;
exports.cloneUint8Array = cloneUint8Array;
/* istanbul ignore next */
cov_27qrqctqij().s[5]++;
exports.concatUint8Arrays = concatUint8Arrays;
/* istanbul ignore next */
cov_27qrqctqij().s[6]++;
exports.chunkUint8Array = chunkUint8Array;
/* istanbul ignore next */
cov_27qrqctqij().s[7]++;
exports.findBytePattern = findBytePattern;
/* istanbul ignore next */
cov_27qrqctqij().s[8]++;
exports.uint8ArrayToHex = uint8ArrayToHex;
/* istanbul ignore next */
cov_27qrqctqij().s[9]++;
exports.hexToUint8Array = hexToUint8Array;
/* istanbul ignore next */
cov_27qrqctqij().s[10]++;
exports.isBinaryData = isBinaryData;
/**
 * Safely convert various data types to Uint8Array
 */
function toUint8Array(data) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[0]++;
  cov_27qrqctqij().s[11]++;
  if (data instanceof Uint8Array) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[0][0]++;
    cov_27qrqctqij().s[12]++;
    return data;
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[0][1]++;
  }
  cov_27qrqctqij().s[13]++;
  if (data instanceof ArrayBuffer) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[1][0]++;
    cov_27qrqctqij().s[14]++;
    return new Uint8Array(data);
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[1][1]++;
  }
  cov_27qrqctqij().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_27qrqctqij().b[3][0]++, Buffer) &&
  /* istanbul ignore next */
  (cov_27qrqctqij().b[3][1]++, Buffer.isBuffer(data))) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[2][0]++;
    cov_27qrqctqij().s[16]++;
    return new Uint8Array(data);
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[2][1]++;
  }
  cov_27qrqctqij().s[17]++;
  if (Array.isArray(data)) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[4][0]++;
    cov_27qrqctqij().s[18]++;
    return new Uint8Array(data);
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[4][1]++;
  }
  cov_27qrqctqij().s[19]++;
  throw new Error(`Cannot convert ${typeof data} to Uint8Array`);
}
/**
 * Safely convert Uint8Array to ArrayBuffer
 */
function toArrayBuffer(uint8Array) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[1]++;
  cov_27qrqctqij().s[20]++;
  // If the Uint8Array is already backed by the exact ArrayBuffer we need
  if (
  /* istanbul ignore next */
  (cov_27qrqctqij().b[6][0]++, uint8Array.byteOffset === 0) &&
  /* istanbul ignore next */
  (cov_27qrqctqij().b[6][1]++, uint8Array.byteLength === uint8Array.buffer.byteLength)) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[5][0]++;
    cov_27qrqctqij().s[21]++;
    return uint8Array.buffer;
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[5][1]++;
  }
  // Otherwise, create a new ArrayBuffer with the exact bytes
  const buffer =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[22]++, new ArrayBuffer(uint8Array.byteLength));
  const view =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[23]++, new Uint8Array(buffer));
  /* istanbul ignore next */
  cov_27qrqctqij().s[24]++;
  view.set(uint8Array);
  /* istanbul ignore next */
  cov_27qrqctqij().s[25]++;
  return buffer;
}
/**
 * Compare two Uint8Arrays for equality
 */
function arraysEqual(a, b) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[2]++;
  cov_27qrqctqij().s[26]++;
  if (a === b) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[7][0]++;
    cov_27qrqctqij().s[27]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[7][1]++;
  }
  cov_27qrqctqij().s[28]++;
  if (a.length !== b.length) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[8][0]++;
    cov_27qrqctqij().s[29]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[8][1]++;
  }
  cov_27qrqctqij().s[30]++;
  for (let i =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[31]++, 0); i < a.length; i++) {
    /* istanbul ignore next */
    cov_27qrqctqij().s[32]++;
    if (a[i] !== b[i]) {
      /* istanbul ignore next */
      cov_27qrqctqij().b[9][0]++;
      cov_27qrqctqij().s[33]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_27qrqctqij().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_27qrqctqij().s[34]++;
  return true;
}
/**
 * Create a deep copy of a Uint8Array
 */
function cloneUint8Array(array) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[3]++;
  const cloned =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[35]++, new Uint8Array(array.length));
  /* istanbul ignore next */
  cov_27qrqctqij().s[36]++;
  cloned.set(array);
  /* istanbul ignore next */
  cov_27qrqctqij().s[37]++;
  return cloned;
}
/**
 * Concatenate multiple Uint8Arrays
 */
function concatUint8Arrays(...arrays) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[4]++;
  const totalLength =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[38]++, arrays.reduce((sum, arr) => {
    /* istanbul ignore next */
    cov_27qrqctqij().f[5]++;
    cov_27qrqctqij().s[39]++;
    return sum + arr.length;
  }, 0));
  const result =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[40]++, new Uint8Array(totalLength));
  let offset =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[41]++, 0);
  /* istanbul ignore next */
  cov_27qrqctqij().s[42]++;
  for (const array of arrays) {
    /* istanbul ignore next */
    cov_27qrqctqij().s[43]++;
    result.set(array, offset);
    /* istanbul ignore next */
    cov_27qrqctqij().s[44]++;
    offset += array.length;
  }
  /* istanbul ignore next */
  cov_27qrqctqij().s[45]++;
  return result;
}
/**
 * Split Uint8Array into chunks of specified size
 */
function chunkUint8Array(array, chunkSize) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[6]++;
  cov_27qrqctqij().s[46]++;
  if (chunkSize <= 0) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[10][0]++;
    cov_27qrqctqij().s[47]++;
    throw new Error('Chunk size must be positive');
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[10][1]++;
  }
  const chunks =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[48]++, []);
  /* istanbul ignore next */
  cov_27qrqctqij().s[49]++;
  for (let i =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[50]++, 0); i < array.length; i += chunkSize) {
    /* istanbul ignore next */
    cov_27qrqctqij().s[51]++;
    chunks.push(array.slice(i, i + chunkSize));
  }
  /* istanbul ignore next */
  cov_27qrqctqij().s[52]++;
  return chunks;
}
/**
 * Find the index of a byte pattern within a Uint8Array
 */
function findBytePattern(haystack, needle) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[7]++;
  cov_27qrqctqij().s[53]++;
  if (needle.length === 0) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[11][0]++;
    cov_27qrqctqij().s[54]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[11][1]++;
  }
  cov_27qrqctqij().s[55]++;
  if (needle.length > haystack.length) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[12][0]++;
    cov_27qrqctqij().s[56]++;
    return -1;
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[12][1]++;
  }
  cov_27qrqctqij().s[57]++;
  for (let i =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[58]++, 0); i <= haystack.length - needle.length; i++) {
    let found =
    /* istanbul ignore next */
    (cov_27qrqctqij().s[59]++, true);
    /* istanbul ignore next */
    cov_27qrqctqij().s[60]++;
    for (let j =
    /* istanbul ignore next */
    (cov_27qrqctqij().s[61]++, 0); j < needle.length; j++) {
      /* istanbul ignore next */
      cov_27qrqctqij().s[62]++;
      if (haystack[i + j] !== needle[j]) {
        /* istanbul ignore next */
        cov_27qrqctqij().b[13][0]++;
        cov_27qrqctqij().s[63]++;
        found = false;
        /* istanbul ignore next */
        cov_27qrqctqij().s[64]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_27qrqctqij().b[13][1]++;
      }
    }
    /* istanbul ignore next */
    cov_27qrqctqij().s[65]++;
    if (found) {
      /* istanbul ignore next */
      cov_27qrqctqij().b[14][0]++;
      cov_27qrqctqij().s[66]++;
      return i;
    } else
    /* istanbul ignore next */
    {
      cov_27qrqctqij().b[14][1]++;
    }
  }
  /* istanbul ignore next */
  cov_27qrqctqij().s[67]++;
  return -1;
}
/**
 * Convert Uint8Array to hex string
 */
function uint8ArrayToHex(array) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[8]++;
  cov_27qrqctqij().s[68]++;
  return Array.from(array).map(byte => {
    /* istanbul ignore next */
    cov_27qrqctqij().f[9]++;
    cov_27qrqctqij().s[69]++;
    return byte.toString(16).padStart(2, '0');
  }).join('');
}
/**
 * Convert hex string to Uint8Array
 */
function hexToUint8Array(hex) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[10]++;
  cov_27qrqctqij().s[70]++;
  if (hex.length % 2 !== 0) {
    /* istanbul ignore next */
    cov_27qrqctqij().b[15][0]++;
    cov_27qrqctqij().s[71]++;
    throw new Error('Invalid hex string length');
  } else
  /* istanbul ignore next */
  {
    cov_27qrqctqij().b[15][1]++;
  }
  const array =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[72]++, new Uint8Array(hex.length / 2));
  /* istanbul ignore next */
  cov_27qrqctqij().s[73]++;
  for (let i =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[74]++, 0); i < hex.length; i += 2) {
    /* istanbul ignore next */
    cov_27qrqctqij().s[75]++;
    array[i / 2] = parseInt(hex.substr(i, 2), 16);
  }
  /* istanbul ignore next */
  cov_27qrqctqij().s[76]++;
  return array;
}
/**
 * Check if array is likely binary data
 */
function isBinaryData(array, sampleSize =
/* istanbul ignore next */
(cov_27qrqctqij().b[16][0]++, 1024)) {
  /* istanbul ignore next */
  cov_27qrqctqij().f[11]++;
  const sample =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[77]++, array.slice(0, Math.min(sampleSize, array.length)));
  let nonTextBytes =
  /* istanbul ignore next */
  (cov_27qrqctqij().s[78]++, 0);
  /* istanbul ignore next */
  cov_27qrqctqij().s[79]++;
  for (const byte of sample) {
    /* istanbul ignore next */
    cov_27qrqctqij().s[80]++;
    // Count bytes that are not typical text characters
    if (
    /* istanbul ignore next */
    (cov_27qrqctqij().b[18][0]++, byte === 0) ||
    /* istanbul ignore next */
    (cov_27qrqctqij().b[18][1]++, byte < 32) &&
    /* istanbul ignore next */
    (cov_27qrqctqij().b[18][2]++, byte !== 9) &&
    /* istanbul ignore next */
    (cov_27qrqctqij().b[18][3]++, byte !== 10) &&
    /* istanbul ignore next */
    (cov_27qrqctqij().b[18][4]++, byte !== 13) ||
    /* istanbul ignore next */
    (cov_27qrqctqij().b[18][5]++, byte > 126)) {
      /* istanbul ignore next */
      cov_27qrqctqij().b[17][0]++;
      cov_27qrqctqij().s[81]++;
      nonTextBytes++;
    } else
    /* istanbul ignore next */
    {
      cov_27qrqctqij().b[17][1]++;
    }
  }
  // If more than 30% of bytes are non-text, consider it binary
  /* istanbul ignore next */
  cov_27qrqctqij().s[82]++;
  return nonTextBytes / sample.length > 0.3;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,