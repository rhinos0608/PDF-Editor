bfed0f678d27098972f66a15fca43f19
"use strict";

/* istanbul ignore next */
function cov_2fumnfmdy7() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts";
  var hash = "57ed0c73e338c97e807235e0087872e5de4f3477";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "37": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "38": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "39": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "40": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "41": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "42": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 22
        }
      },
      "43": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "44": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 84
        }
      },
      "45": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "46": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 76
        }
      },
      "47": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "48": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "49": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "50": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "51": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "52": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "53": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "54": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "55": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "56": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 55
        }
      },
      "57": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "58": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 80
        }
      },
      "59": {
        start: {
          line: 92,
          column: 31
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "60": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 82
        }
      },
      "61": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "62": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 103
        }
      },
      "63": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 73
        }
      },
      "64": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 80
        }
      },
      "65": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "66": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 78
        }
      },
      "67": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "68": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 36
        }
      },
      "69": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 97
        }
      },
      "70": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 29
        }
      },
      "71": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "72": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 53
        }
      },
      "73": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 68
        }
      },
      "74": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "75": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 75
        }
      },
      "76": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 125,
          column: 62
        }
      },
      "77": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 23
        }
      },
      "78": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 57
        }
      },
      "79": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 77
        }
      },
      "80": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 52
        }
      },
      "81": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 65
        }
      },
      "82": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 62
        }
      },
      "83": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "84": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 64
        }
      },
      "85": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 78
        }
      },
      "86": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 59
        }
      },
      "87": {
        start: {
          line: 145,
          column: 34
        },
        end: {
          line: 145,
          column: 57
        }
      },
      "88": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 38
        }
      },
      "89": {
        start: {
          line: 151,
          column: 23
        },
        end: {
          line: 151,
          column: 65
        }
      },
      "90": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 48
        }
      },
      "91": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "92": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 57
        }
      },
      "93": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 157,
          column: 61
        }
      },
      "94": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 107
        }
      },
      "95": {
        start: {
          line: 158,
          column: 104
        },
        end: {
          line: 158,
          column: 105
        }
      },
      "96": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 59
        }
      },
      "97": {
        start: {
          line: 159,
          column: 35
        },
        end: {
          line: 159,
          column: 57
        }
      },
      "98": {
        start: {
          line: 161,
          column: 26
        },
        end: {
          line: 161,
          column: 62
        }
      },
      "99": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 134
        }
      },
      "100": {
        start: {
          line: 162,
          column: 119
        },
        end: {
          line: 162,
          column: 132
        }
      },
      "101": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 61
        }
      },
      "102": {
        start: {
          line: 163,
          column: 36
        },
        end: {
          line: 163,
          column: 59
        }
      },
      "103": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "104": {
        start: {
          line: 171,
          column: 23
        },
        end: {
          line: 171,
          column: 65
        }
      },
      "105": {
        start: {
          line: 172,
          column: 29
        },
        end: {
          line: 172,
          column: 65
        }
      },
      "106": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 55
        }
      },
      "107": {
        start: {
          line: 174,
          column: 47
        },
        end: {
          line: 174,
          column: 54
        }
      },
      "108": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 67
        }
      },
      "109": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 58
        }
      },
      "110": {
        start: {
          line: 176,
          column: 30
        },
        end: {
          line: 176,
          column: 56
        }
      },
      "111": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 41
        }
      },
      "112": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 65
        }
      },
      "113": {
        start: {
          line: 182,
          column: 22
        },
        end: {
          line: 182,
          column: 39
        }
      },
      "114": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "115": {
        start: {
          line: 184,
          column: 35
        },
        end: {
          line: 184,
          column: 47
        }
      },
      "116": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "117": {
        start: {
          line: 187,
          column: 36
        },
        end: {
          line: 187,
          column: 54
        }
      },
      "118": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 87
        }
      },
      "119": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 35
        }
      },
      "120": {
        start: {
          line: 196,
          column: 23
        },
        end: {
          line: 196,
          column: 65
        }
      },
      "121": {
        start: {
          line: 197,
          column: 21
        },
        end: {
          line: 197,
          column: 66
        }
      },
      "122": {
        start: {
          line: 199,
          column: 21
        },
        end: {
          line: 199,
          column: 78
        }
      },
      "123": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "124": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 35
        }
      },
      "125": {
        start: {
          line: 211,
          column: 23
        },
        end: {
          line: 211,
          column: 65
        }
      },
      "126": {
        start: {
          line: 213,
          column: 28
        },
        end: {
          line: 213,
          column: 66
        }
      },
      "127": {
        start: {
          line: 213,
          column: 60
        },
        end: {
          line: 213,
          column: 65
        }
      },
      "128": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      },
      "129": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "130": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 47
        }
      },
      "131": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 35
        }
      },
      "132": {
        start: {
          line: 223,
          column: 23
        },
        end: {
          line: 223,
          column: 65
        }
      },
      "133": {
        start: {
          line: 225,
          column: 24
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "134": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 230,
          column: 44
        }
      },
      "135": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 46
        }
      },
      "136": {
        start: {
          line: 235,
          column: 100
        },
        end: {
          line: 235,
          column: 107
        }
      },
      "137": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "138": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 58
        }
      },
      "139": {
        start: {
          line: 239,
          column: 33
        },
        end: {
          line: 239,
          column: 74
        }
      },
      "140": {
        start: {
          line: 240,
          column: 27
        },
        end: {
          line: 240,
          column: 73
        }
      },
      "141": {
        start: {
          line: 241,
          column: 26
        },
        end: {
          line: 241,
          column: 43
        }
      },
      "142": {
        start: {
          line: 242,
          column: 25
        },
        end: {
          line: 242,
          column: 82
        }
      },
      "143": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "144": {
        start: {
          line: 244,
          column: 42
        },
        end: {
          line: 244,
          column: 56
        }
      },
      "145": {
        start: {
          line: 245,
          column: 34
        },
        end: {
          line: 245,
          column: 81
        }
      },
      "146": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 254,
          column: 19
        }
      },
      "147": {
        start: {
          line: 256,
          column: 27
        },
        end: {
          line: 256,
          column: 46
        }
      },
      "148": {
        start: {
          line: 257,
          column: 31
        },
        end: {
          line: 257,
          column: 70
        }
      },
      "149": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 83
        }
      },
      "150": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 30
        }
      },
      "151": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 66
        }
      },
      "152": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 73
        }
      },
      "153": {
        start: {
          line: 268,
          column: 27
        },
        end: {
          line: 268,
          column: 47
        }
      },
      "154": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "155": {
        start: {
          line: 271,
          column: 25
        },
        end: {
          line: 271,
          column: 45
        }
      },
      "156": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 32
        }
      },
      "157": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 68
        }
      },
      "158": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 24
        }
      },
      "159": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 60
        }
      },
      "160": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 78
        }
      },
      "161": {
        start: {
          line: 283,
          column: 107
        },
        end: {
          line: 283,
          column: 114
        }
      },
      "162": {
        start: {
          line: 284,
          column: 23
        },
        end: {
          line: 284,
          column: 65
        }
      },
      "163": {
        start: {
          line: 285,
          column: 22
        },
        end: {
          line: 285,
          column: 39
        }
      },
      "164": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 286,
          column: 78
        }
      },
      "165": {
        start: {
          line: 287,
          column: 27
        },
        end: {
          line: 287,
          column: 39
        }
      },
      "166": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "167": {
        start: {
          line: 289,
          column: 38
        },
        end: {
          line: 289,
          column: 52
        }
      },
      "168": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 290,
          column: 37
        }
      },
      "169": {
        start: {
          line: 291,
          column: 25
        },
        end: {
          line: 293,
          column: 58
        }
      },
      "170": {
        start: {
          line: 294,
          column: 30
        },
        end: {
          line: 294,
          column: 68
        }
      },
      "171": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 26
        }
      },
      "172": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 26
        }
      },
      "173": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "174": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 299,
          column: 44
        }
      },
      "175": {
        start: {
          line: 301,
          column: 17
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "176": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 47
        }
      },
      "177": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "178": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 36
        }
      },
      "179": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 313,
          column: 15
        }
      },
      "180": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 35
        }
      },
      "181": {
        start: {
          line: 319,
          column: 23
        },
        end: {
          line: 319,
          column: 65
        }
      },
      "182": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 329,
          column: 10
        }
      },
      "183": {
        start: {
          line: 324,
          column: 64
        },
        end: {
          line: 324,
          column: 72
        }
      },
      "184": {
        start: {
          line: 333,
          column: 23
        },
        end: {
          line: 333,
          column: 65
        }
      },
      "185": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 335,
          column: 44
        }
      },
      "186": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 44
        }
      },
      "187": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 337,
          column: 46
        }
      },
      "188": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 46
        }
      },
      "189": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 339,
          column: 48
        }
      },
      "190": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 48
        }
      },
      "191": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "192": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 50
        }
      },
      "193": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 345,
          column: 48
        }
      },
      "194": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 48
        }
      },
      "195": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 347,
          column: 50
        }
      },
      "196": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 50
        }
      },
      "197": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 349,
          column: 58
        }
      },
      "198": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 58
        }
      },
      "199": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 351,
          column: 66
        }
      },
      "200": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 66
        }
      },
      "201": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 35
        }
      },
      "202": {
        start: {
          line: 356,
          column: 23
        },
        end: {
          line: 356,
          column: 65
        }
      },
      "203": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 363,
          column: 11
        }
      },
      "204": {
        start: {
          line: 367,
          column: 23
        },
        end: {
          line: 367,
          column: 65
        }
      },
      "205": {
        start: {
          line: 368,
          column: 21
        },
        end: {
          line: 368,
          column: 51
        }
      },
      "206": {
        start: {
          line: 371,
          column: 22
        },
        end: {
          line: 371,
          column: 48
        }
      },
      "207": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "208": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 54
        }
      },
      "209": {
        start: {
          line: 376,
          column: 13
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "210": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 54
        }
      },
      "211": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 56
        }
      },
      "212": {
        start: {
          line: 383,
          column: 55
        },
        end: {
          line: 383,
          column: 60
        }
      },
      "213": {
        start: {
          line: 384,
          column: 22
        },
        end: {
          line: 384,
          column: 47
        }
      },
      "214": {
        start: {
          line: 385,
          column: 23
        },
        end: {
          line: 385,
          column: 50
        }
      },
      "215": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 392,
          column: 11
        }
      },
      "216": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 35
        }
      },
      "217": {
        start: {
          line: 397,
          column: 23
        },
        end: {
          line: 397,
          column: 65
        }
      },
      "218": {
        start: {
          line: 398,
          column: 29
        },
        end: {
          line: 398,
          column: 65
        }
      },
      "219": {
        start: {
          line: 400,
          column: 24
        },
        end: {
          line: 400,
          column: 48
        }
      },
      "220": {
        start: {
          line: 400,
          column: 42
        },
        end: {
          line: 400,
          column: 47
        }
      },
      "221": {
        start: {
          line: 401,
          column: 22
        },
        end: {
          line: 401,
          column: 67
        }
      },
      "222": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 58
        }
      },
      "223": {
        start: {
          line: 402,
          column: 30
        },
        end: {
          line: 402,
          column: 56
        }
      },
      "224": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 41
        }
      },
      "225": {
        start: {
          line: 407,
          column: 23
        },
        end: {
          line: 407,
          column: 65
        }
      },
      "226": {
        start: {
          line: 408,
          column: 21
        },
        end: {
          line: 408,
          column: 51
        }
      },
      "227": {
        start: {
          line: 409,
          column: 34
        },
        end: {
          line: 409,
          column: 48
        }
      },
      "228": {
        start: {
          line: 410,
          column: 25
        },
        end: {
          line: 410,
          column: 43
        }
      },
      "229": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 415,
          column: 10
        }
      },
      "230": {
        start: {
          line: 422,
          column: 23
        },
        end: {
          line: 422,
          column: 65
        }
      },
      "231": {
        start: {
          line: 423,
          column: 22
        },
        end: {
          line: 423,
          column: 39
        }
      },
      "232": {
        start: {
          line: 424,
          column: 28
        },
        end: {
          line: 426,
          column: 19
        }
      },
      "233": {
        start: {
          line: 425,
          column: 35
        },
        end: {
          line: 425,
          column: 47
        }
      },
      "234": {
        start: {
          line: 425,
          column: 61
        },
        end: {
          line: 425,
          column: 62
        }
      },
      "235": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 429,
          column: 11
        }
      },
      "236": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 85
        }
      },
      "237": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 35
        }
      },
      "238": {
        start: {
          line: 436,
          column: 24
        },
        end: {
          line: 436,
          column: 26
        }
      },
      "239": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "240": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 470,
          column: 13
        }
      },
      "241": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 465,
          column: 17
        }
      },
      "242": {
        start: {
          line: 441,
          column: 39
        },
        end: {
          line: 441,
          column: 81
        }
      },
      "243": {
        start: {
          line: 442,
          column: 24
        },
        end: {
          line: 442,
          column: 45
        }
      },
      "244": {
        start: {
          line: 443,
          column: 24
        },
        end: {
          line: 443,
          column: 30
        }
      },
      "245": {
        start: {
          line: 445,
          column: 24
        },
        end: {
          line: 448,
          column: 25
        }
      },
      "246": {
        start: {
          line: 446,
          column: 44
        },
        end: {
          line: 446,
          column: 139
        }
      },
      "247": {
        start: {
          line: 447,
          column: 28
        },
        end: {
          line: 447,
          column: 50
        }
      },
      "248": {
        start: {
          line: 449,
          column: 24
        },
        end: {
          line: 449,
          column: 30
        }
      },
      "249": {
        start: {
          line: 451,
          column: 24
        },
        end: {
          line: 454,
          column: 25
        }
      },
      "250": {
        start: {
          line: 452,
          column: 47
        },
        end: {
          line: 452,
          column: 115
        }
      },
      "251": {
        start: {
          line: 453,
          column: 28
        },
        end: {
          line: 453,
          column: 53
        }
      },
      "252": {
        start: {
          line: 455,
          column: 24
        },
        end: {
          line: 455,
          column: 30
        }
      },
      "253": {
        start: {
          line: 457,
          column: 24
        },
        end: {
          line: 460,
          column: 25
        }
      },
      "254": {
        start: {
          line: 458,
          column: 48
        },
        end: {
          line: 458,
          column: 151
        }
      },
      "255": {
        start: {
          line: 459,
          column: 28
        },
        end: {
          line: 459,
          column: 54
        }
      },
      "256": {
        start: {
          line: 461,
          column: 24
        },
        end: {
          line: 461,
          column: 30
        }
      },
      "257": {
        start: {
          line: 463,
          column: 24
        },
        end: {
          line: 463,
          column: 87
        }
      },
      "258": {
        start: {
          line: 464,
          column: 24
        },
        end: {
          line: 464,
          column: 30
        }
      },
      "259": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 468,
          column: 82
        }
      },
      "260": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 23
        }
      },
      "261": {
        start: {
          line: 475,
          column: 0
        },
        end: {
          line: 475,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 41
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 54
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 72
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 85
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 121
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 22
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 133
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 44
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 136
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 140
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 27
          }
        },
        loc: {
          start: {
            line: 145,
            column: 34
          },
          end: {
            line: 145,
            column: 57
          }
        },
        line: 145
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 40
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 150
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 158,
            column: 94
          },
          end: {
            line: 158,
            column: 95
          }
        },
        loc: {
          start: {
            line: 158,
            column: 104
          },
          end: {
            line: 158,
            column: 105
          }
        },
        line: 158
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 159,
            column: 27
          },
          end: {
            line: 159,
            column: 28
          }
        },
        loc: {
          start: {
            line: 159,
            column: 35
          },
          end: {
            line: 159,
            column: 57
          }
        },
        line: 159
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 162,
            column: 109
          },
          end: {
            line: 162,
            column: 110
          }
        },
        loc: {
          start: {
            line: 162,
            column: 119
          },
          end: {
            line: 162,
            column: 132
          }
        },
        line: 162
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 163,
            column: 28
          },
          end: {
            line: 163,
            column: 29
          }
        },
        loc: {
          start: {
            line: 163,
            column: 36
          },
          end: {
            line: 163,
            column: 59
          }
        },
        line: 163
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 170
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 174,
            column: 40
          },
          end: {
            line: 174,
            column: 41
          }
        },
        loc: {
          start: {
            line: 174,
            column: 47
          },
          end: {
            line: 174,
            column: 54
          }
        },
        line: 174
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 176,
            column: 23
          }
        },
        loc: {
          start: {
            line: 176,
            column: 30
          },
          end: {
            line: 176,
            column: 56
          }
        },
        line: 176
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 55
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 180
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 184,
            column: 30
          },
          end: {
            line: 184,
            column: 31
          }
        },
        loc: {
          start: {
            line: 184,
            column: 35
          },
          end: {
            line: 184,
            column: 47
          }
        },
        line: 184
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 29
          }
        },
        loc: {
          start: {
            line: 186,
            column: 36
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 186
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 6
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 195
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 45
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 210
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 213,
            column: 50
          },
          end: {
            line: 213,
            column: 51
          }
        },
        loc: {
          start: {
            line: 213,
            column: 60
          },
          end: {
            line: 213,
            column: 65
          }
        },
        line: 213
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 214,
            column: 28
          },
          end: {
            line: 214,
            column: 29
          }
        },
        loc: {
          start: {
            line: 214,
            column: 39
          },
          end: {
            line: 218,
            column: 9
          }
        },
        line: 214
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 52
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 222
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 62
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 234
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 17
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 267
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 49
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 282
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 288,
            column: 22
          },
          end: {
            line: 288,
            column: 23
          }
        },
        loc: {
          start: {
            line: 288,
            column: 39
          },
          end: {
            line: 314,
            column: 9
          }
        },
        line: 288
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 318,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        loc: {
          start: {
            line: 318,
            column: 32
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 318
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 324,
            column: 59
          },
          end: {
            line: 324,
            column: 60
          }
        },
        loc: {
          start: {
            line: 324,
            column: 64
          },
          end: {
            line: 324,
            column: 72
          }
        },
        line: 324
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 42
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 332
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        loc: {
          start: {
            line: 355,
            column: 35
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 355
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        loc: {
          start: {
            line: 366,
            column: 62
          },
          end: {
            line: 394,
            column: 5
          }
        },
        line: 366
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 43
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 396
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 400,
            column: 37
          },
          end: {
            line: 400,
            column: 38
          }
        },
        loc: {
          start: {
            line: 400,
            column: 42
          },
          end: {
            line: 400,
            column: 47
          }
        },
        line: 400
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 402,
            column: 22
          },
          end: {
            line: 402,
            column: 23
          }
        },
        loc: {
          start: {
            line: 402,
            column: 30
          },
          end: {
            line: 402,
            column: 56
          }
        },
        line: 402
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        loc: {
          start: {
            line: 406,
            column: 50
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 406
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        },
        loc: {
          start: {
            line: 421,
            column: 53
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 421
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 425,
            column: 30
          },
          end: {
            line: 425,
            column: 31
          }
        },
        loc: {
          start: {
            line: 425,
            column: 35
          },
          end: {
            line: 425,
            column: 47
          }
        },
        line: 425
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 425,
            column: 56
          },
          end: {
            line: 425,
            column: 57
          }
        },
        loc: {
          start: {
            line: 425,
            column: 61
          },
          end: {
            line: 425,
            column: 62
          }
        },
        line: 425
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 427,
            column: 28
          },
          end: {
            line: 427,
            column: 29
          }
        },
        loc: {
          start: {
            line: 427,
            column: 36
          },
          end: {
            line: 429,
            column: 9
          }
        },
        line: 427
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 35
          },
          end: {
            line: 473,
            column: 5
          }
        },
        line: 435
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "18": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "19": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "20": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "21": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "22": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "23": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 153,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 153,
            column: 25
          }
        }, {
          start: {
            line: 153,
            column: 29
          },
          end: {
            line: 153,
            column: 52
          }
        }],
        line: 153
      },
      "24": {
        loc: {
          start: {
            line: 183,
            column: 28
          },
          end: {
            line: 185,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 14
          },
          end: {
            line: 184,
            column: 48
          }
        }, {
          start: {
            line: 185,
            column: 14
          },
          end: {
            line: 185,
            column: 19
          }
        }],
        line: 183
      },
      "25": {
        loc: {
          start: {
            line: 193,
            column: 47
          },
          end: {
            line: 193,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 61
          }
        }],
        line: 193
      },
      "26": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 194,
            column: 13
          },
          end: {
            line: 194,
            column: 19
          }
        }],
        line: 194
      },
      "27": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "28": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 27
          }
        }, {
          start: {
            line: 215,
            column: 31
          },
          end: {
            line: 215,
            column: 63
          }
        }],
        line: 215
      },
      "29": {
        loc: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 222,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 222,
            column: 42
          },
          end: {
            line: 222,
            column: 50
          }
        }],
        line: 222
      },
      "30": {
        loc: {
          start: {
            line: 234,
            column: 48
          },
          end: {
            line: 234,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 234,
            column: 58
          },
          end: {
            line: 234,
            column: 60
          }
        }],
        line: 234
      },
      "31": {
        loc: {
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 235,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 27
          },
          end: {
            line: 235,
            column: 29
          }
        }],
        line: 235
      },
      "32": {
        loc: {
          start: {
            line: 235,
            column: 31
          },
          end: {
            line: 235,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 41
          },
          end: {
            line: 235,
            column: 44
          }
        }],
        line: 235
      },
      "33": {
        loc: {
          start: {
            line: 235,
            column: 46
          },
          end: {
            line: 235,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 57
          },
          end: {
            line: 235,
            column: 59
          }
        }],
        line: 235
      },
      "34": {
        loc: {
          start: {
            line: 235,
            column: 61
          },
          end: {
            line: 235,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 69
          },
          end: {
            line: 235,
            column: 95
          }
        }],
        line: 235
      },
      "35": {
        loc: {
          start: {
            line: 282,
            column: 35
          },
          end: {
            line: 282,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 282,
            column: 47
          }
        }],
        line: 282
      },
      "36": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 283,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 27
          },
          end: {
            line: 283,
            column: 42
          }
        }],
        line: 283
      },
      "37": {
        loc: {
          start: {
            line: 283,
            column: 44
          },
          end: {
            line: 283,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 53
          },
          end: {
            line: 283,
            column: 74
          }
        }],
        line: 283
      },
      "38": {
        loc: {
          start: {
            line: 283,
            column: 76
          },
          end: {
            line: 283,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 87
          },
          end: {
            line: 283,
            column: 89
          }
        }],
        line: 283
      },
      "39": {
        loc: {
          start: {
            line: 283,
            column: 91
          },
          end: {
            line: 283,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 100
          },
          end: {
            line: 283,
            column: 102
          }
        }],
        line: 283
      },
      "40": {
        loc: {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        }, {
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 303,
            column: 13
          }
        }],
        line: 298
      },
      "41": {
        loc: {
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 303,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 17
          },
          end: {
            line: 303,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "42": {
        loc: {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "43": {
        loc: {
          start: {
            line: 324,
            column: 22
          },
          end: {
            line: 324,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 22
          },
          end: {
            line: 324,
            column: 73
          }
        }, {
          start: {
            line: 324,
            column: 77
          },
          end: {
            line: 324,
            column: 79
          }
        }],
        line: 324
      },
      "44": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 335,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 335,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "45": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 337,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 337,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "46": {
        loc: {
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 339,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 339,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "47": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "48": {
        loc: {
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 340,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 340,
            column: 29
          }
        }, {
          start: {
            line: 340,
            column: 33
          },
          end: {
            line: 340,
            column: 61
          }
        }],
        line: 340
      },
      "49": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 345,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 345,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "50": {
        loc: {
          start: {
            line: 346,
            column: 8
          },
          end: {
            line: 347,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 8
          },
          end: {
            line: 347,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "51": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 349,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 349,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "52": {
        loc: {
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 351,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 351,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "53": {
        loc: {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: 376,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        }],
        line: 372
      },
      "54": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 29
          }
        }, {
          start: {
            line: 372,
            column: 33
          },
          end: {
            line: 372,
            column: 50
          }
        }],
        line: 372
      },
      "55": {
        loc: {
          start: {
            line: 376,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: 380,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        }],
        line: 376
      },
      "56": {
        loc: {
          start: {
            line: 376,
            column: 17
          },
          end: {
            line: 376,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 17
          },
          end: {
            line: 376,
            column: 34
          }
        }, {
          start: {
            line: 376,
            column: 38
          },
          end: {
            line: 376,
            column: 55
          }
        }],
        line: 376
      },
      "57": {
        loc: {
          start: {
            line: 384,
            column: 22
          },
          end: {
            line: 384,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 22
          },
          end: {
            line: 384,
            column: 35
          }
        }, {
          start: {
            line: 384,
            column: 39
          },
          end: {
            line: 384,
            column: 47
          }
        }],
        line: 384
      },
      "58": {
        loc: {
          start: {
            line: 385,
            column: 23
          },
          end: {
            line: 385,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 23
          },
          end: {
            line: 385,
            column: 37
          }
        }, {
          start: {
            line: 385,
            column: 41
          },
          end: {
            line: 385,
            column: 50
          }
        }],
        line: 385
      },
      "59": {
        loc: {
          start: {
            line: 391,
            column: 21
          },
          end: {
            line: 391,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 21
          },
          end: {
            line: 391,
            column: 36
          }
        }, {
          start: {
            line: 391,
            column: 40
          },
          end: {
            line: 391,
            column: 41
          }
        }],
        line: 391
      },
      "60": {
        loc: {
          start: {
            line: 424,
            column: 28
          },
          end: {
            line: 426,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 425,
            column: 14
          },
          end: {
            line: 425,
            column: 63
          }
        }, {
          start: {
            line: 426,
            column: 14
          },
          end: {
            line: 426,
            column: 19
          }
        }],
        line: 424
      },
      "61": {
        loc: {
          start: {
            line: 439,
            column: 16
          },
          end: {
            line: 465,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 440,
            column: 20
          },
          end: {
            line: 443,
            column: 30
          }
        }, {
          start: {
            line: 444,
            column: 20
          },
          end: {
            line: 449,
            column: 30
          }
        }, {
          start: {
            line: 450,
            column: 20
          },
          end: {
            line: 455,
            column: 30
          }
        }, {
          start: {
            line: 456,
            column: 20
          },
          end: {
            line: 461,
            column: 30
          }
        }, {
          start: {
            line: 462,
            column: 20
          },
          end: {
            line: 464,
            column: 30
          }
        }],
        line: 439
      },
      "62": {
        loc: {
          start: {
            line: 446,
            column: 73
          },
          end: {
            line: 446,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 446,
            column: 73
          },
          end: {
            line: 446,
            column: 100
          }
        }, {
          start: {
            line: 446,
            column: 104
          },
          end: {
            line: 446,
            column: 106
          }
        }],
        line: 446
      },
      "63": {
        loc: {
          start: {
            line: 452,
            column: 76
          },
          end: {
            line: 452,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 76
          },
          end: {
            line: 452,
            column: 102
          }
        }, {
          start: {
            line: 452,
            column: 106
          },
          end: {
            line: 452,
            column: 114
          }
        }],
        line: 452
      },
      "64": {
        loc: {
          start: {
            line: 458,
            column: 78
          },
          end: {
            line: 458,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 78
          },
          end: {
            line: 458,
            column: 101
          }
        }, {
          start: {
            line: 458,
            column: 105
          },
          end: {
            line: 458,
            column: 116
          }
        }],
        line: 458
      },
      "65": {
        loc: {
          start: {
            line: 458,
            column: 118
          },
          end: {
            line: 458,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 118
          },
          end: {
            line: 458,
            column: 144
          }
        }, {
          start: {
            line: 458,
            column: 148
          },
          end: {
            line: 458,
            column: 150
          }
        }],
        line: 458
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0],
      "31": [0],
      "32": [0],
      "33": [0],
      "34": [0],
      "35": [0],
      "36": [0],
      "37": [0],
      "38": [0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0, 0, 0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAA+F;AAC/F,qDAAuC;AAEvC,8CAAyF;AAkBzF,MAAa,UAAU;IACb,UAAU,GAAuB,IAAI,CAAC;IACtC,aAAa,GAAsB,IAAI,CAAC;IACxC,UAAU,GAAY,KAAK,CAAC;IAEpC;QACE,wEAAwE;QACxE,8BAA8B;QAC9B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;YAC5C,OAAO,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,MAAmB,EAAE,aAAyB;QAC1D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,IAAA,0BAAkB,EAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;IAC3D,CAAC;IAED;;OAEG;IACH,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACH,iBAAiB;QACf,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc;QAClB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC7C,CAAC;QAED,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;YAEpE,uDAAuD;YACvD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,2BAA2B,UAAU,CAAC,UAAU,QAAQ,CAAC,CAAC;YAEtE,gDAAgD;YAChD,IAAI,CAAC,IAAA,wBAAgB,EAAC,UAAU,CAAC,EAAE,CAAC;gBAClC,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;YACzF,CAAC;YAED,MAAM,SAAS,GAAG,IAAA,0BAAkB,EAAC,UAAU,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,0BAA0B,SAAS,CAAC,UAAU,QAAQ,CAAC,CAAC;YAEpE,8CAA8C;YAC9C,IAAI,CAAC,IAAA,wBAAgB,EAAC,SAAS,CAAC,EAAE,CAAC;gBACjC,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;YAChE,CAAC;YAED,mDAAmD;YACnD,IAAI,CAAC,aAAa,GAAG,IAAA,0BAAkB,EAAC,SAAS,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,OAAO,CAAC,GAAG,CAAC,2CAA2C,SAAS,CAAC,UAAU,QAAQ,CAAC,CAAC;YACrF,OAAO,SAAS,CAAC;QAEnB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YACzD,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YACzC,MAAM,IAAI,KAAK,CAAC,uBAAuB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,OAAO,CAAC,IAAgB;QAC5B,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;YAE/D,+BAA+B;YAC/B,MAAM,GAAG,GAAG,MAAM,IAAA,qBAAa,EAAC,IAAI,CAAC,CAAC;YACtC,OAAO,GAAG,CAAC;QAEb,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC7C,MAAM,IAAI,KAAK,CAAC,gCAAgC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IAED,KAAK,CAAC,SAAS;QACb,OAAO,MAAM,qBAAW,CAAC,MAAM,EAAE,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,SAAS,CACb,SAAsB,EACtB,WAAqB;QAErB,OAAO,MAAM,SAAS,CAAC,SAAS,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,+BAA+B;IAC/B,KAAK,CAAC,SAAS,CAAC,UAAwB;QACtC,MAAM,SAAS,GAAG,MAAM,qBAAW,CAAC,MAAM,EAAE,CAAC;QAE7C,KAAK,MAAM,MAAM,IAAI,UAAU,EAAE,CAAC;YAChC,MAAM,GAAG,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;YACnE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,CAAC;QAED,OAAO,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IAED,8BAA8B;IAC9B,KAAK,CAAC,QAAQ,CACZ,QAAoB,EACpB,SAAiB;QAEjB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,UAAU,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAEzC,IAAI,SAAS,GAAG,CAAC,IAAI,SAAS,IAAI,UAAU,EAAE,CAAC;YAC7C,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC/C,CAAC;QAED,oBAAoB;QACpB,MAAM,QAAQ,GAAG,MAAM,qBAAW,CAAC,MAAM,EAAE,CAAC;QAC5C,MAAM,UAAU,GAAG,MAAM,QAAQ,CAAC,SAAS,CACzC,MAAM,EACN,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAC/C,CAAC;QACF,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAEnD,qBAAqB;QACrB,MAAM,SAAS,GAAG,MAAM,qBAAW,CAAC,MAAM,EAAE,CAAC;QAC7C,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,SAAS,CAC3C,MAAM,EACN,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,GAAG,SAAS,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,CACxE,CAAC;QACF,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAErD,OAAO;YACL,KAAK,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE;YAC5B,MAAM,EAAE,MAAM,SAAS,CAAC,IAAI,EAAE;SAC/B,CAAC;IACJ,CAAC;IAED,yBAAyB;IACzB,KAAK,CAAC,YAAY,CAChB,QAAoB,EACpB,WAAqB;QAErB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,YAAY,GAAG,MAAM,qBAAW,CAAC,MAAM,EAAE,CAAC;QAEhD,4CAA4C;QAC5C,MAAM,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5D,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAElD,OAAO,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,eAAe;IACf,KAAK,CAAC,WAAW,CACf,QAAoB,EACpB,QAAgB,EAChB,WAAsB;QAEtB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAEhC,MAAM,WAAW,GAAG,WAAW;YAC7B,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,KAAK,CAAC;QAEV,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACzB,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,IAAA,iBAAO,EAAC,eAAe,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,oBAAoB;IACpB,KAAK,CAAC,eAAe,CACnB,QAAoB,EACpB,SAAiB,EACjB,QAAgB,MAAM,EAAE,qBAAqB;IAC7C,SAAiB,MAAM,CAAC,sBAAsB;;QAE9C,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QAE3D,uBAAuB;QACvB,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,uBAAa,CAAC,SAAS,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;YAC1B,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,MAAM,GAAG,EAAE;YACd,IAAI,EAAE,EAAE;YACR,IAAI;YACJ,KAAK,EAAE,IAAA,aAAG,EAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;SAC1B,CAAC,CAAC;QAEH,OAAO,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,eAAe;IACf,KAAK,CAAC,WAAW,CACf,QAAoB,EACpB,WAAqB;QAErB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhD,0DAA0D;QAC1D,MAAM,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAE3D,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC5B,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,IAAI,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;gBACpD,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,wCAAwC;IACxC,KAAK,CAAC,WAAW,CACf,QAAoB,EACpB,UAAqC,QAAQ;QAE7C,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhD,uCAAuC;QACvC,MAAM,OAAO,GAAG;YACd,GAAG,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC/C,MAAM,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YACnD,IAAI,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE;SACnD,CAAC;QAEF,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,MAAM,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,uBAAuB;IACvB,KAAK,CAAC,YAAY,CAChB,QAAoB,EACpB,aAAqB,EACrB,UAKI,EAAE;QAEN,MAAM,EACJ,QAAQ,GAAG,EAAE,EACb,OAAO,GAAG,GAAG,EACb,QAAQ,GAAG,EAAE,EACb,KAAK,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EACnC,GAAG,OAAO,CAAC;QAEZ,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;YAE9C,qDAAqD;YACrD,MAAM,YAAY,GAAG,IAAA,0BAAkB,EAAC,QAAQ,CAAC,CAAC;YAClD,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACpD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAChC,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,uBAAa,CAAC,SAAS,CAAC,CAAC;YAE7D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;gBACzB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBACzC,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;gBAElE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;oBAC3B,CAAC,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC;oBAC1B,CAAC,EAAE,MAAM,GAAG,CAAC;oBACb,IAAI,EAAE,QAAQ;oBACd,IAAI;oBACJ,KAAK,EAAE,IAAA,aAAG,EAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;oBACrC,OAAO;oBACP,MAAM,EAAE,IAAA,iBAAO,EAAC,QAAQ,CAAC;iBAC1B,CAAC,CAAC;YACL,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YACnC,MAAM,UAAU,GAAG,IAAA,0BAAkB,EAAC,MAAM,CAAC,CAAC;YAE9C,OAAO,CAAC,GAAG,CAAC,qCAAqC,KAAK,CAAC,MAAM,QAAQ,CAAC,CAAC;YACvE,OAAO,UAAU,CAAC;QAEpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;YACtD,MAAM,IAAI,KAAK,CAAC,4BAA4B,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAED,2BAA2B;IAC3B,UAAU;QACR,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAExC,IAAI,CAAC;YACH,yBAAyB;YACzB,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;YACxD,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;YAChD,MAAM,IAAI,KAAK,CAAC,iCAAiC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAED,mBAAmB;IACnB,KAAK,CAAC,cAAc,CAClB,QAAoB,EACpB,UAKI,EAAE;QAEN,MAAM,EACJ,QAAQ,GAAG,eAAe,EAC1B,MAAM,GAAG,qBAAqB,EAC9B,QAAQ,GAAG,EAAE,EACb,MAAM,GAAG,EAAE,EACZ,GAAG,OAAO,CAAC;QAEZ,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,uBAAa,CAAC,SAAS,CAAC,CAAC;QAC7D,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;QAEhC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC5B,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACzC,MAAM,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC;YAC1B,MAAM,IAAI,GAAG,MAAM;iBAChB,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;iBAClC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAE7C,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAEzD,IAAI,CAAC,GAAG,MAAM,CAAC;YACf,IAAI,CAAC,GAAG,MAAM,CAAC;YAEf,qBAAqB;YACrB,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAChC,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;iBAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;gBACtC,CAAC,GAAG,KAAK,GAAG,SAAS,GAAG,MAAM,CAAC;YACjC,CAAC;YAED,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC7B,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;YACtB,CAAC;YAED,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBAClB,CAAC;gBACD,CAAC;gBACD,IAAI,EAAE,QAAQ;gBACd,IAAI;gBACJ,KAAK,EAAE,IAAA,aAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB;IACnB,KAAK,CAAC,WAAW,CAAC,QAAoB;QACpC,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhD,OAAO;YACL,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE;YACxB,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE;YAC1B,OAAO,EAAE,MAAM,CAAC,UAAU,EAAE;YAC5B,QAAQ,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE;YACnE,OAAO,EAAE,MAAM,CAAC,UAAU,EAAE;YAC5B,QAAQ,EAAE,MAAM,CAAC,WAAW,EAAE;YAC9B,YAAY,EAAE,MAAM,CAAC,eAAe,EAAE;YACtC,gBAAgB,EAAE,MAAM,CAAC,mBAAmB,EAAE;SAC/C,CAAC;IACJ,CAAC;IAED,mBAAmB;IACnB,KAAK,CAAC,WAAW,CACf,QAAoB,EACpB,QAAqB;QAErB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhD,IAAI,QAAQ,CAAC,KAAK;YAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,QAAQ,CAAC,MAAM;YAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,QAAQ,CAAC,OAAO;YAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtD,8CAA8C;YAC9C,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,QAAQ,CAAC,OAAO;YAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,QAAQ,CAAC,QAAQ;YAAE,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,QAAQ,CAAC,YAAY;YAAE,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACzE,IAAI,QAAQ,CAAC,gBAAgB;YAAE,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QAErF,OAAO,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,uBAAuB;IACvB,KAAK,CAAC,cAAc,CAAC,QAAoB;QACvC,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhD,4BAA4B;QAC5B,OAAO,MAAM,MAAM,CAAC,IAAI,CAAC;YACvB,gBAAgB,EAAE,KAAK;YACvB,cAAc,EAAE,KAAK;YACrB,cAAc,EAAE,GAAG;YACnB,sBAAsB,EAAE,IAAI;SAC7B,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;IACnB,KAAK,CAAC,QAAQ,CACZ,QAAoB,EACpB,UAAsB,EACtB,UAAkB,EAClB,OAMC;QAED,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QAE5C,IAAI,KAAe,CAAC;QAEpB,0CAA0C;QAC1C,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;YAC3C,OAAO;YACP,KAAK,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC;aAAM,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;YAClD,MAAM;YACN,KAAK,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;QACrD,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC;QACxC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC;QAE3C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACpB,CAAC,EAAE,OAAO,CAAC,CAAC;YACZ,CAAC,EAAE,OAAO,CAAC,CAAC;YACZ,KAAK;YACL,MAAM;YACN,OAAO,EAAE,OAAO,CAAC,OAAO,IAAI,CAAC;SAC9B,CAAC,CAAC;QAEH,OAAO,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,gBAAgB;IAChB,KAAK,CAAC,YAAY,CAChB,QAAoB,EACpB,QAAkB;QAElB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,YAAY,GAAG,MAAM,qBAAW,CAAC,MAAM,EAAE,CAAC;QAEhD,qCAAqC;QACrC,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC5D,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAElD,OAAO,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC;IACnC,CAAC;IAED,sBAAsB;IACtB,KAAK,CAAC,iBAAiB,CACrB,QAAoB,EACpB,UAAkB;QAElB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QAC5C,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAEpC,OAAO;YACL,KAAK;YACL,MAAM;YACN,QAAQ,EAAE,QAAQ,CAAC,KAAK;SACzB,CAAC;IACJ,CAAC;IAED,mCAAmC;IAEnC;;OAEG;IACH,KAAK,CAAC,SAAS,CACb,QAAoB,EACpB,QAAiE,EACjE,WAAsB;QAEtB,MAAM,MAAM,GAAG,MAAM,qBAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAEhC,MAAM,WAAW,GAAG,WAAW;YAC7B,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,KAAK,CAAC;QAEV,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY,CAChB,UAIE;QAEF,MAAM,OAAO,GAAiB,EAAE,CAAC;QAEjC,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;YACnC,IAAI,CAAC;gBACH,QAAQ,SAAS,CAAC,IAAI,EAAE,CAAC;oBACvB,KAAK,OAAO;wBACV,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;wBAC1D,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACrB,MAAM;oBAER,KAAK,QAAQ;wBACX,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,UAAU,EAAE,CAAC;4BACxC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CACpC,IAAI,EACJ,SAAS,CAAC,OAAO,EAAE,QAAQ,IAAI,EAAE,EACjC,SAAS,CAAC,OAAO,EAAE,WAAW,CAC/B,CAAC;4BACF,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACxB,CAAC;wBACD,MAAM;oBAER,KAAK,UAAU;wBACb,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,UAAU,EAAE,CAAC;4BACxC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,WAAW,CACvC,IAAI,EACJ,SAAS,CAAC,OAAO,EAAE,OAAO,IAAI,QAAQ,CACvC,CAAC;4BACF,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC3B,CAAC;wBACD,MAAM;oBAER,KAAK,WAAW;wBACd,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,UAAU,EAAE,CAAC;4BACxC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,YAAY,CACzC,IAAI,EACJ,SAAS,CAAC,OAAO,EAAE,IAAI,IAAI,WAAW,EACtC,SAAS,CAAC,OAAO,EAAE,OAAO,IAAI,EAAE,CACjC,CAAC;4BACF,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC5B,CAAC;wBACD,MAAM;oBAER;wBACE,OAAO,CAAC,IAAI,CAAC,gCAAgC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;wBAC/D,MAAM;gBACV,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,mBAAmB,SAAS,CAAC,IAAI,UAAU,EAAE,KAAK,CAAC,CAAC;gBAClE,iCAAiC;YACnC,CAAC;QACH,CAAC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AAhmBD,gCAgmBC",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts"],
      sourcesContent: ["import { PDFDocument, PDFPage, rgb, StandardFonts, degrees, PDFFont, PDFImage } from 'pdf-lib';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { PDFDocumentProxy } from 'pdfjs-dist/types/src/display/api';\nimport { loadPDFSafely, validatePDFBytes, createSafePDFBytes } from '../../common/utils';\n\ninterface PDFMetadata {\n  title?: string;\n  author?: string;\n  subject?: string;\n  keywords?: string[];\n  creator?: string;\n  producer?: string;\n  creationDate?: Date;\n  modificationDate?: Date;\n}\n\ninterface ExtractedPage {\n  pageNumber: number;\n  content: Uint8Array;\n}\n\nexport class PDFService {\n  private currentPDF: PDFDocument | null = null;\n  private originalBytes: Uint8Array | null = null;\n  private isModified: boolean = false;\n\n  constructor() {\n    // Note: Worker configuration is handled in index.tsx to avoid conflicts\n    // Just verify it's configured\n    if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {\n      console.warn('\u26A0\uFE0F PDF.js worker not configured - this may cause issues');\n    }\n  }\n\n  /**\n   * Set the current PDF document and track its state\n   */\n  setCurrentPDF(pdfDoc: PDFDocument, originalBytes: Uint8Array) {\n    this.currentPDF = pdfDoc;\n    this.originalBytes = createSafePDFBytes(originalBytes);\n    this.isModified = false;\n    console.log('\u2705 Current PDF set with safe byte tracking');\n  }\n\n  /**\n   * Get current PDF with validation\n   */\n  getCurrentPDF(): PDFDocument {\n    if (!this.currentPDF) {\n      throw new Error('No PDF document is currently loaded');\n    }\n    return this.currentPDF;\n  }\n\n  /**\n   * Mark document as modified for save tracking\n   */\n  markModified() {\n    this.isModified = true;\n    console.log('\uD83D\uDCDD PDF marked as modified');\n  }\n\n  /**\n   * Check if document has unsaved changes\n   */\n  hasUnsavedChanges(): boolean {\n    return this.isModified;\n  }\n\n  /**\n   * Save current PDF with byte-state synchronization and enhanced validation\n   */\n  async saveCurrentPDF(): Promise<Uint8Array> {\n    if (!this.currentPDF) {\n      throw new Error('No PDF document to save');\n    }\n\n    try {\n      console.log('\uD83D\uDCBE Saving PDF with byte-state sync and validation...');\n      \n      // Create safe save operation with proper byte handling\n      const savedBytes = await this.currentPDF.save();\n      console.log(`\uD83D\uDD0D PDF saved to buffer: ${savedBytes.byteLength} bytes`);\n      \n      // Validate the saved PDF data before processing\n      if (!validatePDFBytes(savedBytes)) {\n        throw new Error('PDF save operation produced invalid data - failed header validation');\n      }\n      \n      const safeBytes = createSafePDFBytes(savedBytes);\n      console.log(`\uD83D\uDD0D Safe bytes created: ${safeBytes.byteLength} bytes`);\n      \n      // Double-check the safe bytes are still valid\n      if (!validatePDFBytes(safeBytes)) {\n        throw new Error('Safe PDF bytes creation corrupted the data');\n      }\n      \n      // Update our tracked bytes and reset modified flag\n      this.originalBytes = createSafePDFBytes(safeBytes);\n      this.isModified = false;\n      \n      console.log(`\u2705 PDF saved and validated successfully: ${safeBytes.byteLength} bytes`);\n      return safeBytes;\n      \n    } catch (error) {\n      console.error('\u274C Save operation failed:', error.message);\n      console.error('\u274C Error details:', error);\n      throw new Error(`Failed to save PDF: ${error.message}`);\n    }\n  }\n\n  /**\n   * Load a PDF document from binary data using safe loading\n   * @param data PDF binary data\n   * @returns Promise with PDF document proxy\n   */\n  async loadPDF(data: Uint8Array): Promise<PDFDocumentProxy> {\n    try {\n      console.log('\uD83D\uDCC4 Loading PDF document with enhanced safety...');\n      \n      // Use the safe loading utility\n      const pdf = await loadPDFSafely(data);\n      return pdf;\n      \n    } catch (error) {\n      console.error('\u274C Error loading PDF:', error);\n      throw new Error(`Failed to load PDF document: ${error.message}`);\n    }\n  }\n\n  async createPDF(): Promise<PDFDocument> {\n    return await PDFDocument.create();\n  }\n\n  async copyPages(\n    sourcePdf: PDFDocument,\n    pageIndices: number[]\n  ): Promise<PDFPage[]> {\n    return await sourcePdf.copyPages(sourcePdf, pageIndices);\n  }\n\n  // Merge multiple PDFs into one\n  async mergePDFs(pdfBuffers: Uint8Array[]): Promise<Uint8Array> {\n    const mergedPdf = await PDFDocument.create();\n    \n    for (const buffer of pdfBuffers) {\n      const pdf = await PDFDocument.load(buffer);\n      const pages = await mergedPdf.copyPages(pdf, pdf.getPageIndices());\n      pages.forEach(page => mergedPdf.addPage(page));\n    }\n    \n    return await mergedPdf.save();\n  }\n\n  // Split PDF at specified page\n  async splitPDF(\n    pdfBytes: Uint8Array,\n    splitPage: number\n  ): Promise<{ first: Uint8Array; second: Uint8Array }> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const totalPages = pdfDoc.getPageCount();\n    \n    if (splitPage < 1 || splitPage >= totalPages) {\n      throw new Error('Invalid split page number');\n    }\n    \n    // Create first part\n    const firstPdf = await PDFDocument.create();\n    const firstPages = await firstPdf.copyPages(\n      pdfDoc,\n      Array.from({ length: splitPage }, (_, i) => i)\n    );\n    firstPages.forEach(page => firstPdf.addPage(page));\n    \n    // Create second part\n    const secondPdf = await PDFDocument.create();\n    const secondPages = await secondPdf.copyPages(\n      pdfDoc,\n      Array.from({ length: totalPages - splitPage }, (_, i) => i + splitPage)\n    );\n    secondPages.forEach(page => secondPdf.addPage(page));\n    \n    return {\n      first: await firstPdf.save(),\n      second: await secondPdf.save()\n    };\n  }\n\n  // Extract specific pages\n  async extractPages(\n    pdfBytes: Uint8Array,\n    pageNumbers: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const extractedPdf = await PDFDocument.create();\n    \n    // Convert page numbers to indices (0-based)\n    const indices = pageNumbers.map(num => num - 1);\n    const pages = await extractedPdf.copyPages(pdfDoc, indices);\n    pages.forEach(page => extractedPdf.addPage(page));\n    \n    return await extractedPdf.save();\n  }\n\n  // Rotate pages\n  async rotatePages(\n    pdfBytes: Uint8Array,\n    rotation: number,\n    pageNumbers?: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    \n    const targetPages = pageNumbers \n      ? pageNumbers.map(n => pages[n - 1])\n      : pages;\n    \n    targetPages.forEach(page => {\n      const currentRotation = page.getRotation();\n      page.setRotation(degrees(currentRotation.angle + rotation));\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Insert blank page\n  async insertBlankPage(\n    pdfBytes: Uint8Array,\n    afterPage: number,\n    width: number = 595.28, // A4 width in points\n    height: number = 841.89 // A4 height in points\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.insertPage(afterPage, [width, height]);\n    \n    // Add placeholder text\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    page.drawText('Blank Page', {\n      x: 50,\n      y: height - 50,\n      size: 10,\n      font,\n      color: rgb(0.8, 0.8, 0.8)\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Delete pages\n  async deletePages(\n    pdfBytes: Uint8Array,\n    pageNumbers: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Sort in descending order to avoid index shifting issues\n    const sortedPages = [...pageNumbers].sort((a, b) => b - a);\n    \n    sortedPages.forEach(pageNum => {\n      if (pageNum > 0 && pageNum <= pdfDoc.getPageCount()) {\n        pdfDoc.removePage(pageNum - 1);\n      }\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Compress PDF (simplified compression)\n  async compressPDF(\n    pdfBytes: Uint8Array,\n    quality: 'low' | 'medium' | 'high' = 'medium'\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Compression options based on quality\n    const options = {\n      low: { useObjectStreams: true, compress: true },\n      medium: { useObjectStreams: false, compress: true },\n      high: { useObjectStreams: false, compress: false }\n    };\n    \n    const saveOptions = options[quality];\n    return await pdfDoc.save(saveOptions);\n  }\n\n  // Add watermark to PDF\n  async addWatermark(\n    pdfBytes: Uint8Array,\n    watermarkText: string,\n    options: {\n      fontSize?: number;\n      opacity?: number;\n      rotation?: number;\n      color?: { r: number; g: number; b: number };\n    } = {}\n  ): Promise<Uint8Array> {\n    const {\n      fontSize = 50,\n      opacity = 0.3,\n      rotation = 45,\n      color = { r: 0.5, g: 0.5, b: 0.5 }\n    } = options;\n    \n    try {\n      console.log('\uD83C\uDFF7\uFE0F Adding watermark to PDF...');\n      \n      // Create safe copy to prevent ArrayBuffer detachment\n      const safePdfBytes = createSafePDFBytes(pdfBytes);\n      const pdfDoc = await PDFDocument.load(safePdfBytes);\n      const pages = pdfDoc.getPages();\n      const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n      \n      for (const page of pages) {\n        const { width, height } = page.getSize();\n        const textWidth = font.widthOfTextAtSize(watermarkText, fontSize);\n        \n        page.drawText(watermarkText, {\n          x: (width - textWidth) / 2,\n          y: height / 2,\n          size: fontSize,\n          font,\n          color: rgb(color.r, color.g, color.b),\n          opacity,\n          rotate: degrees(rotation)\n        });\n      }\n      \n      const result = await pdfDoc.save();\n      const safeResult = createSafePDFBytes(result);\n      \n      console.log(`\u2705 Watermark added successfully to ${pages.length} pages`);\n      return safeResult;\n      \n    } catch (error) {\n      console.error('\u274C Watermark operation failed:', error);\n      throw new Error(`Failed to add watermark: ${error.message}`);\n    }\n  }\n\n  // Create a form on the PDF\n  createForm() {\n    const currentPDF = this.getCurrentPDF();\n    \n    try {\n      // Get or create the form\n      const form = currentPDF.getForm();\n      this.markModified();\n      console.log('\u2705 PDF form accessed/created successfully');\n      return form;\n    } catch (error) {\n      console.error('\u274C Form creation failed:', error);\n      throw new Error(`Failed to create/access form: ${error.message}`);\n    }\n  }\n\n  // Add page numbers\n  async addPageNumbers(\n    pdfBytes: Uint8Array,\n    options: {\n      position?: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n      format?: string; // e.g., \"Page {n} of {total}\"\n      fontSize?: number;\n      margin?: number;\n    } = {}\n  ): Promise<Uint8Array> {\n    const {\n      position = 'bottom-center',\n      format = 'Page {n} of {total}',\n      fontSize = 10,\n      margin = 30\n    } = options;\n    \n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    const totalPages = pages.length;\n    \n    pages.forEach((page, index) => {\n      const { width, height } = page.getSize();\n      const pageNum = index + 1;\n      const text = format\n        .replace('{n}', pageNum.toString())\n        .replace('{total}', totalPages.toString());\n      \n      const textWidth = font.widthOfTextAtSize(text, fontSize);\n      \n      let x = margin;\n      let y = margin;\n      \n      // Calculate position\n      if (position.includes('center')) {\n        x = (width - textWidth) / 2;\n      } else if (position.includes('right')) {\n        x = width - textWidth - margin;\n      }\n      \n      if (position.includes('top')) {\n        y = height - margin;\n      }\n      \n      page.drawText(text, {\n        x,\n        y,\n        size: fontSize,\n        font,\n        color: rgb(0, 0, 0)\n      });\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Get PDF metadata\n  async getMetadata(pdfBytes: Uint8Array): Promise<PDFMetadata> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    return {\n      title: pdfDoc.getTitle(),\n      author: pdfDoc.getAuthor(),\n      subject: pdfDoc.getSubject(),\n      keywords: pdfDoc.getKeywords()?.split(',').map(k => k.trim()) || [],\n      creator: pdfDoc.getCreator(),\n      producer: pdfDoc.getProducer(),\n      creationDate: pdfDoc.getCreationDate(),\n      modificationDate: pdfDoc.getModificationDate()\n    };\n  }\n\n  // Set PDF metadata\n  async setMetadata(\n    pdfBytes: Uint8Array,\n    metadata: PDFMetadata\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    if (metadata.title) pdfDoc.setTitle(metadata.title);\n    if (metadata.author) pdfDoc.setAuthor(metadata.author);\n    if (metadata.subject) pdfDoc.setSubject(metadata.subject);\n    if (metadata.keywords && metadata.keywords.length > 0) {\n      // setKeywords expects string array in pdf-lib\n      pdfDoc.setKeywords(metadata.keywords);\n    }\n    if (metadata.creator) pdfDoc.setCreator(metadata.creator);\n    if (metadata.producer) pdfDoc.setProducer(metadata.producer);\n    if (metadata.creationDate) pdfDoc.setCreationDate(metadata.creationDate);\n    if (metadata.modificationDate) pdfDoc.setModificationDate(metadata.modificationDate);\n    \n    return await pdfDoc.save();\n  }\n\n  // Optimize PDF for web\n  async optimizeForWeb(pdfBytes: Uint8Array): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Web optimization settings\n    return await pdfDoc.save({\n      useObjectStreams: false,\n      addDefaultPage: false,\n      objectsPerTick: 200,\n      updateFieldAppearances: true\n    });\n  }\n\n  // Add image to PDF\n  async addImage(\n    pdfBytes: Uint8Array,\n    imageBytes: Uint8Array,\n    pageNumber: number,\n    options: {\n      x: number;\n      y: number;\n      width?: number;\n      height?: number;\n      opacity?: number;\n    }\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.getPage(pageNumber - 1);\n    \n    let image: PDFImage;\n    \n    // Detect image type and embed accordingly\n    const uint8 = new Uint8Array(imageBytes);\n    if (uint8[0] === 0xFF && uint8[1] === 0xD8) {\n      // JPEG\n      image = await pdfDoc.embedJpg(imageBytes);\n    } else if (uint8[0] === 0x89 && uint8[1] === 0x50) {\n      // PNG\n      image = await pdfDoc.embedPng(imageBytes);\n    } else {\n      throw new Error('Unsupported image format');\n    }\n    \n    const { width: imgWidth, height: imgHeight } = image;\n    const width = options.width || imgWidth;\n    const height = options.height || imgHeight;\n    \n    page.drawImage(image, {\n      x: options.x,\n      y: options.y,\n      width,\n      height,\n      opacity: options.opacity || 1\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Reorder pages\n  async reorderPages(\n    pdfBytes: Uint8Array,\n    newOrder: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const reorderedPdf = await PDFDocument.create();\n    \n    // Convert 1-based to 0-based indices\n    const indices = newOrder.map(n => n - 1);\n    const pages = await reorderedPdf.copyPages(pdfDoc, indices);\n    pages.forEach(page => reorderedPdf.addPage(page));\n    \n    return await reorderedPdf.save();\n  }\n\n  // Get page dimensions\n  async getPageDimensions(\n    pdfBytes: Uint8Array,\n    pageNumber: number\n  ): Promise<{ width: number; height: number; rotation: number }> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.getPage(pageNumber - 1);\n    const { width, height } = page.getSize();\n    const rotation = page.getRotation();\n    \n    return {\n      width,\n      height,\n      rotation: rotation.angle\n    };\n  }\n\n  // Advanced page manipulation tools\n  \n  /**\n   * Crop pages to specified dimensions\n   */\n  async cropPages(\n    pdfBytes: Uint8Array,\n    cropArea: { x: number; y: number; width: number; height: number },\n    pageNumbers?: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    \n    const targetPages = pageNumbers \n      ? pageNumbers.map(n => pages[n - 1]).filter(p => p)\n      : pages;\n    \n    targetPages.forEach(page => {\n      page.setCropBox(cropArea.x, cropArea.y, cropArea.width, cropArea.height);\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  /**\n   * Batch process multiple PDFs\n   */\n  async batchProcess(\n    operations: Array<{\n      type: 'merge' | 'split' | 'rotate' | 'compress' | 'watermark';\n      inputFiles: Uint8Array[];\n      options?: any;\n    }>\n  ): Promise<Uint8Array[]> {\n    const results: Uint8Array[] = [];\n    \n    for (const operation of operations) {\n      try {\n        switch (operation.type) {\n          case 'merge':\n            const merged = await this.mergePDFs(operation.inputFiles);\n            results.push(merged);\n            break;\n            \n          case 'rotate':\n            for (const file of operation.inputFiles) {\n              const rotated = await this.rotatePages(\n                file,\n                operation.options?.rotation || 90,\n                operation.options?.pageNumbers\n              );\n              results.push(rotated);\n            }\n            break;\n            \n          case 'compress':\n            for (const file of operation.inputFiles) {\n              const compressed = await this.compressPDF(\n                file,\n                operation.options?.quality || 'medium'\n              );\n              results.push(compressed);\n            }\n            break;\n            \n          case 'watermark':\n            for (const file of operation.inputFiles) {\n              const watermarked = await this.addWatermark(\n                file,\n                operation.options?.text || 'WATERMARK',\n                operation.options?.options || {}\n              );\n              results.push(watermarked);\n            }\n            break;\n            \n          default:\n            console.warn(`Unsupported batch operation: ${operation.type}`);\n            break;\n        }\n      } catch (error) {\n        console.error(`Batch operation ${operation.type} failed:`, error);\n        // Continue with other operations\n      }\n    }\n    \n    return results;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "57ed0c73e338c97e807235e0087872e5de4f3477"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fumnfmdy7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fumnfmdy7();
var __createBinding =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[0]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fumnfmdy7().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[0]++;
  cov_2fumnfmdy7().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[2][0]++;
    cov_2fumnfmdy7().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2fumnfmdy7().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[5][1]++,
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[3][0]++;
    cov_2fumnfmdy7().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[1]++;
        cov_2fumnfmdy7().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[3][1]++;
  }
  cov_2fumnfmdy7().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2fumnfmdy7().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[2]++;
  cov_2fumnfmdy7().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[7][0]++;
    cov_2fumnfmdy7().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[7][1]++;
  }
  cov_2fumnfmdy7().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[11]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fumnfmdy7().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[3]++;
  cov_2fumnfmdy7().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2fumnfmdy7().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[4]++;
  cov_2fumnfmdy7().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[14]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[5]++;
  cov_2fumnfmdy7().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[6]++;
    cov_2fumnfmdy7().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[17]++, []);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[12][0]++;
          cov_2fumnfmdy7().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2fumnfmdy7().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[8]++;
    cov_2fumnfmdy7().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[13][0]++;
      cov_2fumnfmdy7().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[26]++, {});
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[15][0]++;
      cov_2fumnfmdy7().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[16][0]++;
          cov_2fumnfmdy7().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[15][1]++;
    }
    cov_2fumnfmdy7().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2fumnfmdy7().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fumnfmdy7().s[36]++;
exports.PDFService = void 0;
const pdf_lib_1 =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[37]++, require("pdf-lib"));
const pdfjsLib =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[38]++, __importStar(require("pdfjs-dist")));
const utils_1 =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[39]++, require("../../common/utils"));
class PDFService {
  currentPDF =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[40]++, null);
  originalBytes =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[41]++, null);
  isModified =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[42]++, false);
  constructor() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[9]++;
    cov_2fumnfmdy7().s[43]++;
    // Note: Worker configuration is handled in index.tsx to avoid conflicts
    // Just verify it's configured
    if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[17][0]++;
      cov_2fumnfmdy7().s[44]++;
      console.warn('⚠️ PDF.js worker not configured - this may cause issues');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[17][1]++;
    }
  }
  /**
   * Set the current PDF document and track its state
   */
  setCurrentPDF(pdfDoc, originalBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[10]++;
    cov_2fumnfmdy7().s[45]++;
    this.currentPDF = pdfDoc;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[46]++;
    this.originalBytes = (0, utils_1.createSafePDFBytes)(originalBytes);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[47]++;
    this.isModified = false;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[48]++;
    console.log('✅ Current PDF set with safe byte tracking');
  }
  /**
   * Get current PDF with validation
   */
  getCurrentPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[11]++;
    cov_2fumnfmdy7().s[49]++;
    if (!this.currentPDF) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[18][0]++;
      cov_2fumnfmdy7().s[50]++;
      throw new Error('No PDF document is currently loaded');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[18][1]++;
    }
    cov_2fumnfmdy7().s[51]++;
    return this.currentPDF;
  }
  /**
   * Mark document as modified for save tracking
   */
  markModified() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[12]++;
    cov_2fumnfmdy7().s[52]++;
    this.isModified = true;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[53]++;
    console.log('📝 PDF marked as modified');
  }
  /**
   * Check if document has unsaved changes
   */
  hasUnsavedChanges() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[13]++;
    cov_2fumnfmdy7().s[54]++;
    return this.isModified;
  }
  /**
   * Save current PDF with byte-state synchronization and enhanced validation
   */
  async saveCurrentPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[14]++;
    cov_2fumnfmdy7().s[55]++;
    if (!this.currentPDF) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[19][0]++;
      cov_2fumnfmdy7().s[56]++;
      throw new Error('No PDF document to save');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[19][1]++;
    }
    cov_2fumnfmdy7().s[57]++;
    try {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[58]++;
      console.log('💾 Saving PDF with byte-state sync and validation...');
      // Create safe save operation with proper byte handling
      const savedBytes =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[59]++, await this.currentPDF.save());
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[60]++;
      console.log(`🔍 PDF saved to buffer: ${savedBytes.byteLength} bytes`);
      // Validate the saved PDF data before processing
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[61]++;
      if (!(0, utils_1.validatePDFBytes)(savedBytes)) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[20][0]++;
        cov_2fumnfmdy7().s[62]++;
        throw new Error('PDF save operation produced invalid data - failed header validation');
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[20][1]++;
      }
      const safeBytes =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[63]++, (0, utils_1.createSafePDFBytes)(savedBytes));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[64]++;
      console.log(`🔍 Safe bytes created: ${safeBytes.byteLength} bytes`);
      // Double-check the safe bytes are still valid
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[65]++;
      if (!(0, utils_1.validatePDFBytes)(safeBytes)) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[21][0]++;
        cov_2fumnfmdy7().s[66]++;
        throw new Error('Safe PDF bytes creation corrupted the data');
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[21][1]++;
      }
      // Update our tracked bytes and reset modified flag
      cov_2fumnfmdy7().s[67]++;
      this.originalBytes = (0, utils_1.createSafePDFBytes)(safeBytes);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[68]++;
      this.isModified = false;
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[69]++;
      console.log(`✅ PDF saved and validated successfully: ${safeBytes.byteLength} bytes`);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[70]++;
      return safeBytes;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[71]++;
      console.error('❌ Save operation failed:', error.message);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[72]++;
      console.error('❌ Error details:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[73]++;
      throw new Error(`Failed to save PDF: ${error.message}`);
    }
  }
  /**
   * Load a PDF document from binary data using safe loading
   * @param data PDF binary data
   * @returns Promise with PDF document proxy
   */
  async loadPDF(data) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[15]++;
    cov_2fumnfmdy7().s[74]++;
    try {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[75]++;
      console.log('📄 Loading PDF document with enhanced safety...');
      // Use the safe loading utility
      const pdf =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[76]++, await (0, utils_1.loadPDFSafely)(data));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[77]++;
      return pdf;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[78]++;
      console.error('❌ Error loading PDF:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[79]++;
      throw new Error(`Failed to load PDF document: ${error.message}`);
    }
  }
  async createPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[16]++;
    cov_2fumnfmdy7().s[80]++;
    return await pdf_lib_1.PDFDocument.create();
  }
  async copyPages(sourcePdf, pageIndices) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[17]++;
    cov_2fumnfmdy7().s[81]++;
    return await sourcePdf.copyPages(sourcePdf, pageIndices);
  }
  // Merge multiple PDFs into one
  async mergePDFs(pdfBuffers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[18]++;
    const mergedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[82]++, await pdf_lib_1.PDFDocument.create());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[83]++;
    for (const buffer of pdfBuffers) {
      const pdf =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[84]++, await pdf_lib_1.PDFDocument.load(buffer));
      const pages =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[85]++, await mergedPdf.copyPages(pdf, pdf.getPageIndices()));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[86]++;
      pages.forEach(page => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[19]++;
        cov_2fumnfmdy7().s[87]++;
        return mergedPdf.addPage(page);
      });
    }
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[88]++;
    return await mergedPdf.save();
  }
  // Split PDF at specified page
  async splitPDF(pdfBytes, splitPage) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[20]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[89]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const totalPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[90]++, pdfDoc.getPageCount());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[91]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[23][0]++, splitPage < 1) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[23][1]++, splitPage >= totalPages)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[22][0]++;
      cov_2fumnfmdy7().s[92]++;
      throw new Error('Invalid split page number');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[22][1]++;
    }
    // Create first part
    const firstPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[93]++, await pdf_lib_1.PDFDocument.create());
    const firstPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[94]++, await firstPdf.copyPages(pdfDoc, Array.from({
      length: splitPage
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[21]++;
      cov_2fumnfmdy7().s[95]++;
      return i;
    })));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[96]++;
    firstPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[22]++;
      cov_2fumnfmdy7().s[97]++;
      return firstPdf.addPage(page);
    });
    // Create second part
    const secondPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[98]++, await pdf_lib_1.PDFDocument.create());
    const secondPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[99]++, await secondPdf.copyPages(pdfDoc, Array.from({
      length: totalPages - splitPage
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[23]++;
      cov_2fumnfmdy7().s[100]++;
      return i + splitPage;
    })));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[101]++;
    secondPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[24]++;
      cov_2fumnfmdy7().s[102]++;
      return secondPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[103]++;
    return {
      first: await firstPdf.save(),
      second: await secondPdf.save()
    };
  }
  // Extract specific pages
  async extractPages(pdfBytes, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[25]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[104]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const extractedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[105]++, await pdf_lib_1.PDFDocument.create());
    // Convert page numbers to indices (0-based)
    const indices =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[106]++, pageNumbers.map(num => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[26]++;
      cov_2fumnfmdy7().s[107]++;
      return num - 1;
    }));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[108]++, await extractedPdf.copyPages(pdfDoc, indices));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[109]++;
    pages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[27]++;
      cov_2fumnfmdy7().s[110]++;
      return extractedPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[111]++;
    return await extractedPdf.save();
  }
  // Rotate pages
  async rotatePages(pdfBytes, rotation, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[28]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[112]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[113]++, pdfDoc.getPages());
    const targetPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[114]++, pageNumbers ?
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[24][0]++, pageNumbers.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[29]++;
      cov_2fumnfmdy7().s[115]++;
      return pages[n - 1];
    })) :
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[24][1]++, pages));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[116]++;
    targetPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[30]++;
      const currentRotation =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[117]++, page.getRotation());
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[118]++;
      page.setRotation((0, pdf_lib_1.degrees)(currentRotation.angle + rotation));
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[119]++;
    return await pdfDoc.save();
  }
  // Insert blank page
  async insertBlankPage(pdfBytes, afterPage, width =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[25][0]++, 595.28),
  // A4 width in points
  height =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[26][0]++, 841.89) // A4 height in points
  ) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[31]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[120]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[121]++, pdfDoc.insertPage(afterPage, [width, height]));
    // Add placeholder text
    const font =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[122]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[123]++;
    page.drawText('Blank Page', {
      x: 50,
      y: height - 50,
      size: 10,
      font,
      color: (0, pdf_lib_1.rgb)(0.8, 0.8, 0.8)
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[124]++;
    return await pdfDoc.save();
  }
  // Delete pages
  async deletePages(pdfBytes, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[32]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[125]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Sort in descending order to avoid index shifting issues
    const sortedPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[126]++, [...pageNumbers].sort((a, b) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[33]++;
      cov_2fumnfmdy7().s[127]++;
      return b - a;
    }));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[128]++;
    sortedPages.forEach(pageNum => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[34]++;
      cov_2fumnfmdy7().s[129]++;
      if (
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[28][0]++, pageNum > 0) &&
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[28][1]++, pageNum <= pdfDoc.getPageCount())) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[27][0]++;
        cov_2fumnfmdy7().s[130]++;
        pdfDoc.removePage(pageNum - 1);
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[27][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[131]++;
    return await pdfDoc.save();
  }
  // Compress PDF (simplified compression)
  async compressPDF(pdfBytes, quality =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[29][0]++, 'medium')) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[35]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[132]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Compression options based on quality
    const options =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[133]++, {
      low: {
        useObjectStreams: true,
        compress: true
      },
      medium: {
        useObjectStreams: false,
        compress: true
      },
      high: {
        useObjectStreams: false,
        compress: false
      }
    });
    const saveOptions =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[134]++, options[quality]);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[135]++;
    return await pdfDoc.save(saveOptions);
  }
  // Add watermark to PDF
  async addWatermark(pdfBytes, watermarkText, options =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[30][0]++, {})) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[36]++;
    const {
      fontSize =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[31][0]++, 50),
      opacity =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[32][0]++, 0.3),
      rotation =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[33][0]++, 45),
      color =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[34][0]++, {
        r: 0.5,
        g: 0.5,
        b: 0.5
      })
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[136]++, options);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[137]++;
    try {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[138]++;
      console.log('🏷️ Adding watermark to PDF...');
      // Create safe copy to prevent ArrayBuffer detachment
      const safePdfBytes =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[139]++, (0, utils_1.createSafePDFBytes)(pdfBytes));
      const pdfDoc =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[140]++, await pdf_lib_1.PDFDocument.load(safePdfBytes));
      const pages =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[141]++, pdfDoc.getPages());
      const font =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[142]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[143]++;
      for (const page of pages) {
        const {
          width,
          height
        } =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[144]++, page.getSize());
        const textWidth =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[145]++, font.widthOfTextAtSize(watermarkText, fontSize));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[146]++;
        page.drawText(watermarkText, {
          x: (width - textWidth) / 2,
          y: height / 2,
          size: fontSize,
          font,
          color: (0, pdf_lib_1.rgb)(color.r, color.g, color.b),
          opacity,
          rotate: (0, pdf_lib_1.degrees)(rotation)
        });
      }
      const result =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[147]++, await pdfDoc.save());
      const safeResult =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[148]++, (0, utils_1.createSafePDFBytes)(result));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[149]++;
      console.log(`✅ Watermark added successfully to ${pages.length} pages`);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[150]++;
      return safeResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[151]++;
      console.error('❌ Watermark operation failed:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[152]++;
      throw new Error(`Failed to add watermark: ${error.message}`);
    }
  }
  // Create a form on the PDF
  createForm() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[37]++;
    const currentPDF =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[153]++, this.getCurrentPDF());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[154]++;
    try {
      // Get or create the form
      const form =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[155]++, currentPDF.getForm());
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[156]++;
      this.markModified();
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[157]++;
      console.log('✅ PDF form accessed/created successfully');
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[158]++;
      return form;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[159]++;
      console.error('❌ Form creation failed:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[160]++;
      throw new Error(`Failed to create/access form: ${error.message}`);
    }
  }
  // Add page numbers
  async addPageNumbers(pdfBytes, options =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[35][0]++, {})) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[38]++;
    const {
      position =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[36][0]++, 'bottom-center'),
      format =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[37][0]++, 'Page {n} of {total}'),
      fontSize =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[38][0]++, 10),
      margin =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[39][0]++, 30)
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[161]++, options);
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[162]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[163]++, pdfDoc.getPages());
    const font =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[164]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    const totalPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[165]++, pages.length);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[166]++;
    pages.forEach((page, index) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[39]++;
      const {
        width,
        height
      } =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[167]++, page.getSize());
      const pageNum =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[168]++, index + 1);
      const text =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[169]++, format.replace('{n}', pageNum.toString()).replace('{total}', totalPages.toString()));
      const textWidth =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[170]++, font.widthOfTextAtSize(text, fontSize));
      let x =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[171]++, margin);
      let y =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[172]++, margin);
      // Calculate position
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[173]++;
      if (position.includes('center')) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[40][0]++;
        cov_2fumnfmdy7().s[174]++;
        x = (width - textWidth) / 2;
      } else {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[40][1]++;
        cov_2fumnfmdy7().s[175]++;
        if (position.includes('right')) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[41][0]++;
          cov_2fumnfmdy7().s[176]++;
          x = width - textWidth - margin;
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[41][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[177]++;
      if (position.includes('top')) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[42][0]++;
        cov_2fumnfmdy7().s[178]++;
        y = height - margin;
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[42][1]++;
      }
      cov_2fumnfmdy7().s[179]++;
      page.drawText(text, {
        x,
        y,
        size: fontSize,
        font,
        color: (0, pdf_lib_1.rgb)(0, 0, 0)
      });
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[180]++;
    return await pdfDoc.save();
  }
  // Get PDF metadata
  async getMetadata(pdfBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[40]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[181]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[182]++;
    return {
      title: pdfDoc.getTitle(),
      author: pdfDoc.getAuthor(),
      subject: pdfDoc.getSubject(),
      keywords:
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[43][0]++, pdfDoc.getKeywords()?.split(',').map(k => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[41]++;
        cov_2fumnfmdy7().s[183]++;
        return k.trim();
      })) ||
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[43][1]++, []),
      creator: pdfDoc.getCreator(),
      producer: pdfDoc.getProducer(),
      creationDate: pdfDoc.getCreationDate(),
      modificationDate: pdfDoc.getModificationDate()
    };
  }
  // Set PDF metadata
  async setMetadata(pdfBytes, metadata) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[42]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[184]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[185]++;
    if (metadata.title) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[44][0]++;
      cov_2fumnfmdy7().s[186]++;
      pdfDoc.setTitle(metadata.title);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[44][1]++;
    }
    cov_2fumnfmdy7().s[187]++;
    if (metadata.author) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[45][0]++;
      cov_2fumnfmdy7().s[188]++;
      pdfDoc.setAuthor(metadata.author);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[45][1]++;
    }
    cov_2fumnfmdy7().s[189]++;
    if (metadata.subject) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[46][0]++;
      cov_2fumnfmdy7().s[190]++;
      pdfDoc.setSubject(metadata.subject);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[46][1]++;
    }
    cov_2fumnfmdy7().s[191]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[48][0]++, metadata.keywords) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[48][1]++, metadata.keywords.length > 0)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[47][0]++;
      cov_2fumnfmdy7().s[192]++;
      // setKeywords expects string array in pdf-lib
      pdfDoc.setKeywords(metadata.keywords);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[47][1]++;
    }
    cov_2fumnfmdy7().s[193]++;
    if (metadata.creator) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[49][0]++;
      cov_2fumnfmdy7().s[194]++;
      pdfDoc.setCreator(metadata.creator);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[49][1]++;
    }
    cov_2fumnfmdy7().s[195]++;
    if (metadata.producer) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[50][0]++;
      cov_2fumnfmdy7().s[196]++;
      pdfDoc.setProducer(metadata.producer);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[50][1]++;
    }
    cov_2fumnfmdy7().s[197]++;
    if (metadata.creationDate) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[51][0]++;
      cov_2fumnfmdy7().s[198]++;
      pdfDoc.setCreationDate(metadata.creationDate);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[51][1]++;
    }
    cov_2fumnfmdy7().s[199]++;
    if (metadata.modificationDate) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[52][0]++;
      cov_2fumnfmdy7().s[200]++;
      pdfDoc.setModificationDate(metadata.modificationDate);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[52][1]++;
    }
    cov_2fumnfmdy7().s[201]++;
    return await pdfDoc.save();
  }
  // Optimize PDF for web
  async optimizeForWeb(pdfBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[43]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[202]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Web optimization settings
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[203]++;
    return await pdfDoc.save({
      useObjectStreams: false,
      addDefaultPage: false,
      objectsPerTick: 200,
      updateFieldAppearances: true
    });
  }
  // Add image to PDF
  async addImage(pdfBytes, imageBytes, pageNumber, options) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[44]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[204]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[205]++, pdfDoc.getPage(pageNumber - 1));
    let image;
    // Detect image type and embed accordingly
    const uint8 =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[206]++, new Uint8Array(imageBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[207]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[54][0]++, uint8[0] === 0xFF) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[54][1]++, uint8[1] === 0xD8)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[53][0]++;
      cov_2fumnfmdy7().s[208]++;
      // JPEG
      image = await pdfDoc.embedJpg(imageBytes);
    } else {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[53][1]++;
      cov_2fumnfmdy7().s[209]++;
      if (
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[56][0]++, uint8[0] === 0x89) &&
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[56][1]++, uint8[1] === 0x50)) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[55][0]++;
        cov_2fumnfmdy7().s[210]++;
        // PNG
        image = await pdfDoc.embedPng(imageBytes);
      } else {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[55][1]++;
        cov_2fumnfmdy7().s[211]++;
        throw new Error('Unsupported image format');
      }
    }
    const {
      width: imgWidth,
      height: imgHeight
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[212]++, image);
    const width =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[213]++,
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[57][0]++, options.width) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[57][1]++, imgWidth));
    const height =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[214]++,
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[58][0]++, options.height) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[58][1]++, imgHeight));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[215]++;
    page.drawImage(image, {
      x: options.x,
      y: options.y,
      width,
      height,
      opacity:
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[59][0]++, options.opacity) ||
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[59][1]++, 1)
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[216]++;
    return await pdfDoc.save();
  }
  // Reorder pages
  async reorderPages(pdfBytes, newOrder) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[45]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[217]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const reorderedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[218]++, await pdf_lib_1.PDFDocument.create());
    // Convert 1-based to 0-based indices
    const indices =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[219]++, newOrder.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[46]++;
      cov_2fumnfmdy7().s[220]++;
      return n - 1;
    }));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[221]++, await reorderedPdf.copyPages(pdfDoc, indices));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[222]++;
    pages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[47]++;
      cov_2fumnfmdy7().s[223]++;
      return reorderedPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[224]++;
    return await reorderedPdf.save();
  }
  // Get page dimensions
  async getPageDimensions(pdfBytes, pageNumber) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[48]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[225]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[226]++, pdfDoc.getPage(pageNumber - 1));
    const {
      width,
      height
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[227]++, page.getSize());
    const rotation =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[228]++, page.getRotation());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[229]++;
    return {
      width,
      height,
      rotation: rotation.angle
    };
  }
  // Advanced page manipulation tools
  /**
   * Crop pages to specified dimensions
   */
  async cropPages(pdfBytes, cropArea, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[49]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[230]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[231]++, pdfDoc.getPages());
    const targetPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[232]++, pageNumbers ?
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[60][0]++, pageNumbers.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[50]++;
      cov_2fumnfmdy7().s[233]++;
      return pages[n - 1];
    }).filter(p => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[51]++;
      cov_2fumnfmdy7().s[234]++;
      return p;
    })) :
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[60][1]++, pages));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[235]++;
    targetPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[52]++;
      cov_2fumnfmdy7().s[236]++;
      page.setCropBox(cropArea.x, cropArea.y, cropArea.width, cropArea.height);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[237]++;
    return await pdfDoc.save();
  }
  /**
   * Batch process multiple PDFs
   */
  async batchProcess(operations) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[53]++;
    const results =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[238]++, []);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[239]++;
    for (const operation of operations) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[240]++;
      try {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[241]++;
        switch (operation.type) {
          case 'merge':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[61][0]++;
            const merged =
            /* istanbul ignore next */
            (cov_2fumnfmdy7().s[242]++, await this.mergePDFs(operation.inputFiles));
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[243]++;
            results.push(merged);
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[244]++;
            break;
          case 'rotate':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[61][1]++;
            cov_2fumnfmdy7().s[245]++;
            for (const file of operation.inputFiles) {
              const rotated =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[246]++, await this.rotatePages(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[62][0]++, operation.options?.rotation) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[62][1]++, 90), operation.options?.pageNumbers));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[247]++;
              results.push(rotated);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[248]++;
            break;
          case 'compress':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[61][2]++;
            cov_2fumnfmdy7().s[249]++;
            for (const file of operation.inputFiles) {
              const compressed =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[250]++, await this.compressPDF(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[63][0]++, operation.options?.quality) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[63][1]++, 'medium')));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[251]++;
              results.push(compressed);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[252]++;
            break;
          case 'watermark':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[61][3]++;
            cov_2fumnfmdy7().s[253]++;
            for (const file of operation.inputFiles) {
              const watermarked =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[254]++, await this.addWatermark(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[64][0]++, operation.options?.text) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[64][1]++, 'WATERMARK'),
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[65][0]++, operation.options?.options) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[65][1]++, {})));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[255]++;
              results.push(watermarked);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[256]++;
            break;
          default:
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[61][4]++;
            cov_2fumnfmdy7().s[257]++;
            console.warn(`Unsupported batch operation: ${operation.type}`);
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[258]++;
            break;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[259]++;
        console.error(`Batch operation ${operation.type} failed:`, error);
        // Continue with other operations
      }
    }
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[260]++;
    return results;
  }
}
/* istanbul ignore next */
cov_2fumnfmdy7().s[261]++;
exports.PDFService = PDFService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,