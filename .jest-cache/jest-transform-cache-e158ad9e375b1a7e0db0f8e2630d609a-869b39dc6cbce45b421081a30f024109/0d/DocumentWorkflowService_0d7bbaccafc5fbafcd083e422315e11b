15af8ac1890c5ab454d66122a090bf88
"use strict";

/* istanbul ignore next */
function cov_jb0hfw6uy() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DocumentWorkflowService.ts";
  var hash = "2cfd24b95d724f8a5ee57e8101d366c2dce98cd2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DocumentWorkflowService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 41
        }
      },
      "2": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 25
        }
      },
      "3": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "4": {
        start: {
          line: 7,
          column: 12
        },
        end: {
          line: 7,
          column: 21
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "8": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 55
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "10": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 64
        }
      },
      "11": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "12": {
        start: {
          line: 31,
          column: 56
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "13": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 50
        }
      },
      "14": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "15": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 55
        }
      },
      "16": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "17": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 64
        }
      },
      "18": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "19": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 63
        }
      },
      "20": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "21": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 40
        }
      },
      "22": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "23": {
        start: {
          line: 77,
          column: 30
        },
        end: {
          line: 77,
          column: 47
        }
      },
      "24": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 45
        }
      },
      "25": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 45
        }
      },
      "26": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 64
        }
      },
      "27": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "28": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "29": {
        start: {
          line: 97,
          column: 25
        },
        end: {
          line: 97,
          column: 55
        }
      },
      "30": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "31": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 64
        }
      },
      "32": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 62
        }
      },
      "33": {
        start: {
          line: 101,
          column: 46
        },
        end: {
          line: 101,
          column: 61
        }
      },
      "34": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "35": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "36": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "37": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 55
        }
      },
      "38": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "39": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 84
        }
      },
      "40": {
        start: {
          line: 113,
          column: 31
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "41": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 42
        }
      },
      "42": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 40
        }
      },
      "43": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 65
        }
      },
      "44": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "45": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 52
        }
      },
      "46": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 49
        }
      },
      "47": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 54
        }
      },
      "48": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 142,
          column: 50
        }
      },
      "49": {
        start: {
          line: 138,
          column: 70
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "50": {
        start: {
          line: 139,
          column: 44
        },
        end: {
          line: 139,
          column: 63
        }
      },
      "51": {
        start: {
          line: 140,
          column: 40
        },
        end: {
          line: 142,
          column: 47
        }
      },
      "52": {
        start: {
          line: 148,
          column: 22
        },
        end: {
          line: 148,
          column: 24
        }
      },
      "53": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "54": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "55": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 77
        }
      },
      "56": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 158,
          column: 17
        }
      },
      "57": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 157,
          column: 21
        }
      },
      "58": {
        start: {
          line: 156,
          column: 24
        },
        end: {
          line: 156,
          column: 68
        }
      },
      "59": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 21
        }
      },
      "60": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 167,
          column: 55
        }
      },
      "61": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "62": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 64
        }
      },
      "63": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 62
        }
      },
      "64": {
        start: {
          line: 171,
          column: 46
        },
        end: {
          line: 171,
          column: 61
        }
      },
      "65": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "66": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "67": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "68": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 71
        }
      },
      "69": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 179,
          column: 84
        }
      },
      "70": {
        start: {
          line: 179,
          column: 60
        },
        end: {
          line: 179,
          column: 83
        }
      },
      "71": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "72": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 47
        }
      },
      "73": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "74": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "75": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 212,
          column: 11
        }
      },
      "76": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "77": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "78": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      },
      "79": {
        start: {
          line: 250,
          column: 25
        },
        end: {
          line: 250,
          column: 55
        }
      },
      "80": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 37
        }
      },
      "81": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 40
        }
      },
      "82": {
        start: {
          line: 258,
          column: 33
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "83": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 66
        }
      },
      "84": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 32
        }
      },
      "85": {
        start: {
          line: 270,
          column: 26
        },
        end: {
          line: 270,
          column: 61
        }
      },
      "86": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "87": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 66
        }
      },
      "88": {
        start: {
          line: 272,
          column: 41
        },
        end: {
          line: 272,
          column: 64
        }
      },
      "89": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 25
        }
      },
      "90": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "91": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 66
        }
      },
      "92": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 22
        }
      },
      "93": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 67
        }
      },
      "94": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 22
        }
      },
      "95": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 67
        }
      },
      "96": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 22
        }
      },
      "97": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 22
        }
      },
      "98": {
        start: {
          line: 294,
          column: 26
        },
        end: {
          line: 294,
          column: 79
        }
      },
      "99": {
        start: {
          line: 294,
          column: 51
        },
        end: {
          line: 294,
          column: 71
        }
      },
      "100": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "101": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 38
        }
      },
      "102": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 42
        }
      },
      "103": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 72
        }
      },
      "104": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 33
        }
      },
      "105": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 37
        }
      },
      "106": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 68
        }
      },
      "107": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 314,
          column: 9
        }
      },
      "108": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 38
        }
      },
      "109": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 42
        }
      },
      "110": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 70
        }
      },
      "111": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "112": {
        start: {
          line: 319,
          column: 34
        },
        end: {
          line: 319,
          column: 87
        }
      },
      "113": {
        start: {
          line: 319,
          column: 59
        },
        end: {
          line: 319,
          column: 79
        }
      },
      "114": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 72
        }
      },
      "115": {
        start: {
          line: 322,
          column: 32
        },
        end: {
          line: 322,
          column: 106
        }
      },
      "116": {
        start: {
          line: 322,
          column: 57
        },
        end: {
          line: 322,
          column: 98
        }
      },
      "117": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 35
        }
      },
      "118": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 325,
          column: 65
        }
      },
      "119": {
        start: {
          line: 325,
          column: 46
        },
        end: {
          line: 325,
          column: 63
        }
      },
      "120": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 47
        }
      },
      "121": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 34
        }
      },
      "122": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 38
        }
      },
      "123": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "124": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "125": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 40
        }
      },
      "126": {
        start: {
          line: 347,
          column: 29
        },
        end: {
          line: 347,
          column: 70
        }
      },
      "127": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 44
        }
      },
      "128": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 44
        }
      },
      "129": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 63
        }
      },
      "130": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 42
        }
      },
      "131": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 46
        }
      },
      "132": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 362,
          column: 15
        }
      },
      "133": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 58
        }
      },
      "134": {
        start: {
          line: 367,
          column: 28
        },
        end: {
          line: 367,
          column: 80
        }
      },
      "135": {
        start: {
          line: 367,
          column: 60
        },
        end: {
          line: 367,
          column: 79
        }
      },
      "136": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 369,
          column: 25
        }
      },
      "137": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 25
        }
      },
      "138": {
        start: {
          line: 371,
          column: 27
        },
        end: {
          line: 373,
          column: 43
        }
      },
      "139": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 375,
          column: 25
        }
      },
      "140": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 25
        }
      },
      "141": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "142": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 379,
          column: 93
        }
      },
      "143": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 58
        }
      },
      "144": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 55
        }
      },
      "145": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 55
        }
      },
      "146": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 387,
          column: 59
        }
      },
      "147": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 389,
          column: 28
        }
      },
      "148": {
        start: {
          line: 393,
          column: 26
        },
        end: {
          line: 393,
          column: 83
        }
      },
      "149": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "150": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 401,
          column: 15
        }
      },
      "151": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "152": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 413,
          column: 15
        }
      },
      "153": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "154": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 424,
          column: 15
        }
      },
      "155": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 431,
          column: 27
        }
      },
      "156": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 37
        }
      },
      "157": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 435,
          column: 31
        }
      },
      "158": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 33
        }
      },
      "159": {
        start: {
          line: 438,
          column: 20
        },
        end: {
          line: 438,
          column: 30
        }
      },
      "160": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "161": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 445,
          column: 13
        }
      },
      "162": {
        start: {
          line: 441,
          column: 36
        },
        end: {
          line: 441,
          column: 77
        }
      },
      "163": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 444,
          column: 17
        }
      },
      "164": {
        start: {
          line: 443,
          column: 20
        },
        end: {
          line: 443,
          column: 72
        }
      },
      "165": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "166": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 453,
          column: 13
        }
      },
      "167": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 452,
          column: 69
        }
      },
      "168": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "169": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 471,
          column: 17
        }
      },
      "170": {
        start: {
          line: 461,
          column: 37
        },
        end: {
          line: 461,
          column: 63
        }
      },
      "171": {
        start: {
          line: 462,
          column: 20
        },
        end: {
          line: 470,
          column: 21
        }
      },
      "172": {
        start: {
          line: 463,
          column: 24
        },
        end: {
          line: 469,
          column: 27
        }
      },
      "173": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 472,
          column: 22
        }
      },
      "174": {
        start: {
          line: 474,
          column: 16
        },
        end: {
          line: 477,
          column: 17
        }
      },
      "175": {
        start: {
          line: 475,
          column: 20
        },
        end: {
          line: 475,
          column: 64
        }
      },
      "176": {
        start: {
          line: 476,
          column: 20
        },
        end: {
          line: 476,
          column: 67
        }
      },
      "177": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 478,
          column: 22
        }
      },
      "178": {
        start: {
          line: 480,
          column: 16
        },
        end: {
          line: 480,
          column: 40
        }
      },
      "179": {
        start: {
          line: 481,
          column: 16
        },
        end: {
          line: 481,
          column: 56
        }
      },
      "180": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 22
        }
      },
      "181": {
        start: {
          line: 486,
          column: 20
        },
        end: {
          line: 486,
          column: 30
        }
      },
      "182": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 498,
          column: 9
        }
      },
      "183": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 497,
          column: 13
        }
      },
      "184": {
        start: {
          line: 489,
          column: 36
        },
        end: {
          line: 489,
          column: 77
        }
      },
      "185": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 496,
          column: 17
        }
      },
      "186": {
        start: {
          line: 491,
          column: 44
        },
        end: {
          line: 492,
          column: 96
        }
      },
      "187": {
        start: {
          line: 493,
          column: 20
        },
        end: {
          line: 495,
          column: 21
        }
      },
      "188": {
        start: {
          line: 494,
          column: 24
        },
        end: {
          line: 494,
          column: 76
        }
      },
      "189": {
        start: {
          line: 501,
          column: 26
        },
        end: {
          line: 501,
          column: 83
        }
      },
      "190": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "191": {
        start: {
          line: 504,
          column: 29
        },
        end: {
          line: 504,
          column: 77
        }
      },
      "192": {
        start: {
          line: 504,
          column: 52
        },
        end: {
          line: 504,
          column: 76
        }
      },
      "193": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 513,
          column: 13
        }
      },
      "194": {
        start: {
          line: 506,
          column: 16
        },
        end: {
          line: 512,
          column: 19
        }
      },
      "195": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 83
        }
      },
      "196": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 83
        }
      },
      "197": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 74
        }
      },
      "198": {
        start: {
          line: 527,
          column: 31
        },
        end: {
          line: 580,
          column: 9
        }
      },
      "199": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 581,
          column: 62
        }
      },
      "200": {
        start: {
          line: 583,
          column: 33
        },
        end: {
          line: 679,
          column: 9
        }
      },
      "201": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 680,
          column: 66
        }
      },
      "202": {
        start: {
          line: 683,
          column: 0
        },
        end: {
          line: 683,
          column: 58
        }
      },
      "203": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 690,
          column: 69
        }
      },
      "204": {
        start: {
          line: 693,
          column: 0
        },
        end: {
          line: 693,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 110
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 31,
            column: 39
          }
        },
        loc: {
          start: {
            line: 31,
            column: 56
          },
          end: {
            line: 36,
            column: 13
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 65
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 52
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 96
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 101,
            column: 41
          },
          end: {
            line: 101,
            column: 42
          }
        },
        loc: {
          start: {
            line: 101,
            column: 46
          },
          end: {
            line: 101,
            column: 61
          }
        },
        line: 101
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 34
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 131
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 29
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 137
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 138,
            column: 58
          },
          end: {
            line: 138,
            column: 59
          }
        },
        loc: {
          start: {
            line: 138,
            column: 70
          },
          end: {
            line: 142,
            column: 48
          }
        },
        line: 138
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 139,
            column: 39
          },
          end: {
            line: 139,
            column: 40
          }
        },
        loc: {
          start: {
            line: 139,
            column: 44
          },
          end: {
            line: 139,
            column: 63
          }
        },
        line: 139
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 140,
            column: 33
          }
        },
        loc: {
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 142,
            column: 47
          }
        },
        line: 140
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 32
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 147
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 73
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 166
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 171,
            column: 41
          },
          end: {
            line: 171,
            column: 42
          }
        },
        loc: {
          start: {
            line: 171,
            column: 46
          },
          end: {
            line: 171,
            column: 61
          }
        },
        line: 171
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 179,
            column: 55
          },
          end: {
            line: 179,
            column: 56
          }
        },
        loc: {
          start: {
            line: 179,
            column: 60
          },
          end: {
            line: 179,
            column: 83
          }
        },
        line: 179
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 68
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 204
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        loc: {
          start: {
            line: 217,
            column: 72
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 217
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 60
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 230
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 57
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 242
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 29
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 257
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 27
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 269
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 272,
            column: 36
          },
          end: {
            line: 272,
            column: 37
          }
        },
        loc: {
          start: {
            line: 272,
            column: 41
          },
          end: {
            line: 272,
            column: 64
          }
        },
        line: 272
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        loc: {
          start: {
            line: 277,
            column: 48
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 277
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 49
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 293
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 294,
            column: 46
          },
          end: {
            line: 294,
            column: 47
          }
        },
        loc: {
          start: {
            line: 294,
            column: 51
          },
          end: {
            line: 294,
            column: 71
          }
        },
        line: 294
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 50
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 302
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 50
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 308
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        loc: {
          start: {
            line: 316,
            column: 25
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 316
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 319,
            column: 54
          },
          end: {
            line: 319,
            column: 55
          }
        },
        loc: {
          start: {
            line: 319,
            column: 59
          },
          end: {
            line: 319,
            column: 79
          }
        },
        line: 319
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 322,
            column: 52
          },
          end: {
            line: 322,
            column: 53
          }
        },
        loc: {
          start: {
            line: 322,
            column: 57
          },
          end: {
            line: 322,
            column: 98
          }
        },
        line: 322
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 325,
            column: 41
          },
          end: {
            line: 325,
            column: 42
          }
        },
        loc: {
          start: {
            line: 325,
            column: 46
          },
          end: {
            line: 325,
            column: 63
          }
        },
        line: 325
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 39
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 330
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        loc: {
          start: {
            line: 366,
            column: 61
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 366
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 367,
            column: 55
          },
          end: {
            line: 367,
            column: 56
          }
        },
        loc: {
          start: {
            line: 367,
            column: 60
          },
          end: {
            line: 367,
            column: 79
          }
        },
        line: 367
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        loc: {
          start: {
            line: 392,
            column: 46
          },
          end: {
            line: 403,
            column: 5
          }
        },
        line: 392
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 404,
            column: 4
          },
          end: {
            line: 404,
            column: 5
          }
        },
        loc: {
          start: {
            line: 404,
            column: 55
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 404
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        loc: {
          start: {
            line: 416,
            column: 45
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 416
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 27
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 427
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 429,
            column: 20
          },
          end: {
            line: 429,
            column: 21
          }
        },
        loc: {
          start: {
            line: 429,
            column: 26
          },
          end: {
            line: 431,
            column: 9
          }
        },
        line: 429
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 433,
            column: 20
          },
          end: {
            line: 433,
            column: 21
          }
        },
        loc: {
          start: {
            line: 433,
            column: 26
          },
          end: {
            line: 435,
            column: 9
          }
        },
        line: 433
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        loc: {
          start: {
            line: 437,
            column: 30
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 437
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 44
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 448
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 456,
            column: 5
          }
        },
        loc: {
          start: {
            line: 456,
            column: 52
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 456
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        loc: {
          start: {
            line: 485,
            column: 26
          },
          end: {
            line: 499,
            column: 5
          }
        },
        line: 485
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 500,
            column: 5
          }
        },
        loc: {
          start: {
            line: 500,
            column: 44
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 500
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 504,
            column: 47
          },
          end: {
            line: 504,
            column: 48
          }
        },
        loc: {
          start: {
            line: 504,
            column: 52
          },
          end: {
            line: 504,
            column: 76
          }
        },
        line: 504
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 516,
            column: 5
          }
        },
        loc: {
          start: {
            line: 516,
            column: 25
          },
          end: {
            line: 518,
            column: 5
          }
        },
        line: 516
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 519,
            column: 5
          }
        },
        loc: {
          start: {
            line: 519,
            column: 25
          },
          end: {
            line: 521,
            column: 5
          }
        },
        line: 519
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 522,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        loc: {
          start: {
            line: 522,
            column: 17
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 522
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 33
          },
          end: {
            line: 681,
            column: 5
          }
        },
        line: 525
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 688,
            column: 4
          },
          end: {
            line: 688,
            column: 5
          }
        },
        loc: {
          start: {
            line: 688,
            column: 49
          },
          end: {
            line: 691,
            column: 5
          }
        },
        line: 688
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 96
          },
          end: {
            line: 17,
            column: 108
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 106
          },
          end: {
            line: 17,
            column: 108
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 50
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 30
          },
          end: {
            line: 46,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 30
          },
          end: {
            line: 46,
            column: 50
          }
        }, {
          start: {
            line: 46,
            column: 54
          },
          end: {
            line: 46,
            column: 56
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "11": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "12": {
        loc: {
          start: {
            line: 132,
            column: 15
          },
          end: {
            line: 132,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 15
          },
          end: {
            line: 132,
            column: 45
          }
        }, {
          start: {
            line: 132,
            column: 49
          },
          end: {
            line: 132,
            column: 53
          }
        }],
        line: 132
      },
      "13": {
        loc: {
          start: {
            line: 138,
            column: 70
          },
          end: {
            line: 142,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 70
          },
          end: {
            line: 138,
            column: 102
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 64
          }
        }, {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 48
          }
        }],
        line: 138
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 142,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 140,
            column: 71
          }
        }, {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 47
          }
        }, {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 142,
            column: 47
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "16": {
        loc: {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "17": {
        loc: {
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 31
          }
        }, {
          start: {
            line: 152,
            column: 35
          },
          end: {
            line: 152,
            column: 71
          }
        }],
        line: 152
      },
      "18": {
        loc: {
          start: {
            line: 153,
            column: 20
          },
          end: {
            line: 157,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 20
          },
          end: {
            line: 157,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "19": {
        loc: {
          start: {
            line: 153,
            column: 24
          },
          end: {
            line: 155,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 24
          },
          end: {
            line: 153,
            column: 62
          }
        }, {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 62
          }
        }, {
          start: {
            line: 155,
            column: 24
          },
          end: {
            line: 155,
            column: 62
          }
        }],
        line: 153
      },
      "20": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "21": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "22": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "23": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "24": {
        loc: {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 180,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 180,
            column: 23
          }
        }, {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 180,
            column: 62
          }
        }],
        line: 180
      },
      "25": {
        loc: {
          start: {
            line: 189,
            column: 26
          },
          end: {
            line: 189,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 26
          },
          end: {
            line: 189,
            column: 32
          }
        }, {
          start: {
            line: 189,
            column: 36
          },
          end: {
            line: 189,
            column: 52
          }
        }],
        line: 189
      },
      "26": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "27": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 281,
            column: 22
          }
        }, {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 284,
            column: 22
          }
        }, {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 287,
            column: 22
          }
        }, {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 290,
            column: 22
          }
        }],
        line: 278
      },
      "28": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "29": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 314,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 314,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "30": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 320,
            column: 72
          }
        }, {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 323,
            column: 35
          }
        }, {
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 325,
            column: 65
          }
        }, {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 327,
            column: 47
          }
        }],
        line: 317
      },
      "31": {
        loc: {
          start: {
            line: 322,
            column: 57
          },
          end: {
            line: 322,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 57
          },
          end: {
            line: 322,
            column: 74
          }
        }, {
          start: {
            line: 322,
            column: 78
          },
          end: {
            line: 322,
            column: 98
          }
        }],
        line: 322
      },
      "32": {
        loc: {
          start: {
            line: 338,
            column: 25
          },
          end: {
            line: 338,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 25
          },
          end: {
            line: 338,
            column: 75
          }
        }, {
          start: {
            line: 338,
            column: 79
          },
          end: {
            line: 338,
            column: 100
          }
        }],
        line: 338
      },
      "33": {
        loc: {
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        }, {
          start: {
            line: 352,
            column: 13
          },
          end: {
            line: 364,
            column: 9
          }
        }],
        line: 345
      },
      "34": {
        loc: {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 369,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 369,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "35": {
        loc: {
          start: {
            line: 371,
            column: 27
          },
          end: {
            line: 373,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 27
          },
          end: {
            line: 371,
            column: 58
          }
        }, {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 43
          }
        }, {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 43
          }
        }],
        line: 371
      },
      "36": {
        loc: {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 375,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 375,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "37": {
        loc: {
          start: {
            line: 374,
            column: 12
          },
          end: {
            line: 374,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 12
          },
          end: {
            line: 374,
            column: 23
          }
        }, {
          start: {
            line: 374,
            column: 27
          },
          end: {
            line: 374,
            column: 51
          }
        }],
        line: 374
      },
      "38": {
        loc: {
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 378,
            column: 12
          },
          end: {
            line: 379,
            column: 93
          }
        }, {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 381,
            column: 58
          }
        }, {
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 383,
            column: 55
          }
        }, {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 385,
            column: 55
          }
        }, {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 387,
            column: 59
          }
        }, {
          start: {
            line: 388,
            column: 12
          },
          end: {
            line: 389,
            column: 28
          }
        }],
        line: 377
      },
      "39": {
        loc: {
          start: {
            line: 379,
            column: 23
          },
          end: {
            line: 379,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 23
          },
          end: {
            line: 379,
            column: 57
          }
        }, {
          start: {
            line: 379,
            column: 61
          },
          end: {
            line: 379,
            column: 92
          }
        }],
        line: 379
      },
      "40": {
        loc: {
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 445,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 445,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "41": {
        loc: {
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 444,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 444,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "42": {
        loc: {
          start: {
            line: 442,
            column: 20
          },
          end: {
            line: 442,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 20
          },
          end: {
            line: 442,
            column: 31
          }
        }, {
          start: {
            line: 442,
            column: 35
          },
          end: {
            line: 442,
            column: 54
          }
        }, {
          start: {
            line: 442,
            column: 58
          },
          end: {
            line: 442,
            column: 83
          }
        }],
        line: 442
      },
      "43": {
        loc: {
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "44": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 472,
            column: 22
          }
        }, {
          start: {
            line: 473,
            column: 12
          },
          end: {
            line: 478,
            column: 22
          }
        }, {
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 482,
            column: 22
          }
        }],
        line: 457
      },
      "45": {
        loc: {
          start: {
            line: 462,
            column: 20
          },
          end: {
            line: 470,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 20
          },
          end: {
            line: 470,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "46": {
        loc: {
          start: {
            line: 474,
            column: 16
          },
          end: {
            line: 477,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 16
          },
          end: {
            line: 477,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "47": {
        loc: {
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 497,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 497,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "48": {
        loc: {
          start: {
            line: 488,
            column: 16
          },
          end: {
            line: 488,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 488,
            column: 16
          },
          end: {
            line: 488,
            column: 47
          }
        }, {
          start: {
            line: 488,
            column: 51
          },
          end: {
            line: 488,
            column: 82
          }
        }],
        line: 488
      },
      "49": {
        loc: {
          start: {
            line: 490,
            column: 16
          },
          end: {
            line: 496,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 16
          },
          end: {
            line: 496,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "50": {
        loc: {
          start: {
            line: 490,
            column: 20
          },
          end: {
            line: 490,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 490,
            column: 20
          },
          end: {
            line: 490,
            column: 31
          }
        }, {
          start: {
            line: 490,
            column: 35
          },
          end: {
            line: 490,
            column: 71
          }
        }],
        line: 490
      },
      "51": {
        loc: {
          start: {
            line: 491,
            column: 44
          },
          end: {
            line: 492,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 492,
            column: 24
          },
          end: {
            line: 492,
            column: 92
          }
        }, {
          start: {
            line: 492,
            column: 95
          },
          end: {
            line: 492,
            column: 96
          }
        }],
        line: 491
      },
      "52": {
        loc: {
          start: {
            line: 493,
            column: 20
          },
          end: {
            line: 495,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 20
          },
          end: {
            line: 495,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "53": {
        loc: {
          start: {
            line: 505,
            column: 12
          },
          end: {
            line: 513,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 12
          },
          end: {
            line: 513,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 505
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0, 0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0, 0],
      "43": [0, 0],
      "44": [0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DocumentWorkflowService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DocumentWorkflowService.ts"],
      sourcesContent: ["import { PDFDocumentProxy } from 'pdfjs-dist/types/src/display/api';\r\n\r\nexport interface DocumentWorkflow {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  status: 'draft' | 'in-review' | 'approved' | 'rejected' | 'completed' | 'archived';\r\n  priority: 'low' | 'medium' | 'high' | 'urgent';\r\n  \r\n  // Document information\r\n  documentId: string;\r\n  documentName: string;\r\n  documentVersion: string;\r\n  \r\n  // Workflow configuration\r\n  steps: WorkflowStep[];\r\n  currentStepIndex: number;\r\n  \r\n  // Participants\r\n  initiator: User;\r\n  participants: WorkflowParticipant[];\r\n  \r\n  // Timing\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  dueDate?: Date;\r\n  completedAt?: Date;\r\n  \r\n  // Metadata\r\n  metadata: {\r\n    category: string;\r\n    tags: string[];\r\n    customFields: { [key: string]: any };\r\n  };\r\n  \r\n  // History\r\n  history: WorkflowHistoryEntry[];\r\n  \r\n  // Settings\r\n  settings: {\r\n    allowParallelSteps: boolean;\r\n    requireAllApprovals: boolean;\r\n    autoReminders: boolean;\r\n    reminderInterval: number; // in hours\r\n    escalationRules: EscalationRule[];\r\n  };\r\n}\r\n\r\nexport interface WorkflowStep {\r\n  id: string;\r\n  name: string;\r\n  type: 'review' | 'approve' | 'sign' | 'fill-form' | 'custom';\r\n  description?: string;\r\n  \r\n  // Participants for this step\r\n  assignees: string[]; // User IDs\r\n  reviewers: string[]; // User IDs\r\n  approvers: string[]; // User IDs\r\n  \r\n  // Requirements\r\n  requirements: {\r\n    requiredApprovals: number;\r\n    allowDelegation: boolean;\r\n    requireComments: boolean;\r\n    requiredFields: string[];\r\n    allowRevisions: boolean;\r\n  };\r\n  \r\n  // Status\r\n  status: 'pending' | 'in-progress' | 'completed' | 'rejected' | 'skipped';\r\n  \r\n  // Timing\r\n  dueDate?: Date;\r\n  estimatedDuration?: number; // in hours\r\n  startedAt?: Date;\r\n  completedAt?: Date;\r\n  \r\n  // Actions performed\r\n  actions: WorkflowAction[];\r\n  \r\n  // Conditions\r\n  conditions: {\r\n    skipIf?: string; // JavaScript expression\r\n    requiredPreviousSteps: string[];\r\n    parallelWith: string[];\r\n  };\r\n}\r\n\r\nexport interface WorkflowParticipant {\r\n  userId: string;\r\n  role: 'reviewer' | 'approver' | 'signer' | 'observer';\r\n  permissions: {\r\n    canView: boolean;\r\n    canComment: boolean;\r\n    canEdit: boolean;\r\n    canApprove: boolean;\r\n    canDelegate: boolean;\r\n  };\r\n  notificationPreferences: {\r\n    email: boolean;\r\n    inApp: boolean;\r\n    sms: boolean;\r\n  };\r\n  delegatedTo?: string; // User ID\r\n}\r\n\r\nexport interface WorkflowAction {\r\n  id: string;\r\n  type: 'view' | 'comment' | 'edit' | 'approve' | 'reject' | 'sign' | 'delegate' | 'request-changes';\r\n  performedBy: string; // User ID\r\n  timestamp: Date;\r\n  \r\n  // Action details\r\n  details: {\r\n    comments?: string;\r\n    attachments?: FileAttachment[];\r\n    changes?: DocumentChange[];\r\n    signature?: SignatureData;\r\n    delegatedTo?: string;\r\n  };\r\n  \r\n  // Location in document\r\n  location?: {\r\n    pageNumber: number;\r\n    x?: number;\r\n    y?: number;\r\n    area?: { x: number; y: number; width: number; height: number };\r\n  };\r\n}\r\n\r\nexport interface WorkflowHistoryEntry {\r\n  id: string;\r\n  timestamp: Date;\r\n  event: 'created' | 'started' | 'step-completed' | 'approved' | 'rejected' | 'completed' | 'cancelled';\r\n  performedBy: string; // User ID\r\n  details: {\r\n    stepId?: string;\r\n    stepName?: string;\r\n    comments?: string;\r\n    previousState?: any;\r\n    newState?: any;\r\n  };\r\n}\r\n\r\nexport interface EscalationRule {\r\n  id: string;\r\n  condition: 'overdue' | 'no-response' | 'custom';\r\n  trigger: {\r\n    delay: number; // in hours\r\n    customCondition?: string; // JavaScript expression\r\n  };\r\n  action: {\r\n    type: 'notify-manager' | 'reassign' | 'skip-step' | 'custom';\r\n    targetUserId?: string;\r\n    notificationMessage?: string;\r\n    customAction?: string;\r\n  };\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n  department?: string;\r\n  managerId?: string;\r\n  avatar?: string;\r\n}\r\n\r\nexport interface FileAttachment {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  size: number;\r\n  url: string;\r\n  uploadedBy: string;\r\n  uploadedAt: Date;\r\n}\r\n\r\nexport interface DocumentChange {\r\n  type: 'text-edit' | 'annotation' | 'form-field' | 'page-operation';\r\n  location: {\r\n    pageNumber: number;\r\n    area?: { x: number; y: number; width: number; height: number };\r\n  };\r\n  before: any;\r\n  after: any;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface SignatureData {\r\n  signerId: string;\r\n  signerName: string;\r\n  signatureImageUrl: string;\r\n  certificate?: string;\r\n  timestamp: Date;\r\n  location: {\r\n    pageNumber: number;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n  };\r\n}\r\n\r\nexport interface WorkflowTemplate {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  category: string;\r\n  steps: Omit<WorkflowStep, 'id' | 'status' | 'startedAt' | 'completedAt' | 'actions'>[];\r\n  defaultSettings: DocumentWorkflow['settings'];\r\n  createdBy: string;\r\n  createdAt: Date;\r\n  isPublic: boolean;\r\n}\r\n\r\nexport class DocumentWorkflowService {\r\n  private workflows: Map<string, DocumentWorkflow> = new Map();\r\n  private templates: Map<string, WorkflowTemplate> = new Map();\r\n  private users: Map<string, User> = new Map();\r\n  private notifications: NotificationService;\r\n\r\n  constructor() {\r\n    this.notifications = new NotificationService();\r\n    this.initializeBuiltinTemplates();\r\n    this.startBackgroundTasks();\r\n  }\r\n\r\n  /**\r\n   * Create a new workflow from template\r\n   */\r\n  createWorkflowFromTemplate(\r\n    templateId: string,\r\n    documentId: string,\r\n    documentName: string,\r\n    initiatorId: string,\r\n    participants: WorkflowParticipant[],\r\n    options: {\r\n      dueDate?: Date;\r\n      priority?: DocumentWorkflow['priority'];\r\n      customFields?: { [key: string]: any };\r\n    } = {}\r\n  ): DocumentWorkflow {\r\n    const template = this.templates.get(templateId);\r\n    if (!template) {\r\n      throw new Error(`Template ${templateId} not found`);\r\n    }\r\n\r\n    const workflow: DocumentWorkflow = {\r\n      id: this.generateWorkflowId(),\r\n      name: `${template.name} - ${documentName}`,\r\n      description: template.description,\r\n      status: 'draft',\r\n      priority: options.priority || 'medium',\r\n      \r\n      documentId,\r\n      documentName,\r\n      documentVersion: '1.0',\r\n      \r\n      steps: template.steps.map((step, index) => ({\r\n        ...step,\r\n        id: `step_${index + 1}`,\r\n        status: 'pending',\r\n        actions: []\r\n      })),\r\n      currentStepIndex: 0,\r\n      \r\n      initiator: this.users.get(initiatorId)!,\r\n      participants,\r\n      \r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n      dueDate: options.dueDate,\r\n      \r\n      metadata: {\r\n        category: template.category,\r\n        tags: [],\r\n        customFields: options.customFields || {}\r\n      },\r\n      \r\n      history: [{\r\n        id: this.generateId(),\r\n        timestamp: new Date(),\r\n        event: 'created',\r\n        performedBy: initiatorId,\r\n        details: {\r\n          comments: 'Workflow created from template'\r\n        }\r\n      }],\r\n      \r\n      settings: { ...template.defaultSettings }\r\n    };\r\n\r\n    this.workflows.set(workflow.id, workflow);\r\n    return workflow;\r\n  }\r\n\r\n  /**\r\n   * Start a workflow\r\n   */\r\n  async startWorkflow(workflowId: string): Promise<void> {\r\n    const workflow = this.workflows.get(workflowId);\r\n    if (!workflow) {\r\n      throw new Error(`Workflow ${workflowId} not found`);\r\n    }\r\n\r\n    if (workflow.status !== 'draft') {\r\n      throw new Error(`Workflow is not in draft status`);\r\n    }\r\n\r\n    workflow.status = 'in-review';\r\n    workflow.updatedAt = new Date();\r\n\r\n    // Start the first step\r\n    if (workflow.steps.length > 0) {\r\n      const firstStep = workflow.steps[0];\r\n      firstStep.status = 'in-progress';\r\n      firstStep.startedAt = new Date();\r\n\r\n      // Notify assignees\r\n      await this.notifyStepAssignees(workflow, firstStep);\r\n    }\r\n\r\n    // Add to history\r\n    workflow.history.push({\r\n      id: this.generateId(),\r\n      timestamp: new Date(),\r\n      event: 'started',\r\n      performedBy: workflow.initiator.id,\r\n      details: {}\r\n    });\r\n\r\n    this.workflows.set(workflowId, workflow);\r\n  }\r\n\r\n  /**\r\n   * Perform an action on a workflow step\r\n   */\r\n  async performAction(\r\n    workflowId: string,\r\n    stepId: string,\r\n    action: Omit<WorkflowAction, 'id' | 'timestamp'>\r\n  ): Promise<void> {\r\n    const workflow = this.workflows.get(workflowId);\r\n    if (!workflow) {\r\n      throw new Error(`Workflow ${workflowId} not found`);\r\n    }\r\n\r\n    const step = workflow.steps.find(s => s.id === stepId);\r\n    if (!step) {\r\n      throw new Error(`Step ${stepId} not found`);\r\n    }\r\n\r\n    if (step.status !== 'in-progress') {\r\n      throw new Error(`Step is not in progress`);\r\n    }\r\n\r\n    // Validate user permissions\r\n    if (!this.canUserPerformAction(workflow, step, action.performedBy, action.type)) {\r\n      throw new Error('User does not have permission to perform this action');\r\n    }\r\n\r\n    // Create the action\r\n    const workflowAction: WorkflowAction = {\r\n      ...action,\r\n      id: this.generateId(),\r\n      timestamp: new Date()\r\n    };\r\n\r\n    step.actions.push(workflowAction);\r\n    workflow.updatedAt = new Date();\r\n\r\n    // Process the action\r\n    await this.processAction(workflow, step, workflowAction);\r\n\r\n    // Check if step is complete\r\n    if (this.isStepComplete(step)) {\r\n      await this.completeStep(workflow, step);\r\n    }\r\n\r\n    this.workflows.set(workflowId, workflow);\r\n  }\r\n\r\n  /**\r\n   * Get workflow status\r\n   */\r\n  getWorkflowStatus(workflowId: string): DocumentWorkflow | null {\r\n    return this.workflows.get(workflowId) || null;\r\n  }\r\n\r\n  /**\r\n   * Get workflows for user\r\n   */\r\n  getUserWorkflows(userId: string): DocumentWorkflow[] {\r\n    return Array.from(this.workflows.values()).filter(workflow => \r\n      workflow.initiator.id === userId ||\r\n      workflow.participants.some(p => p.userId === userId) ||\r\n      workflow.steps.some(step => \r\n        step.assignees.includes(userId) ||\r\n        step.reviewers.includes(userId) ||\r\n        step.approvers.includes(userId)\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get pending tasks for user\r\n   */\r\n  getUserPendingTasks(userId: string): Array<{ workflow: DocumentWorkflow; step: WorkflowStep }> {\r\n    const tasks: Array<{ workflow: DocumentWorkflow; step: WorkflowStep }> = [];\r\n\r\n    for (const workflow of this.workflows.values()) {\r\n      if (workflow.status === 'in-review') {\r\n        const currentStep = workflow.steps[workflow.currentStepIndex];\r\n        if (currentStep && currentStep.status === 'in-progress') {\r\n          if (currentStep.assignees.includes(userId) ||\r\n              currentStep.reviewers.includes(userId) ||\r\n              currentStep.approvers.includes(userId)) {\r\n            tasks.push({ workflow, step: currentStep });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return tasks;\r\n  }\r\n\r\n  /**\r\n   * Delegate task to another user\r\n   */\r\n  async delegateTask(\r\n    workflowId: string,\r\n    stepId: string,\r\n    fromUserId: string,\r\n    toUserId: string,\r\n    reason?: string\r\n  ): Promise<void> {\r\n    const workflow = this.workflows.get(workflowId);\r\n    if (!workflow) {\r\n      throw new Error(`Workflow ${workflowId} not found`);\r\n    }\r\n\r\n    const step = workflow.steps.find(s => s.id === stepId);\r\n    if (!step) {\r\n      throw new Error(`Step ${stepId} not found`);\r\n    }\r\n\r\n    if (!step.requirements.allowDelegation) {\r\n      throw new Error('Delegation is not allowed for this step');\r\n    }\r\n\r\n    // Update participant delegation\r\n    const participant = workflow.participants.find(p => p.userId === fromUserId);\r\n    if (participant && participant.permissions.canDelegate) {\r\n      participant.delegatedTo = toUserId;\r\n    }\r\n\r\n    // Create delegation action\r\n    await this.performAction(workflowId, stepId, {\r\n      type: 'delegate',\r\n      performedBy: fromUserId,\r\n      details: {\r\n        delegatedTo: toUserId,\r\n        comments: reason || 'Task delegated'\r\n      }\r\n    });\r\n\r\n    // Notify the new assignee\r\n    await this.notifications.sendNotification(toUserId, {\r\n      type: 'task-delegated',\r\n      title: 'Task Delegated to You',\r\n      message: `A task has been delegated to you by ${this.users.get(fromUserId)?.name}`,\r\n      workflowId,\r\n      stepId\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add comment to workflow step\r\n   */\r\n  async addComment(\r\n    workflowId: string,\r\n    stepId: string,\r\n    userId: string,\r\n    comment: string,\r\n    location?: WorkflowAction['location']\r\n  ): Promise<void> {\r\n    await this.performAction(workflowId, stepId, {\r\n      type: 'comment',\r\n      performedBy: userId,\r\n      details: {\r\n        comments: comment\r\n      },\r\n      location\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Request changes on document\r\n   */\r\n  async requestChanges(\r\n    workflowId: string,\r\n    stepId: string,\r\n    userId: string,\r\n    changes: string,\r\n    location?: WorkflowAction['location']\r\n  ): Promise<void> {\r\n    await this.performAction(workflowId, stepId, {\r\n      type: 'request-changes',\r\n      performedBy: userId,\r\n      details: {\r\n        comments: changes\r\n      },\r\n      location\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Approve workflow step\r\n   */\r\n  async approveStep(\r\n    workflowId: string,\r\n    stepId: string,\r\n    userId: string,\r\n    comments?: string\r\n  ): Promise<void> {\r\n    await this.performAction(workflowId, stepId, {\r\n      type: 'approve',\r\n      performedBy: userId,\r\n      details: {\r\n        comments\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reject workflow step\r\n   */\r\n  async rejectStep(\r\n    workflowId: string,\r\n    stepId: string,\r\n    userId: string,\r\n    reason: string\r\n  ): Promise<void> {\r\n    await this.performAction(workflowId, stepId, {\r\n      type: 'reject',\r\n      performedBy: userId,\r\n      details: {\r\n        comments: reason\r\n      }\r\n    });\r\n\r\n    const workflow = this.workflows.get(workflowId)!;\r\n    workflow.status = 'rejected';\r\n    workflow.updatedAt = new Date();\r\n  }\r\n\r\n  /**\r\n   * Create workflow template\r\n   */\r\n  createTemplate(template: Omit<WorkflowTemplate, 'id' | 'createdAt'>): WorkflowTemplate {\r\n    const workflowTemplate: WorkflowTemplate = {\r\n      ...template,\r\n      id: this.generateTemplateId(),\r\n      createdAt: new Date()\r\n    };\r\n\r\n    this.templates.set(workflowTemplate.id, workflowTemplate);\r\n    return workflowTemplate;\r\n  }\r\n\r\n  /**\r\n   * Get available templates\r\n   */\r\n  getTemplates(category?: string): WorkflowTemplate[] {\r\n    const templates = Array.from(this.templates.values());\r\n    if (category) {\r\n      return templates.filter(t => t.category === category);\r\n    }\r\n    return templates;\r\n  }\r\n\r\n  // Private helper methods\r\n\r\n  private async processAction(\r\n    workflow: DocumentWorkflow,\r\n    step: WorkflowStep,\r\n    action: WorkflowAction\r\n  ): Promise<void> {\r\n    switch (action.type) {\r\n      case 'approve':\r\n        await this.handleApproval(workflow, step, action);\r\n        break;\r\n      case 'reject':\r\n        await this.handleRejection(workflow, step, action);\r\n        break;\r\n      case 'sign':\r\n        await this.handleSignature(workflow, step, action);\r\n        break;\r\n      default:\r\n        // Handle other action types\r\n        break;\r\n    }\r\n  }\r\n\r\n  private async handleApproval(\r\n    workflow: DocumentWorkflow,\r\n    step: WorkflowStep,\r\n    action: WorkflowAction\r\n  ): Promise<void> {\r\n    const approvals = step.actions.filter(a => a.type === 'approve').length;\r\n    \r\n    if (approvals >= step.requirements.requiredApprovals) {\r\n      step.status = 'completed';\r\n      step.completedAt = new Date();\r\n      \r\n      // Notify participants\r\n      await this.notifyStepCompletion(workflow, step, 'approved');\r\n    }\r\n  }\r\n\r\n  private async handleRejection(\r\n    workflow: DocumentWorkflow,\r\n    step: WorkflowStep,\r\n    action: WorkflowAction\r\n  ): Promise<void> {\r\n    step.status = 'rejected';\r\n    workflow.status = 'rejected';\r\n    \r\n    // Notify participants\r\n    await this.notifyStepCompletion(workflow, step, 'rejected');\r\n  }\r\n\r\n  private async handleSignature(\r\n    workflow: DocumentWorkflow,\r\n    step: WorkflowStep,\r\n    action: WorkflowAction\r\n  ): Promise<void> {\r\n    if (action.details.signature) {\r\n      // Process signature\r\n      step.status = 'completed';\r\n      step.completedAt = new Date();\r\n      \r\n      await this.notifyStepCompletion(workflow, step, 'signed');\r\n    }\r\n  }\r\n\r\n  private isStepComplete(step: WorkflowStep): boolean {\r\n    switch (step.type) {\r\n      case 'approve':\r\n        const approvals = step.actions.filter(a => a.type === 'approve').length;\r\n        return approvals >= step.requirements.requiredApprovals;\r\n      \r\n      case 'review':\r\n        const reviews = step.actions.filter(a => a.type === 'view' || a.type === 'comment').length;\r\n        return reviews > 0; // At least one review action\r\n      \r\n      case 'sign':\r\n        return step.actions.some(a => a.type === 'sign');\r\n      \r\n      default:\r\n        return step.actions.length > 0;\r\n    }\r\n  }\r\n\r\n  private async completeStep(workflow: DocumentWorkflow, step: WorkflowStep): Promise<void> {\r\n    step.status = 'completed';\r\n    step.completedAt = new Date();\r\n\r\n    // Add to history\r\n    workflow.history.push({\r\n      id: this.generateId(),\r\n      timestamp: new Date(),\r\n      event: 'step-completed',\r\n      performedBy: step.actions[step.actions.length - 1]?.performedBy || workflow.initiator.id,\r\n      details: {\r\n        stepId: step.id,\r\n        stepName: step.name\r\n      }\r\n    });\r\n\r\n    // Move to next step or complete workflow\r\n    if (workflow.currentStepIndex < workflow.steps.length - 1) {\r\n      workflow.currentStepIndex++;\r\n      const nextStep = workflow.steps[workflow.currentStepIndex];\r\n      nextStep.status = 'in-progress';\r\n      nextStep.startedAt = new Date();\r\n      \r\n      await this.notifyStepAssignees(workflow, nextStep);\r\n    } else {\r\n      // Workflow completed\r\n      workflow.status = 'completed';\r\n      workflow.completedAt = new Date();\r\n      \r\n      workflow.history.push({\r\n        id: this.generateId(),\r\n        timestamp: new Date(),\r\n        event: 'completed',\r\n        performedBy: workflow.initiator.id,\r\n        details: {}\r\n      });\r\n\r\n      await this.notifyWorkflowCompletion(workflow);\r\n    }\r\n  }\r\n\r\n  private canUserPerformAction(\r\n    workflow: DocumentWorkflow,\r\n    step: WorkflowStep,\r\n    userId: string,\r\n    actionType: WorkflowAction['type']\r\n  ): boolean {\r\n    const participant = workflow.participants.find(p => p.userId === userId);\r\n    if (!participant) return false;\r\n\r\n    // Check if user is assigned to this step\r\n    const isAssignee = step.assignees.includes(userId) ||\r\n                      step.reviewers.includes(userId) ||\r\n                      step.approvers.includes(userId);\r\n    \r\n    if (!isAssignee && !participant.delegatedTo) return false;\r\n\r\n    // Check permissions based on action type\r\n    switch (actionType) {\r\n      case 'approve':\r\n        return participant.permissions.canApprove && step.approvers.includes(userId);\r\n      case 'comment':\r\n        return participant.permissions.canComment;\r\n      case 'edit':\r\n        return participant.permissions.canEdit;\r\n      case 'view':\r\n        return participant.permissions.canView;\r\n      case 'delegate':\r\n        return participant.permissions.canDelegate;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  private async notifyStepAssignees(workflow: DocumentWorkflow, step: WorkflowStep): Promise<void> {\r\n    const assignees = [...step.assignees, ...step.reviewers, ...step.approvers];\r\n    \r\n    for (const userId of assignees) {\r\n      await this.notifications.sendNotification(userId, {\r\n        type: 'task-assigned',\r\n        title: 'New Task Assigned',\r\n        message: `You have been assigned a task in workflow: ${workflow.name}`,\r\n        workflowId: workflow.id,\r\n        stepId: step.id\r\n      });\r\n    }\r\n  }\r\n\r\n  private async notifyStepCompletion(\r\n    workflow: DocumentWorkflow,\r\n    step: WorkflowStep,\r\n    result: string\r\n  ): Promise<void> {\r\n    // Notify workflow participants\r\n    for (const participant of workflow.participants) {\r\n      await this.notifications.sendNotification(participant.userId, {\r\n        type: 'step-completed',\r\n        title: `Workflow Step ${result}`,\r\n        message: `Step \"${step.name}\" has been ${result} in workflow: ${workflow.name}`,\r\n        workflowId: workflow.id,\r\n        stepId: step.id\r\n      });\r\n    }\r\n  }\r\n\r\n  private async notifyWorkflowCompletion(workflow: DocumentWorkflow): Promise<void> {\r\n    // Notify all participants\r\n    for (const participant of workflow.participants) {\r\n      await this.notifications.sendNotification(participant.userId, {\r\n        type: 'workflow-completed',\r\n        title: 'Workflow Completed',\r\n        message: `Workflow \"${workflow.name}\" has been completed successfully.`,\r\n        workflowId: workflow.id\r\n      });\r\n    }\r\n  }\r\n\r\n  private startBackgroundTasks(): void {\r\n    // Check for overdue tasks every hour\r\n    setInterval(() => {\r\n      this.checkOverdueTasks();\r\n    }, 60 * 60 * 1000);\r\n\r\n    // Send reminders every 4 hours\r\n    setInterval(() => {\r\n      this.sendReminders();\r\n    }, 4 * 60 * 60 * 1000);\r\n  }\r\n\r\n  private async checkOverdueTasks(): Promise<void> {\r\n    const now = new Date();\r\n    \r\n    for (const workflow of this.workflows.values()) {\r\n      if (workflow.status === 'in-review') {\r\n        const currentStep = workflow.steps[workflow.currentStepIndex];\r\n        if (currentStep && currentStep.dueDate && currentStep.dueDate < now) {\r\n          await this.handleOverdueStep(workflow, currentStep);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private async handleOverdueStep(workflow: DocumentWorkflow, step: WorkflowStep): Promise<void> {\r\n    // Apply escalation rules\r\n    for (const rule of workflow.settings.escalationRules) {\r\n      if (rule.condition === 'overdue') {\r\n        await this.applyEscalationRule(workflow, step, rule);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async applyEscalationRule(\r\n    workflow: DocumentWorkflow,\r\n    step: WorkflowStep,\r\n    rule: EscalationRule\r\n  ): Promise<void> {\r\n    switch (rule.action.type) {\r\n      case 'notify-manager':\r\n        // Find managers of assignees and notify them\r\n        for (const assigneeId of step.assignees) {\r\n          const assignee = this.users.get(assigneeId);\r\n          if (assignee?.managerId) {\r\n            await this.notifications.sendNotification(assignee.managerId, {\r\n              type: 'escalation',\r\n              title: 'Overdue Task Escalation',\r\n              message: `Task in workflow \"${workflow.name}\" is overdue and requires attention.`,\r\n              workflowId: workflow.id,\r\n              stepId: step.id\r\n            });\r\n          }\r\n        }\r\n        break;\r\n      \r\n      case 'reassign':\r\n        if (rule.action.targetUserId) {\r\n          step.assignees = [rule.action.targetUserId];\r\n          await this.notifyStepAssignees(workflow, step);\r\n        }\r\n        break;\r\n      \r\n      case 'skip-step':\r\n        step.status = 'skipped';\r\n        await this.completeStep(workflow, step);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private async sendReminders(): Promise<void> {\r\n    const now = new Date();\r\n    \r\n    for (const workflow of this.workflows.values()) {\r\n      if (workflow.status === 'in-review' && workflow.settings.autoReminders) {\r\n        const currentStep = workflow.steps[workflow.currentStepIndex];\r\n        if (currentStep && currentStep.status === 'in-progress') {\r\n          const hoursSinceStart = currentStep.startedAt ? \r\n            (now.getTime() - currentStep.startedAt.getTime()) / (1000 * 60 * 60) : 0;\r\n          \r\n          if (hoursSinceStart >= workflow.settings.reminderInterval) {\r\n            await this.sendStepReminders(workflow, currentStep);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private async sendStepReminders(workflow: DocumentWorkflow, step: WorkflowStep): Promise<void> {\r\n    const assignees = [...step.assignees, ...step.reviewers, ...step.approvers];\r\n    \r\n    for (const userId of assignees) {\r\n      // Check if user has already completed their part\r\n      const hasActed = step.actions.some(a => a.performedBy === userId);\r\n      if (!hasActed) {\r\n        await this.notifications.sendNotification(userId, {\r\n          type: 'reminder',\r\n          title: 'Task Reminder',\r\n          message: `Reminder: You have a pending task in workflow: ${workflow.name}`,\r\n          workflowId: workflow.id,\r\n          stepId: step.id\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private generateWorkflowId(): string {\r\n    return `workflow_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private generateTemplateId(): string {\r\n    return `template_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private generateId(): string {\r\n    return `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private initializeBuiltinTemplates(): void {\r\n    // Document Review Template\r\n    const reviewTemplate: WorkflowTemplate = {\r\n      id: 'document-review',\r\n      name: 'Document Review',\r\n      description: 'Standard document review workflow',\r\n      category: 'Review',\r\n      steps: [\r\n        {\r\n          name: 'Initial Review',\r\n          type: 'review',\r\n          assignees: [],\r\n          reviewers: [],\r\n          approvers: [],\r\n          requirements: {\r\n            requiredApprovals: 1,\r\n            allowDelegation: true,\r\n            requireComments: false,\r\n            requiredFields: [],\r\n            allowRevisions: true\r\n          },\r\n          conditions: {\r\n            requiredPreviousSteps: [],\r\n            parallelWith: []\r\n          }\r\n        },\r\n        {\r\n          name: 'Manager Approval',\r\n          type: 'approve',\r\n          assignees: [],\r\n          reviewers: [],\r\n          approvers: [],\r\n          requirements: {\r\n            requiredApprovals: 1,\r\n            allowDelegation: false,\r\n            requireComments: true,\r\n            requiredFields: [],\r\n            allowRevisions: false\r\n          },\r\n          conditions: {\r\n            requiredPreviousSteps: ['step_1'],\r\n            parallelWith: []\r\n          }\r\n        }\r\n      ],\r\n      defaultSettings: {\r\n        allowParallelSteps: false,\r\n        requireAllApprovals: true,\r\n        autoReminders: true,\r\n        reminderInterval: 24,\r\n        escalationRules: []\r\n      },\r\n      createdBy: 'system',\r\n      createdAt: new Date(),\r\n      isPublic: true\r\n    };\r\n\r\n    this.templates.set(reviewTemplate.id, reviewTemplate);\r\n\r\n    // Contract Approval Template\r\n    const contractTemplate: WorkflowTemplate = {\r\n      id: 'contract-approval',\r\n      name: 'Contract Approval',\r\n      description: 'Multi-stage contract approval process',\r\n      category: 'Legal',\r\n      steps: [\r\n        {\r\n          name: 'Legal Review',\r\n          type: 'review',\r\n          assignees: [],\r\n          reviewers: [],\r\n          approvers: [],\r\n          requirements: {\r\n            requiredApprovals: 1,\r\n            allowDelegation: true,\r\n            requireComments: true,\r\n            requiredFields: [],\r\n            allowRevisions: true\r\n          },\r\n          conditions: {\r\n            requiredPreviousSteps: [],\r\n            parallelWith: []\r\n          }\r\n        },\r\n        {\r\n          name: 'Financial Review',\r\n          type: 'review',\r\n          assignees: [],\r\n          reviewers: [],\r\n          approvers: [],\r\n          requirements: {\r\n            requiredApprovals: 1,\r\n            allowDelegation: true,\r\n            requireComments: false,\r\n            requiredFields: [],\r\n            allowRevisions: true\r\n          },\r\n          conditions: {\r\n            requiredPreviousSteps: [],\r\n            parallelWith: ['step_1']\r\n          }\r\n        },\r\n        {\r\n          name: 'Executive Approval',\r\n          type: 'approve',\r\n          assignees: [],\r\n          reviewers: [],\r\n          approvers: [],\r\n          requirements: {\r\n            requiredApprovals: 1,\r\n            allowDelegation: false,\r\n            requireComments: false,\r\n            requiredFields: [],\r\n            allowRevisions: false\r\n          },\r\n          conditions: {\r\n            requiredPreviousSteps: ['step_1', 'step_2'],\r\n            parallelWith: []\r\n          }\r\n        },\r\n        {\r\n          name: 'Digital Signature',\r\n          type: 'sign',\r\n          assignees: [],\r\n          reviewers: [],\r\n          approvers: [],\r\n          requirements: {\r\n            requiredApprovals: 1,\r\n            allowDelegation: false,\r\n            requireComments: false,\r\n            requiredFields: [],\r\n            allowRevisions: false\r\n          },\r\n          conditions: {\r\n            requiredPreviousSteps: ['step_3'],\r\n            parallelWith: []\r\n          }\r\n        }\r\n      ],\r\n      defaultSettings: {\r\n        allowParallelSteps: true,\r\n        requireAllApprovals: true,\r\n        autoReminders: true,\r\n        reminderInterval: 48,\r\n        escalationRules: [\r\n          {\r\n            id: 'overdue-escalation',\r\n            condition: 'overdue',\r\n            trigger: { delay: 72 },\r\n            action: { type: 'notify-manager' }\r\n          }\r\n        ]\r\n      },\r\n      createdBy: 'system',\r\n      createdAt: new Date(),\r\n      isPublic: true\r\n    };\r\n\r\n    this.templates.set(contractTemplate.id, contractTemplate);\r\n  }\r\n}\r\n\r\n/**\r\n * Simple notification service for workflow notifications\r\n */\r\nclass NotificationService {\r\n  async sendNotification(userId: string, notification: {\r\n    type: string;\r\n    title: string;\r\n    message: string;\r\n    workflowId: string;\r\n    stepId?: string;\r\n  }): Promise<void> {\r\n    // In a real implementation, this would send emails, push notifications, etc.\r\n    console.log(`Notification sent to ${userId}:`, notification);\r\n  }\r\n}\r\n\r\nexport default DocumentWorkflowService;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2cfd24b95d724f8a5ee57e8101d366c2dce98cd2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jb0hfw6uy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jb0hfw6uy();
cov_jb0hfw6uy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_jb0hfw6uy().s[1]++;
exports.DocumentWorkflowService = void 0;
class DocumentWorkflowService {
  workflows =
  /* istanbul ignore next */
  (cov_jb0hfw6uy().s[2]++, new Map());
  templates =
  /* istanbul ignore next */
  (cov_jb0hfw6uy().s[3]++, new Map());
  users =
  /* istanbul ignore next */
  (cov_jb0hfw6uy().s[4]++, new Map());
  notifications;
  constructor() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[0]++;
    cov_jb0hfw6uy().s[5]++;
    this.notifications = new NotificationService();
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[6]++;
    this.initializeBuiltinTemplates();
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[7]++;
    this.startBackgroundTasks();
  }
  /**
   * Create a new workflow from template
   */
  createWorkflowFromTemplate(templateId, documentId, documentName, initiatorId, participants, options =
  /* istanbul ignore next */
  (cov_jb0hfw6uy().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[1]++;
    const template =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[8]++, this.templates.get(templateId));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[9]++;
    if (!template) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[1][0]++;
      cov_jb0hfw6uy().s[10]++;
      throw new Error(`Template ${templateId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[1][1]++;
    }
    const workflow =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[11]++, {
      id: this.generateWorkflowId(),
      name: `${template.name} - ${documentName}`,
      description: template.description,
      status: 'draft',
      priority:
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[2][0]++, options.priority) ||
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[2][1]++, 'medium'),
      documentId,
      documentName,
      documentVersion: '1.0',
      steps: template.steps.map((step, index) => {
        /* istanbul ignore next */
        cov_jb0hfw6uy().f[2]++;
        cov_jb0hfw6uy().s[12]++;
        return {
          ...step,
          id: `step_${index + 1}`,
          status: 'pending',
          actions: []
        };
      }),
      currentStepIndex: 0,
      initiator: this.users.get(initiatorId),
      participants,
      createdAt: new Date(),
      updatedAt: new Date(),
      dueDate: options.dueDate,
      metadata: {
        category: template.category,
        tags: [],
        customFields:
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[3][0]++, options.customFields) ||
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[3][1]++, {})
      },
      history: [{
        id: this.generateId(),
        timestamp: new Date(),
        event: 'created',
        performedBy: initiatorId,
        details: {
          comments: 'Workflow created from template'
        }
      }],
      settings: {
        ...template.defaultSettings
      }
    });
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[13]++;
    this.workflows.set(workflow.id, workflow);
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[14]++;
    return workflow;
  }
  /**
   * Start a workflow
   */
  async startWorkflow(workflowId) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[3]++;
    const workflow =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[15]++, this.workflows.get(workflowId));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[16]++;
    if (!workflow) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[4][0]++;
      cov_jb0hfw6uy().s[17]++;
      throw new Error(`Workflow ${workflowId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[4][1]++;
    }
    cov_jb0hfw6uy().s[18]++;
    if (workflow.status !== 'draft') {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[5][0]++;
      cov_jb0hfw6uy().s[19]++;
      throw new Error(`Workflow is not in draft status`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[5][1]++;
    }
    cov_jb0hfw6uy().s[20]++;
    workflow.status = 'in-review';
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[21]++;
    workflow.updatedAt = new Date();
    // Start the first step
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[22]++;
    if (workflow.steps.length > 0) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[6][0]++;
      const firstStep =
      /* istanbul ignore next */
      (cov_jb0hfw6uy().s[23]++, workflow.steps[0]);
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[24]++;
      firstStep.status = 'in-progress';
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[25]++;
      firstStep.startedAt = new Date();
      // Notify assignees
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[26]++;
      await this.notifyStepAssignees(workflow, firstStep);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[6][1]++;
    }
    // Add to history
    cov_jb0hfw6uy().s[27]++;
    workflow.history.push({
      id: this.generateId(),
      timestamp: new Date(),
      event: 'started',
      performedBy: workflow.initiator.id,
      details: {}
    });
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[28]++;
    this.workflows.set(workflowId, workflow);
  }
  /**
   * Perform an action on a workflow step
   */
  async performAction(workflowId, stepId, action) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[4]++;
    const workflow =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[29]++, this.workflows.get(workflowId));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[30]++;
    if (!workflow) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[7][0]++;
      cov_jb0hfw6uy().s[31]++;
      throw new Error(`Workflow ${workflowId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[7][1]++;
    }
    const step =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[32]++, workflow.steps.find(s => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[5]++;
      cov_jb0hfw6uy().s[33]++;
      return s.id === stepId;
    }));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[34]++;
    if (!step) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[8][0]++;
      cov_jb0hfw6uy().s[35]++;
      throw new Error(`Step ${stepId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[8][1]++;
    }
    cov_jb0hfw6uy().s[36]++;
    if (step.status !== 'in-progress') {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[9][0]++;
      cov_jb0hfw6uy().s[37]++;
      throw new Error(`Step is not in progress`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[9][1]++;
    }
    // Validate user permissions
    cov_jb0hfw6uy().s[38]++;
    if (!this.canUserPerformAction(workflow, step, action.performedBy, action.type)) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[10][0]++;
      cov_jb0hfw6uy().s[39]++;
      throw new Error('User does not have permission to perform this action');
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[10][1]++;
    }
    // Create the action
    const workflowAction =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[40]++, {
      ...action,
      id: this.generateId(),
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[41]++;
    step.actions.push(workflowAction);
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[42]++;
    workflow.updatedAt = new Date();
    // Process the action
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[43]++;
    await this.processAction(workflow, step, workflowAction);
    // Check if step is complete
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[44]++;
    if (this.isStepComplete(step)) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[11][0]++;
      cov_jb0hfw6uy().s[45]++;
      await this.completeStep(workflow, step);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[11][1]++;
    }
    cov_jb0hfw6uy().s[46]++;
    this.workflows.set(workflowId, workflow);
  }
  /**
   * Get workflow status
   */
  getWorkflowStatus(workflowId) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[6]++;
    cov_jb0hfw6uy().s[47]++;
    return /* istanbul ignore next */(cov_jb0hfw6uy().b[12][0]++, this.workflows.get(workflowId)) ||
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[12][1]++, null);
  }
  /**
   * Get workflows for user
   */
  getUserWorkflows(userId) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[7]++;
    cov_jb0hfw6uy().s[48]++;
    return Array.from(this.workflows.values()).filter(workflow => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[8]++;
      cov_jb0hfw6uy().s[49]++;
      return /* istanbul ignore next */(cov_jb0hfw6uy().b[13][0]++, workflow.initiator.id === userId) ||
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[13][1]++, workflow.participants.some(p => {
        /* istanbul ignore next */
        cov_jb0hfw6uy().f[9]++;
        cov_jb0hfw6uy().s[50]++;
        return p.userId === userId;
      })) ||
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[13][2]++, workflow.steps.some(step => {
        /* istanbul ignore next */
        cov_jb0hfw6uy().f[10]++;
        cov_jb0hfw6uy().s[51]++;
        return /* istanbul ignore next */(cov_jb0hfw6uy().b[14][0]++, step.assignees.includes(userId)) ||
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[14][1]++, step.reviewers.includes(userId)) ||
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[14][2]++, step.approvers.includes(userId));
      }));
    });
  }
  /**
   * Get pending tasks for user
   */
  getUserPendingTasks(userId) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[11]++;
    const tasks =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[52]++, []);
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[53]++;
    for (const workflow of this.workflows.values()) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[54]++;
      if (workflow.status === 'in-review') {
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[15][0]++;
        const currentStep =
        /* istanbul ignore next */
        (cov_jb0hfw6uy().s[55]++, workflow.steps[workflow.currentStepIndex]);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[56]++;
        if (
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[17][0]++, currentStep) &&
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[17][1]++, currentStep.status === 'in-progress')) {
          /* istanbul ignore next */
          cov_jb0hfw6uy().b[16][0]++;
          cov_jb0hfw6uy().s[57]++;
          if (
          /* istanbul ignore next */
          (cov_jb0hfw6uy().b[19][0]++, currentStep.assignees.includes(userId)) ||
          /* istanbul ignore next */
          (cov_jb0hfw6uy().b[19][1]++, currentStep.reviewers.includes(userId)) ||
          /* istanbul ignore next */
          (cov_jb0hfw6uy().b[19][2]++, currentStep.approvers.includes(userId))) {
            /* istanbul ignore next */
            cov_jb0hfw6uy().b[18][0]++;
            cov_jb0hfw6uy().s[58]++;
            tasks.push({
              workflow,
              step: currentStep
            });
          } else
          /* istanbul ignore next */
          {
            cov_jb0hfw6uy().b[18][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_jb0hfw6uy().b[16][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_jb0hfw6uy().b[15][1]++;
      }
    }
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[59]++;
    return tasks;
  }
  /**
   * Delegate task to another user
   */
  async delegateTask(workflowId, stepId, fromUserId, toUserId, reason) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[12]++;
    const workflow =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[60]++, this.workflows.get(workflowId));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[61]++;
    if (!workflow) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[20][0]++;
      cov_jb0hfw6uy().s[62]++;
      throw new Error(`Workflow ${workflowId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[20][1]++;
    }
    const step =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[63]++, workflow.steps.find(s => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[13]++;
      cov_jb0hfw6uy().s[64]++;
      return s.id === stepId;
    }));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[65]++;
    if (!step) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[21][0]++;
      cov_jb0hfw6uy().s[66]++;
      throw new Error(`Step ${stepId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[21][1]++;
    }
    cov_jb0hfw6uy().s[67]++;
    if (!step.requirements.allowDelegation) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[22][0]++;
      cov_jb0hfw6uy().s[68]++;
      throw new Error('Delegation is not allowed for this step');
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[22][1]++;
    }
    // Update participant delegation
    const participant =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[69]++, workflow.participants.find(p => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[14]++;
      cov_jb0hfw6uy().s[70]++;
      return p.userId === fromUserId;
    }));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[24][0]++, participant) &&
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[24][1]++, participant.permissions.canDelegate)) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[23][0]++;
      cov_jb0hfw6uy().s[72]++;
      participant.delegatedTo = toUserId;
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[23][1]++;
    }
    // Create delegation action
    cov_jb0hfw6uy().s[73]++;
    await this.performAction(workflowId, stepId, {
      type: 'delegate',
      performedBy: fromUserId,
      details: {
        delegatedTo: toUserId,
        comments:
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[25][0]++, reason) ||
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[25][1]++, 'Task delegated')
      }
    });
    // Notify the new assignee
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[74]++;
    await this.notifications.sendNotification(toUserId, {
      type: 'task-delegated',
      title: 'Task Delegated to You',
      message: `A task has been delegated to you by ${this.users.get(fromUserId)?.name}`,
      workflowId,
      stepId
    });
  }
  /**
   * Add comment to workflow step
   */
  async addComment(workflowId, stepId, userId, comment, location) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[15]++;
    cov_jb0hfw6uy().s[75]++;
    await this.performAction(workflowId, stepId, {
      type: 'comment',
      performedBy: userId,
      details: {
        comments: comment
      },
      location
    });
  }
  /**
   * Request changes on document
   */
  async requestChanges(workflowId, stepId, userId, changes, location) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[16]++;
    cov_jb0hfw6uy().s[76]++;
    await this.performAction(workflowId, stepId, {
      type: 'request-changes',
      performedBy: userId,
      details: {
        comments: changes
      },
      location
    });
  }
  /**
   * Approve workflow step
   */
  async approveStep(workflowId, stepId, userId, comments) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[17]++;
    cov_jb0hfw6uy().s[77]++;
    await this.performAction(workflowId, stepId, {
      type: 'approve',
      performedBy: userId,
      details: {
        comments
      }
    });
  }
  /**
   * Reject workflow step
   */
  async rejectStep(workflowId, stepId, userId, reason) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[18]++;
    cov_jb0hfw6uy().s[78]++;
    await this.performAction(workflowId, stepId, {
      type: 'reject',
      performedBy: userId,
      details: {
        comments: reason
      }
    });
    const workflow =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[79]++, this.workflows.get(workflowId));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[80]++;
    workflow.status = 'rejected';
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[81]++;
    workflow.updatedAt = new Date();
  }
  /**
   * Create workflow template
   */
  createTemplate(template) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[19]++;
    const workflowTemplate =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[82]++, {
      ...template,
      id: this.generateTemplateId(),
      createdAt: new Date()
    });
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[83]++;
    this.templates.set(workflowTemplate.id, workflowTemplate);
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[84]++;
    return workflowTemplate;
  }
  /**
   * Get available templates
   */
  getTemplates(category) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[20]++;
    const templates =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[85]++, Array.from(this.templates.values()));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[86]++;
    if (category) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[26][0]++;
      cov_jb0hfw6uy().s[87]++;
      return templates.filter(t => {
        /* istanbul ignore next */
        cov_jb0hfw6uy().f[21]++;
        cov_jb0hfw6uy().s[88]++;
        return t.category === category;
      });
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[26][1]++;
    }
    cov_jb0hfw6uy().s[89]++;
    return templates;
  }
  // Private helper methods
  async processAction(workflow, step, action) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[22]++;
    cov_jb0hfw6uy().s[90]++;
    switch (action.type) {
      case 'approve':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[27][0]++;
        cov_jb0hfw6uy().s[91]++;
        await this.handleApproval(workflow, step, action);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[92]++;
        break;
      case 'reject':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[27][1]++;
        cov_jb0hfw6uy().s[93]++;
        await this.handleRejection(workflow, step, action);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[94]++;
        break;
      case 'sign':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[27][2]++;
        cov_jb0hfw6uy().s[95]++;
        await this.handleSignature(workflow, step, action);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[96]++;
        break;
      default:
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[27][3]++;
        cov_jb0hfw6uy().s[97]++;
        // Handle other action types
        break;
    }
  }
  async handleApproval(workflow, step, action) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[23]++;
    const approvals =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[98]++, step.actions.filter(a => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[24]++;
      cov_jb0hfw6uy().s[99]++;
      return a.type === 'approve';
    }).length);
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[100]++;
    if (approvals >= step.requirements.requiredApprovals) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[28][0]++;
      cov_jb0hfw6uy().s[101]++;
      step.status = 'completed';
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[102]++;
      step.completedAt = new Date();
      // Notify participants
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[103]++;
      await this.notifyStepCompletion(workflow, step, 'approved');
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[28][1]++;
    }
  }
  async handleRejection(workflow, step, action) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[25]++;
    cov_jb0hfw6uy().s[104]++;
    step.status = 'rejected';
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[105]++;
    workflow.status = 'rejected';
    // Notify participants
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[106]++;
    await this.notifyStepCompletion(workflow, step, 'rejected');
  }
  async handleSignature(workflow, step, action) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[26]++;
    cov_jb0hfw6uy().s[107]++;
    if (action.details.signature) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[29][0]++;
      cov_jb0hfw6uy().s[108]++;
      // Process signature
      step.status = 'completed';
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[109]++;
      step.completedAt = new Date();
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[110]++;
      await this.notifyStepCompletion(workflow, step, 'signed');
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[29][1]++;
    }
  }
  isStepComplete(step) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[27]++;
    cov_jb0hfw6uy().s[111]++;
    switch (step.type) {
      case 'approve':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[30][0]++;
        const approvals =
        /* istanbul ignore next */
        (cov_jb0hfw6uy().s[112]++, step.actions.filter(a => {
          /* istanbul ignore next */
          cov_jb0hfw6uy().f[28]++;
          cov_jb0hfw6uy().s[113]++;
          return a.type === 'approve';
        }).length);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[114]++;
        return approvals >= step.requirements.requiredApprovals;
      case 'review':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[30][1]++;
        const reviews =
        /* istanbul ignore next */
        (cov_jb0hfw6uy().s[115]++, step.actions.filter(a => {
          /* istanbul ignore next */
          cov_jb0hfw6uy().f[29]++;
          cov_jb0hfw6uy().s[116]++;
          return /* istanbul ignore next */(cov_jb0hfw6uy().b[31][0]++, a.type === 'view') ||
          /* istanbul ignore next */
          (cov_jb0hfw6uy().b[31][1]++, a.type === 'comment');
        }).length);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[117]++;
        return reviews > 0;
      // At least one review action
      case 'sign':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[30][2]++;
        cov_jb0hfw6uy().s[118]++;
        return step.actions.some(a => {
          /* istanbul ignore next */
          cov_jb0hfw6uy().f[30]++;
          cov_jb0hfw6uy().s[119]++;
          return a.type === 'sign';
        });
      default:
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[30][3]++;
        cov_jb0hfw6uy().s[120]++;
        return step.actions.length > 0;
    }
  }
  async completeStep(workflow, step) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[31]++;
    cov_jb0hfw6uy().s[121]++;
    step.status = 'completed';
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[122]++;
    step.completedAt = new Date();
    // Add to history
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[123]++;
    workflow.history.push({
      id: this.generateId(),
      timestamp: new Date(),
      event: 'step-completed',
      performedBy:
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[32][0]++, step.actions[step.actions.length - 1]?.performedBy) ||
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[32][1]++, workflow.initiator.id),
      details: {
        stepId: step.id,
        stepName: step.name
      }
    });
    // Move to next step or complete workflow
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[124]++;
    if (workflow.currentStepIndex < workflow.steps.length - 1) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[33][0]++;
      cov_jb0hfw6uy().s[125]++;
      workflow.currentStepIndex++;
      const nextStep =
      /* istanbul ignore next */
      (cov_jb0hfw6uy().s[126]++, workflow.steps[workflow.currentStepIndex]);
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[127]++;
      nextStep.status = 'in-progress';
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[128]++;
      nextStep.startedAt = new Date();
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[129]++;
      await this.notifyStepAssignees(workflow, nextStep);
    } else {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[33][1]++;
      cov_jb0hfw6uy().s[130]++;
      // Workflow completed
      workflow.status = 'completed';
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[131]++;
      workflow.completedAt = new Date();
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[132]++;
      workflow.history.push({
        id: this.generateId(),
        timestamp: new Date(),
        event: 'completed',
        performedBy: workflow.initiator.id,
        details: {}
      });
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[133]++;
      await this.notifyWorkflowCompletion(workflow);
    }
  }
  canUserPerformAction(workflow, step, userId, actionType) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[32]++;
    const participant =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[134]++, workflow.participants.find(p => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[33]++;
      cov_jb0hfw6uy().s[135]++;
      return p.userId === userId;
    }));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[136]++;
    if (!participant) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[34][0]++;
      cov_jb0hfw6uy().s[137]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[34][1]++;
    }
    // Check if user is assigned to this step
    const isAssignee =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[138]++,
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[35][0]++, step.assignees.includes(userId)) ||
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[35][1]++, step.reviewers.includes(userId)) ||
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[35][2]++, step.approvers.includes(userId)));
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[139]++;
    if (
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[37][0]++, !isAssignee) &&
    /* istanbul ignore next */
    (cov_jb0hfw6uy().b[37][1]++, !participant.delegatedTo)) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().b[36][0]++;
      cov_jb0hfw6uy().s[140]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_jb0hfw6uy().b[36][1]++;
    }
    // Check permissions based on action type
    cov_jb0hfw6uy().s[141]++;
    switch (actionType) {
      case 'approve':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[38][0]++;
        cov_jb0hfw6uy().s[142]++;
        return /* istanbul ignore next */(cov_jb0hfw6uy().b[39][0]++, participant.permissions.canApprove) &&
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[39][1]++, step.approvers.includes(userId));
      case 'comment':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[38][1]++;
        cov_jb0hfw6uy().s[143]++;
        return participant.permissions.canComment;
      case 'edit':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[38][2]++;
        cov_jb0hfw6uy().s[144]++;
        return participant.permissions.canEdit;
      case 'view':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[38][3]++;
        cov_jb0hfw6uy().s[145]++;
        return participant.permissions.canView;
      case 'delegate':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[38][4]++;
        cov_jb0hfw6uy().s[146]++;
        return participant.permissions.canDelegate;
      default:
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[38][5]++;
        cov_jb0hfw6uy().s[147]++;
        return true;
    }
  }
  async notifyStepAssignees(workflow, step) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[34]++;
    const assignees =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[148]++, [...step.assignees, ...step.reviewers, ...step.approvers]);
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[149]++;
    for (const userId of assignees) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[150]++;
      await this.notifications.sendNotification(userId, {
        type: 'task-assigned',
        title: 'New Task Assigned',
        message: `You have been assigned a task in workflow: ${workflow.name}`,
        workflowId: workflow.id,
        stepId: step.id
      });
    }
  }
  async notifyStepCompletion(workflow, step, result) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[35]++;
    cov_jb0hfw6uy().s[151]++;
    // Notify workflow participants
    for (const participant of workflow.participants) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[152]++;
      await this.notifications.sendNotification(participant.userId, {
        type: 'step-completed',
        title: `Workflow Step ${result}`,
        message: `Step "${step.name}" has been ${result} in workflow: ${workflow.name}`,
        workflowId: workflow.id,
        stepId: step.id
      });
    }
  }
  async notifyWorkflowCompletion(workflow) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[36]++;
    cov_jb0hfw6uy().s[153]++;
    // Notify all participants
    for (const participant of workflow.participants) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[154]++;
      await this.notifications.sendNotification(participant.userId, {
        type: 'workflow-completed',
        title: 'Workflow Completed',
        message: `Workflow "${workflow.name}" has been completed successfully.`,
        workflowId: workflow.id
      });
    }
  }
  startBackgroundTasks() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[37]++;
    cov_jb0hfw6uy().s[155]++;
    // Check for overdue tasks every hour
    setInterval(() => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[38]++;
      cov_jb0hfw6uy().s[156]++;
      this.checkOverdueTasks();
    }, 60 * 60 * 1000);
    // Send reminders every 4 hours
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[157]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_jb0hfw6uy().f[39]++;
      cov_jb0hfw6uy().s[158]++;
      this.sendReminders();
    }, 4 * 60 * 60 * 1000);
  }
  async checkOverdueTasks() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[40]++;
    const now =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[159]++, new Date());
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[160]++;
    for (const workflow of this.workflows.values()) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[161]++;
      if (workflow.status === 'in-review') {
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[40][0]++;
        const currentStep =
        /* istanbul ignore next */
        (cov_jb0hfw6uy().s[162]++, workflow.steps[workflow.currentStepIndex]);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[163]++;
        if (
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[42][0]++, currentStep) &&
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[42][1]++, currentStep.dueDate) &&
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[42][2]++, currentStep.dueDate < now)) {
          /* istanbul ignore next */
          cov_jb0hfw6uy().b[41][0]++;
          cov_jb0hfw6uy().s[164]++;
          await this.handleOverdueStep(workflow, currentStep);
        } else
        /* istanbul ignore next */
        {
          cov_jb0hfw6uy().b[41][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_jb0hfw6uy().b[40][1]++;
      }
    }
  }
  async handleOverdueStep(workflow, step) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[41]++;
    cov_jb0hfw6uy().s[165]++;
    // Apply escalation rules
    for (const rule of workflow.settings.escalationRules) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[166]++;
      if (rule.condition === 'overdue') {
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[43][0]++;
        cov_jb0hfw6uy().s[167]++;
        await this.applyEscalationRule(workflow, step, rule);
      } else
      /* istanbul ignore next */
      {
        cov_jb0hfw6uy().b[43][1]++;
      }
    }
  }
  async applyEscalationRule(workflow, step, rule) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[42]++;
    cov_jb0hfw6uy().s[168]++;
    switch (rule.action.type) {
      case 'notify-manager':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[44][0]++;
        cov_jb0hfw6uy().s[169]++;
        // Find managers of assignees and notify them
        for (const assigneeId of step.assignees) {
          const assignee =
          /* istanbul ignore next */
          (cov_jb0hfw6uy().s[170]++, this.users.get(assigneeId));
          /* istanbul ignore next */
          cov_jb0hfw6uy().s[171]++;
          if (assignee?.managerId) {
            /* istanbul ignore next */
            cov_jb0hfw6uy().b[45][0]++;
            cov_jb0hfw6uy().s[172]++;
            await this.notifications.sendNotification(assignee.managerId, {
              type: 'escalation',
              title: 'Overdue Task Escalation',
              message: `Task in workflow "${workflow.name}" is overdue and requires attention.`,
              workflowId: workflow.id,
              stepId: step.id
            });
          } else
          /* istanbul ignore next */
          {
            cov_jb0hfw6uy().b[45][1]++;
          }
        }
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[173]++;
        break;
      case 'reassign':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[44][1]++;
        cov_jb0hfw6uy().s[174]++;
        if (rule.action.targetUserId) {
          /* istanbul ignore next */
          cov_jb0hfw6uy().b[46][0]++;
          cov_jb0hfw6uy().s[175]++;
          step.assignees = [rule.action.targetUserId];
          /* istanbul ignore next */
          cov_jb0hfw6uy().s[176]++;
          await this.notifyStepAssignees(workflow, step);
        } else
        /* istanbul ignore next */
        {
          cov_jb0hfw6uy().b[46][1]++;
        }
        cov_jb0hfw6uy().s[177]++;
        break;
      case 'skip-step':
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[44][2]++;
        cov_jb0hfw6uy().s[178]++;
        step.status = 'skipped';
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[179]++;
        await this.completeStep(workflow, step);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[180]++;
        break;
    }
  }
  async sendReminders() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[43]++;
    const now =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[181]++, new Date());
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[182]++;
    for (const workflow of this.workflows.values()) {
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[183]++;
      if (
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[48][0]++, workflow.status === 'in-review') &&
      /* istanbul ignore next */
      (cov_jb0hfw6uy().b[48][1]++, workflow.settings.autoReminders)) {
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[47][0]++;
        const currentStep =
        /* istanbul ignore next */
        (cov_jb0hfw6uy().s[184]++, workflow.steps[workflow.currentStepIndex]);
        /* istanbul ignore next */
        cov_jb0hfw6uy().s[185]++;
        if (
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[50][0]++, currentStep) &&
        /* istanbul ignore next */
        (cov_jb0hfw6uy().b[50][1]++, currentStep.status === 'in-progress')) {
          /* istanbul ignore next */
          cov_jb0hfw6uy().b[49][0]++;
          const hoursSinceStart =
          /* istanbul ignore next */
          (cov_jb0hfw6uy().s[186]++, currentStep.startedAt ?
          /* istanbul ignore next */
          (cov_jb0hfw6uy().b[51][0]++, (now.getTime() - currentStep.startedAt.getTime()) / (1000 * 60 * 60)) :
          /* istanbul ignore next */
          (cov_jb0hfw6uy().b[51][1]++, 0));
          /* istanbul ignore next */
          cov_jb0hfw6uy().s[187]++;
          if (hoursSinceStart >= workflow.settings.reminderInterval) {
            /* istanbul ignore next */
            cov_jb0hfw6uy().b[52][0]++;
            cov_jb0hfw6uy().s[188]++;
            await this.sendStepReminders(workflow, currentStep);
          } else
          /* istanbul ignore next */
          {
            cov_jb0hfw6uy().b[52][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_jb0hfw6uy().b[49][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_jb0hfw6uy().b[47][1]++;
      }
    }
  }
  async sendStepReminders(workflow, step) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[44]++;
    const assignees =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[189]++, [...step.assignees, ...step.reviewers, ...step.approvers]);
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[190]++;
    for (const userId of assignees) {
      // Check if user has already completed their part
      const hasActed =
      /* istanbul ignore next */
      (cov_jb0hfw6uy().s[191]++, step.actions.some(a => {
        /* istanbul ignore next */
        cov_jb0hfw6uy().f[45]++;
        cov_jb0hfw6uy().s[192]++;
        return a.performedBy === userId;
      }));
      /* istanbul ignore next */
      cov_jb0hfw6uy().s[193]++;
      if (!hasActed) {
        /* istanbul ignore next */
        cov_jb0hfw6uy().b[53][0]++;
        cov_jb0hfw6uy().s[194]++;
        await this.notifications.sendNotification(userId, {
          type: 'reminder',
          title: 'Task Reminder',
          message: `Reminder: You have a pending task in workflow: ${workflow.name}`,
          workflowId: workflow.id,
          stepId: step.id
        });
      } else
      /* istanbul ignore next */
      {
        cov_jb0hfw6uy().b[53][1]++;
      }
    }
  }
  generateWorkflowId() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[46]++;
    cov_jb0hfw6uy().s[195]++;
    return `workflow_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateTemplateId() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[47]++;
    cov_jb0hfw6uy().s[196]++;
    return `template_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateId() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[48]++;
    cov_jb0hfw6uy().s[197]++;
    return `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  initializeBuiltinTemplates() {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[49]++;
    // Document Review Template
    const reviewTemplate =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[198]++, {
      id: 'document-review',
      name: 'Document Review',
      description: 'Standard document review workflow',
      category: 'Review',
      steps: [{
        name: 'Initial Review',
        type: 'review',
        assignees: [],
        reviewers: [],
        approvers: [],
        requirements: {
          requiredApprovals: 1,
          allowDelegation: true,
          requireComments: false,
          requiredFields: [],
          allowRevisions: true
        },
        conditions: {
          requiredPreviousSteps: [],
          parallelWith: []
        }
      }, {
        name: 'Manager Approval',
        type: 'approve',
        assignees: [],
        reviewers: [],
        approvers: [],
        requirements: {
          requiredApprovals: 1,
          allowDelegation: false,
          requireComments: true,
          requiredFields: [],
          allowRevisions: false
        },
        conditions: {
          requiredPreviousSteps: ['step_1'],
          parallelWith: []
        }
      }],
      defaultSettings: {
        allowParallelSteps: false,
        requireAllApprovals: true,
        autoReminders: true,
        reminderInterval: 24,
        escalationRules: []
      },
      createdBy: 'system',
      createdAt: new Date(),
      isPublic: true
    });
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[199]++;
    this.templates.set(reviewTemplate.id, reviewTemplate);
    // Contract Approval Template
    const contractTemplate =
    /* istanbul ignore next */
    (cov_jb0hfw6uy().s[200]++, {
      id: 'contract-approval',
      name: 'Contract Approval',
      description: 'Multi-stage contract approval process',
      category: 'Legal',
      steps: [{
        name: 'Legal Review',
        type: 'review',
        assignees: [],
        reviewers: [],
        approvers: [],
        requirements: {
          requiredApprovals: 1,
          allowDelegation: true,
          requireComments: true,
          requiredFields: [],
          allowRevisions: true
        },
        conditions: {
          requiredPreviousSteps: [],
          parallelWith: []
        }
      }, {
        name: 'Financial Review',
        type: 'review',
        assignees: [],
        reviewers: [],
        approvers: [],
        requirements: {
          requiredApprovals: 1,
          allowDelegation: true,
          requireComments: false,
          requiredFields: [],
          allowRevisions: true
        },
        conditions: {
          requiredPreviousSteps: [],
          parallelWith: ['step_1']
        }
      }, {
        name: 'Executive Approval',
        type: 'approve',
        assignees: [],
        reviewers: [],
        approvers: [],
        requirements: {
          requiredApprovals: 1,
          allowDelegation: false,
          requireComments: false,
          requiredFields: [],
          allowRevisions: false
        },
        conditions: {
          requiredPreviousSteps: ['step_1', 'step_2'],
          parallelWith: []
        }
      }, {
        name: 'Digital Signature',
        type: 'sign',
        assignees: [],
        reviewers: [],
        approvers: [],
        requirements: {
          requiredApprovals: 1,
          allowDelegation: false,
          requireComments: false,
          requiredFields: [],
          allowRevisions: false
        },
        conditions: {
          requiredPreviousSteps: ['step_3'],
          parallelWith: []
        }
      }],
      defaultSettings: {
        allowParallelSteps: true,
        requireAllApprovals: true,
        autoReminders: true,
        reminderInterval: 48,
        escalationRules: [{
          id: 'overdue-escalation',
          condition: 'overdue',
          trigger: {
            delay: 72
          },
          action: {
            type: 'notify-manager'
          }
        }]
      },
      createdBy: 'system',
      createdAt: new Date(),
      isPublic: true
    });
    /* istanbul ignore next */
    cov_jb0hfw6uy().s[201]++;
    this.templates.set(contractTemplate.id, contractTemplate);
  }
}
/* istanbul ignore next */
cov_jb0hfw6uy().s[202]++;
exports.DocumentWorkflowService = DocumentWorkflowService;
/**
 * Simple notification service for workflow notifications
 */
class NotificationService {
  async sendNotification(userId, notification) {
    /* istanbul ignore next */
    cov_jb0hfw6uy().f[50]++;
    cov_jb0hfw6uy().s[203]++;
    // In a real implementation, this would send emails, push notifications, etc.
    console.log(`Notification sent to ${userId}:`, notification);
  }
}
/* istanbul ignore next */
cov_jb0hfw6uy().s[204]++;
exports.default = DocumentWorkflowService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,