9ad443d47d646410172c3645684e9915
"use strict";

/* istanbul ignore next */
function cov_1fi0qah1uj() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedPDFAnalyticsService.ts";
  var hash = "0724f248869b2a7f5ac0118664f6b356ddc7397e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedPDFAnalyticsService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 45
        }
      },
      "2": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 34
        }
      },
      "3": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "4": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "5": {
        start: {
          line: 13,
          column: 40
        },
        end: {
          line: 16,
          column: 10
        }
      },
      "6": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 58
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "8": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 93
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "10": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "11": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "12": {
        start: {
          line: 28,
          column: 31
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "13": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "14": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "15": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 26
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "17": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "18": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "19": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "20": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 91
        }
      },
      "21": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "22": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "23": {
        start: {
          line: 45,
          column: 36
        },
        end: {
          line: 45,
          column: 63
        }
      },
      "24": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "25": {
        start: {
          line: 47,
          column: 35
        },
        end: {
          line: 47,
          column: 43
        }
      },
      "26": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 51
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 91
        }
      },
      "28": {
        start: {
          line: 50,
          column: 67
        },
        end: {
          line: 50,
          column: 82
        }
      },
      "29": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "30": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 55,
          column: 21
        }
      },
      "31": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 51
        }
      },
      "32": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 84
        }
      },
      "33": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "34": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 56
        }
      },
      "35": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 88
        }
      },
      "36": {
        start: {
          line: 64,
          column: 57
        },
        end: {
          line: 64,
          column: 79
        }
      },
      "37": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 84
        }
      },
      "38": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 56
        }
      },
      "39": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 74
        }
      },
      "40": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "41": {
        start: {
          line: 95,
          column: 66
        },
        end: {
          line: 95,
          column: 90
        }
      },
      "42": {
        start: {
          line: 116,
          column: 23
        },
        end: {
          line: 116,
          column: 25
        }
      },
      "43": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "44": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 118,
          column: 28
        }
      },
      "45": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "46": {
        start: {
          line: 120,
          column: 29
        },
        end: {
          line: 120,
          column: 55
        }
      },
      "47": {
        start: {
          line: 121,
          column: 36
        },
        end: {
          line: 121,
          column: 63
        }
      },
      "48": {
        start: {
          line: 122,
          column: 33
        },
        end: {
          line: 124,
          column: 30
        }
      },
      "49": {
        start: {
          line: 123,
          column: 35
        },
        end: {
          line: 123,
          column: 43
        }
      },
      "50": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 43
        }
      },
      "51": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 84
        }
      },
      "52": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "53": {
        start: {
          line: 158,
          column: 36
        },
        end: {
          line: 158,
          column: 77
        }
      },
      "54": {
        start: {
          line: 159,
          column: 41
        },
        end: {
          line: 159,
          column: 101
        }
      },
      "55": {
        start: {
          line: 160,
          column: 39
        },
        end: {
          line: 160,
          column: 83
        }
      },
      "56": {
        start: {
          line: 161,
          column: 35
        },
        end: {
          line: 161,
          column: 75
        }
      },
      "57": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "58": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 172,
          column: 46
        }
      },
      "59": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 173,
          column: 38
        }
      },
      "60": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 74
        }
      },
      "61": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 179,
          column: 23
        }
      },
      "62": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 23
        }
      },
      "63": {
        start: {
          line: 180,
          column: 29
        },
        end: {
          line: 180,
          column: 50
        }
      },
      "64": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 59
        }
      },
      "65": {
        start: {
          line: 185,
          column: 31
        },
        end: {
          line: 185,
          column: 54
        }
      },
      "66": {
        start: {
          line: 186,
          column: 31
        },
        end: {
          line: 186,
          column: 54
        }
      },
      "67": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 56
        }
      },
      "68": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 65
        }
      },
      "69": {
        start: {
          line: 191,
          column: 20
        },
        end: {
          line: 191,
          column: 23
        }
      },
      "70": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 194,
          column: 24
        }
      },
      "71": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 24
        }
      },
      "72": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 197,
          column: 24
        }
      },
      "73": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 24
        }
      },
      "74": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 199,
          column: 24
        }
      },
      "75": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 24
        }
      },
      "76": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 34
        }
      },
      "77": {
        start: {
          line: 204,
          column: 33
        },
        end: {
          line: 204,
          column: 52
        }
      },
      "78": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 50
        }
      },
      "79": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 79
        }
      },
      "80": {
        start: {
          line: 209,
          column: 29
        },
        end: {
          line: 209,
          column: 80
        }
      },
      "81": {
        start: {
          line: 210,
          column: 37
        },
        end: {
          line: 210,
          column: 72
        }
      },
      "82": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 211,
          column: 44
        }
      },
      "83": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 213,
          column: 26
        }
      },
      "84": {
        start: {
          line: 212,
          column: 41
        },
        end: {
          line: 212,
          column: 68
        }
      },
      "85": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 26
        }
      },
      "86": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 215,
          column: 31
        }
      },
      "87": {
        start: {
          line: 214,
          column: 41
        },
        end: {
          line: 214,
          column: 68
        }
      },
      "88": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 31
        }
      },
      "89": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 217,
          column: 34
        }
      },
      "90": {
        start: {
          line: 216,
          column: 49
        },
        end: {
          line: 216,
          column: 76
        }
      },
      "91": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 34
        }
      },
      "92": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 219,
          column: 29
        }
      },
      "93": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 29
        }
      },
      "94": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 22
        }
      },
      "95": {
        start: {
          line: 224,
          column: 30
        },
        end: {
          line: 224,
          column: 96
        }
      },
      "96": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 225,
          column: 90
        }
      },
      "97": {
        start: {
          line: 226,
          column: 29
        },
        end: {
          line: 226,
          column: 93
        }
      },
      "98": {
        start: {
          line: 227,
          column: 22
        },
        end: {
          line: 227,
          column: 53
        }
      },
      "99": {
        start: {
          line: 228,
          column: 29
        },
        end: {
          line: 228,
          column: 86
        }
      },
      "100": {
        start: {
          line: 228,
          column: 50
        },
        end: {
          line: 228,
          column: 78
        }
      },
      "101": {
        start: {
          line: 229,
          column: 29
        },
        end: {
          line: 229,
          column: 86
        }
      },
      "102": {
        start: {
          line: 229,
          column: 50
        },
        end: {
          line: 229,
          column: 78
        }
      },
      "103": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 230,
          column: 84
        }
      },
      "104": {
        start: {
          line: 230,
          column: 49
        },
        end: {
          line: 230,
          column: 76
        }
      },
      "105": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 232,
          column: 24
        }
      },
      "106": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 24
        }
      },
      "107": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 234,
          column: 24
        }
      },
      "108": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 24
        }
      },
      "109": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 236,
          column: 24
        }
      },
      "110": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 24
        }
      },
      "111": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 20
        }
      },
      "112": {
        start: {
          line: 240,
          column: 26
        },
        end: {
          line: 240,
          column: 53
        }
      },
      "113": {
        start: {
          line: 241,
          column: 22
        },
        end: {
          line: 241,
          column: 46
        }
      },
      "114": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 51
        }
      },
      "115": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 245,
          column: 21
        }
      },
      "116": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 21
        }
      },
      "117": {
        start: {
          line: 246,
          column: 36
        },
        end: {
          line: 246,
          column: 53
        }
      },
      "118": {
        start: {
          line: 247,
          column: 36
        },
        end: {
          line: 247,
          column: 53
        }
      },
      "119": {
        start: {
          line: 248,
          column: 22
        },
        end: {
          line: 248,
          column: 92
        }
      },
      "120": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 49
        }
      },
      "121": {
        start: {
          line: 253,
          column: 22
        },
        end: {
          line: 253,
          column: 64
        }
      },
      "122": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 257,
          column: 14
        }
      },
      "123": {
        start: {
          line: 255,
          column: 34
        },
        end: {
          line: 255,
          column: 71
        }
      },
      "124": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 54
        }
      },
      "125": {
        start: {
          line: 260,
          column: 22
        },
        end: {
          line: 263,
          column: 44
        }
      },
      "126": {
        start: {
          line: 263,
          column: 28
        },
        end: {
          line: 263,
          column: 43
        }
      },
      "127": {
        start: {
          line: 264,
          column: 26
        },
        end: {
          line: 264,
          column: 28
        }
      },
      "128": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 267,
          column: 11
        }
      },
      "129": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 57
        }
      },
      "130": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 271,
          column: 35
        }
      },
      "131": {
        start: {
          line: 269,
          column: 36
        },
        end: {
          line: 269,
          column: 41
        }
      },
      "132": {
        start: {
          line: 271,
          column: 29
        },
        end: {
          line: 271,
          column: 33
        }
      },
      "133": {
        start: {
          line: 275,
          column: 30
        },
        end: {
          line: 275,
          column: 84
        }
      },
      "134": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 276,
          column: 81
        }
      },
      "135": {
        start: {
          line: 277,
          column: 27
        },
        end: {
          line: 277,
          column: 82
        }
      },
      "136": {
        start: {
          line: 278,
          column: 26
        },
        end: {
          line: 278,
          column: 44
        }
      },
      "137": {
        start: {
          line: 279,
          column: 23
        },
        end: {
          line: 279,
          column: 25
        }
      },
      "138": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 281,
          column: 36
        }
      },
      "139": {
        start: {
          line: 280,
          column: 39
        },
        end: {
          line: 280,
          column: 63
        }
      },
      "140": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 36
        }
      },
      "141": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 283,
          column: 38
        }
      },
      "142": {
        start: {
          line: 282,
          column: 35
        },
        end: {
          line: 282,
          column: 59
        }
      },
      "143": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 38
        }
      },
      "144": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 285,
          column: 33
        }
      },
      "145": {
        start: {
          line: 284,
          column: 36
        },
        end: {
          line: 284,
          column: 60
        }
      },
      "146": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 33
        }
      },
      "147": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 22
        }
      },
      "148": {
        start: {
          line: 290,
          column: 30
        },
        end: {
          line: 290,
          column: 83
        }
      },
      "149": {
        start: {
          line: 291,
          column: 30
        },
        end: {
          line: 291,
          column: 77
        }
      },
      "150": {
        start: {
          line: 292,
          column: 22
        },
        end: {
          line: 292,
          column: 53
        }
      },
      "151": {
        start: {
          line: 293,
          column: 30
        },
        end: {
          line: 293,
          column: 87
        }
      },
      "152": {
        start: {
          line: 293,
          column: 51
        },
        end: {
          line: 293,
          column: 79
        }
      },
      "153": {
        start: {
          line: 294,
          column: 30
        },
        end: {
          line: 294,
          column: 87
        }
      },
      "154": {
        start: {
          line: 294,
          column: 51
        },
        end: {
          line: 294,
          column: 79
        }
      },
      "155": {
        start: {
          line: 295,
          column: 22
        },
        end: {
          line: 295,
          column: 51
        }
      },
      "156": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 297,
          column: 21
        }
      },
      "157": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 21
        }
      },
      "158": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 55
        }
      },
      "159": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 303,
          column: 22
        }
      },
      "160": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 22
        }
      },
      "161": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 305,
          column: 22
        }
      },
      "162": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 22
        }
      },
      "163": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 307,
          column: 22
        }
      },
      "164": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 22
        }
      },
      "165": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 18
        }
      },
      "166": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 64
        }
      },
      "167": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 48
        }
      },
      "168": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 56
        }
      },
      "169": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 47
        }
      },
      "170": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 50
        }
      },
      "171": {
        start: {
          line: 327,
          column: 31
        },
        end: {
          line: 327,
          column: 77
        }
      },
      "172": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 58
        }
      },
      "173": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 18
        }
      },
      "174": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 18
        }
      },
      "175": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 18
        }
      },
      "176": {
        start: {
          line: 345,
          column: 28
        },
        end: {
          line: 345,
          column: 30
        }
      },
      "177": {
        start: {
          line: 346,
          column: 31
        },
        end: {
          line: 346,
          column: 32
        }
      },
      "178": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "179": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 352,
          column: 15
        }
      },
      "180": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 55
        }
      },
      "181": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "182": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 360,
          column: 15
        }
      },
      "183": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 55
        }
      },
      "184": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 367,
          column: 10
        }
      },
      "185": {
        start: {
          line: 370,
          column: 23
        },
        end: {
          line: 370,
          column: 25
        }
      },
      "186": {
        start: {
          line: 371,
          column: 29
        },
        end: {
          line: 371,
          column: 31
        }
      },
      "187": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "188": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 377,
          column: 15
        }
      },
      "189": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 382,
          column: 15
        }
      },
      "190": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "191": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 389,
          column: 15
        }
      },
      "192": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 395,
          column: 10
        }
      },
      "193": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 407,
          column: 10
        }
      },
      "194": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 417,
          column: 10
        }
      },
      "195": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 57
        }
      },
      "196": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 59
        }
      },
      "197": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 35
        }
      },
      "198": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 436,
          column: 40
        }
      },
      "199": {
        start: {
          line: 439,
          column: 0
        },
        end: {
          line: 439,
          column: 66
        }
      },
      "200": {
        start: {
          line: 440,
          column: 0
        },
        end: {
          line: 440,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 41
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 25
          },
          end: {
            line: 47,
            column: 26
          }
        },
        loc: {
          start: {
            line: 47,
            column: 35
          },
          end: {
            line: 47,
            column: 43
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 59
          },
          end: {
            line: 50,
            column: 60
          }
        },
        loc: {
          start: {
            line: 50,
            column: 67
          },
          end: {
            line: 50,
            column: 82
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 42
          },
          end: {
            line: 52,
            column: 43
          }
        },
        loc: {
          start: {
            line: 52,
            column: 52
          },
          end: {
            line: 56,
            column: 17
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 64,
            column: 50
          }
        },
        loc: {
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 64,
            column: 79
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 57
          },
          end: {
            line: 95,
            column: 58
          }
        },
        loc: {
          start: {
            line: 95,
            column: 66
          },
          end: {
            line: 95,
            column: 90
          }
        },
        line: 95
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 53
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 115
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 123,
            column: 25
          },
          end: {
            line: 123,
            column: 26
          }
        },
        loc: {
          start: {
            line: 123,
            column: 35
          },
          end: {
            line: 123,
            column: 43
          }
        },
        line: 123
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 65
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 157
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 31
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 170
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 47
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 176
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 56
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 183
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 50
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 190
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 39
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 202
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 38
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 207
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 212,
            column: 30
          },
          end: {
            line: 212,
            column: 31
          }
        },
        loc: {
          start: {
            line: 212,
            column: 41
          },
          end: {
            line: 212,
            column: 68
          }
        },
        line: 212
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 214,
            column: 30
          },
          end: {
            line: 214,
            column: 31
          }
        },
        loc: {
          start: {
            line: 214,
            column: 41
          },
          end: {
            line: 214,
            column: 68
          }
        },
        line: 214
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 216,
            column: 38
          },
          end: {
            line: 216,
            column: 39
          }
        },
        loc: {
          start: {
            line: 216,
            column: 49
          },
          end: {
            line: 216,
            column: 76
          }
        },
        line: 216
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 25
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 222
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 228,
            column: 42
          },
          end: {
            line: 228,
            column: 43
          }
        },
        loc: {
          start: {
            line: 228,
            column: 50
          },
          end: {
            line: 228,
            column: 78
          }
        },
        line: 228
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 229,
            column: 42
          },
          end: {
            line: 229,
            column: 43
          }
        },
        loc: {
          start: {
            line: 229,
            column: 50
          },
          end: {
            line: 229,
            column: 78
          }
        },
        line: 229
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 230,
            column: 41
          },
          end: {
            line: 230,
            column: 42
          }
        },
        loc: {
          start: {
            line: 230,
            column: 49
          },
          end: {
            line: 230,
            column: 76
          }
        },
        line: 230
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 32
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 239
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 25
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 251
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 254,
            column: 28
          },
          end: {
            line: 254,
            column: 29
          }
        },
        loc: {
          start: {
            line: 254,
            column: 45
          },
          end: {
            line: 257,
            column: 9
          }
        },
        line: 254
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 259
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 263,
            column: 20
          },
          end: {
            line: 263,
            column: 21
          }
        },
        loc: {
          start: {
            line: 263,
            column: 28
          },
          end: {
            line: 263,
            column: 43
          }
        },
        line: 263
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 265,
            column: 22
          },
          end: {
            line: 265,
            column: 23
          }
        },
        loc: {
          start: {
            line: 265,
            column: 30
          },
          end: {
            line: 267,
            column: 9
          }
        },
        line: 265
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 269,
            column: 18
          },
          end: {
            line: 269,
            column: 19
          }
        },
        loc: {
          start: {
            line: 269,
            column: 36
          },
          end: {
            line: 269,
            column: 41
          }
        },
        line: 269
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 271,
            column: 17
          },
          end: {
            line: 271,
            column: 18
          }
        },
        loc: {
          start: {
            line: 271,
            column: 29
          },
          end: {
            line: 271,
            column: 33
          }
        },
        line: 271
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 25
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 273
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 280,
            column: 31
          },
          end: {
            line: 280,
            column: 32
          }
        },
        loc: {
          start: {
            line: 280,
            column: 39
          },
          end: {
            line: 280,
            column: 63
          }
        },
        line: 280
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 282,
            column: 27
          },
          end: {
            line: 282,
            column: 28
          }
        },
        loc: {
          start: {
            line: 282,
            column: 35
          },
          end: {
            line: 282,
            column: 59
          }
        },
        line: 282
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 284,
            column: 28
          },
          end: {
            line: 284,
            column: 29
          }
        },
        loc: {
          start: {
            line: 284,
            column: 36
          },
          end: {
            line: 284,
            column: 60
          }
        },
        line: 284
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 288
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 293,
            column: 43
          },
          end: {
            line: 293,
            column: 44
          }
        },
        loc: {
          start: {
            line: 293,
            column: 51
          },
          end: {
            line: 293,
            column: 79
          }
        },
        line: 293
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 294,
            column: 43
          },
          end: {
            line: 294,
            column: 44
          }
        },
        loc: {
          start: {
            line: 294,
            column: 51
          },
          end: {
            line: 294,
            column: 79
          }
        },
        line: 294
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 35
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 300
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        loc: {
          start: {
            line: 311,
            column: 32
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 311
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 22
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 314
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 317
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        loc: {
          start: {
            line: 320,
            column: 24
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 320
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 28
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 323
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 24
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 326
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 29
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 331
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        loc: {
          start: {
            line: 335,
            column: 30
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 335
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        loc: {
          start: {
            line: 339,
            column: 28
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 339
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 41
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 344
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 60
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 369
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 44
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 397
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 40
          },
          end: {
            line: 418,
            column: 5
          }
        },
        line: 409
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        },
        loc: {
          start: {
            line: 422,
            column: 49
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 422
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 29
          },
          end: {
            line: 430,
            column: 5
          }
        },
        line: 428
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 17
          },
          end: {
            line: 437,
            column: 5
          }
        },
        line: 434
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 67
          },
          end: {
            line: 37,
            column: 78
          }
        }, {
          start: {
            line: 37,
            column: 81
          },
          end: {
            line: 37,
            column: 91
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 55,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 55,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 64,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 64,
            column: 66
          }
        }, {
          start: {
            line: 64,
            column: 70
          },
          end: {
            line: 64,
            column: 79
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 179,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 179,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "4": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 194,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 194,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "5": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 197,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 197,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "6": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 199,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 199,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "7": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 213,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 213,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "8": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 215,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 215,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "9": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 217,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 217,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "10": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 219,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 219,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "11": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 30
          }
        }, {
          start: {
            line: 218,
            column: 34
          },
          end: {
            line: 218,
            column: 43
          }
        }],
        line: 218
      },
      "12": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 232,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 232,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "13": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 39
          }
        }, {
          start: {
            line: 231,
            column: 43
          },
          end: {
            line: 231,
            column: 69
          }
        }],
        line: 231
      },
      "14": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 234,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 234,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "15": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 236,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 236,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "16": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 245,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 245,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "17": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 244,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 244,
            column: 23
          }
        }, {
          start: {
            line: 244,
            column: 27
          },
          end: {
            line: 244,
            column: 42
          }
        }],
        line: 244
      },
      "18": {
        loc: {
          start: {
            line: 253,
            column: 22
          },
          end: {
            line: 253,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 22
          },
          end: {
            line: 253,
            column: 58
          }
        }, {
          start: {
            line: 253,
            column: 62
          },
          end: {
            line: 253,
            column: 64
          }
        }],
        line: 253
      },
      "19": {
        loc: {
          start: {
            line: 255,
            column: 34
          },
          end: {
            line: 255,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 34
          },
          end: {
            line: 255,
            column: 66
          }
        }, {
          start: {
            line: 255,
            column: 70
          },
          end: {
            line: 255,
            column: 71
          }
        }],
        line: 255
      },
      "20": {
        loc: {
          start: {
            line: 266,
            column: 31
          },
          end: {
            line: 266,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 31
          },
          end: {
            line: 266,
            column: 46
          }
        }, {
          start: {
            line: 266,
            column: 50
          },
          end: {
            line: 266,
            column: 51
          }
        }],
        line: 266
      },
      "21": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 281,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 281,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "22": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 283,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 283,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "23": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 285,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 285,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "24": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 297,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 297,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "25": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 303,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 303,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "26": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 305,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 305,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "27": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 307,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 307,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "28": {
        loc: {
          start: {
            line: 328,
            column: 15
          },
          end: {
            line: 328,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 32
          },
          end: {
            line: 328,
            column: 53
          }
        }, {
          start: {
            line: 328,
            column: 56
          },
          end: {
            line: 328,
            column: 57
          }
        }],
        line: 328
      },
      "29": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "30": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "31": {
        loc: {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "32": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedPDFAnalyticsService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedPDFAnalyticsService.ts"],
      sourcesContent: ["import { PDFDocumentProxy } from 'pdfjs-dist/types/src/display/api';\r\nimport { PDFDocument } from 'pdf-lib';\r\n\r\nexport interface DocumentMetrics {\r\n  fileSize: number;\r\n  pageDimensions: { width: number; height: number; orientation: 'portrait' | 'landscape' }[];\r\n  pageCount: number;\r\n  fontCount: number;\r\n  imageCount: number;\r\n  formFieldCount: number;\r\n  annotationCount: number;\r\n  signatureCount: number;\r\n  bookmarkCount: number;\r\n  layerCount: number;\r\n  securityFeatures: {\r\n    isEncrypted: boolean;\r\n    hasDigitalSignatures: boolean;\r\n    hasWatermarks: boolean;\r\n    hasRedactions: boolean;\r\n    permissionLevel: string;\r\n  };\r\n  contentAnalysis: {\r\n    textDensity: number;\r\n    imageDensity: number;\r\n    averageWordsPerPage: number;\r\n    mostCommonFonts: Array<{ name: string; usage: number }>;\r\n    colorSpaceUsage: Array<{ type: string; percentage: number }>;\r\n  };\r\n  qualityMetrics: {\r\n    textClarity: number;\r\n    imageQuality: number;\r\n    structuralComplexity: number;\r\n    accessibilityScore: number;\r\n  };\r\n  performance: {\r\n    loadTime: number;\r\n    renderTime: number;\r\n    memoryUsage: number;\r\n    compressionRatio?: number;\r\n  };\r\n}\r\n\r\nexport interface DocumentIntelligence {\r\n  documentType: 'text' | 'form' | 'presentation' | 'technical' | 'mixed' | 'scanned';\r\n  language: string;\r\n  readingLevel: number;\r\n  keywords: string[];\r\n  topics: string[];\r\n  sentimentScore?: number;\r\n  confidenceLevel: number;\r\n  contentStructure: {\r\n    hasTableOfContents: boolean;\r\n    hasIndex: boolean;\r\n    hasHeaders: boolean;\r\n    hasFooters: boolean;\r\n    hasPageNumbers: boolean;\r\n    sectionCount: number;\r\n  };\r\n  dataExtraction: {\r\n    tables: Array<{ page: number; rows: number; cols: number; data?: any[][] }>;\r\n    figures: Array<{ page: number; type: 'chart' | 'image' | 'diagram'; description?: string }>;\r\n    forms: Array<{ page: number; fields: Array<{ name: string; type: string; value?: string }> }>;\r\n  };\r\n}\r\n\r\nexport interface OptimizationSuggestions {\r\n  fileSize: {\r\n    currentSize: number;\r\n    potentialSavings: number;\r\n    suggestions: Array<{ action: string; impact: 'high' | 'medium' | 'low'; description: string }>;\r\n  };\r\n  accessibility: {\r\n    currentScore: number;\r\n    issues: Array<{ type: string; severity: 'error' | 'warning' | 'info'; page?: number; description: string }>;\r\n    improvements: Array<{ action: string; impact: string; description: string }>;\r\n  };\r\n  performance: {\r\n    renderingOptimizations: Array<{ action: string; benefit: string }>;\r\n    memoryOptimizations: Array<{ action: string; benefit: string }>;\r\n  };\r\n  quality: {\r\n    imageOptimizations: Array<{ page: number; action: string; benefit: string }>;\r\n    fontOptimizations: Array<{ action: string; benefit: string }>;\r\n  };\r\n}\r\n\r\nexport class AdvancedPDFAnalyticsService {\r\n  private performanceMetrics: Map<string, number> = new Map();\r\n  private documentCache: Map<string, DocumentMetrics> = new Map();\r\n\r\n  /**\r\n   * Perform comprehensive document analysis\r\n   */\r\n  async analyzeDocument(\r\n    pdf: PDFDocumentProxy, \r\n    pdfBytes: Uint8Array\r\n  ): Promise<{ metrics: DocumentMetrics; intelligence: DocumentIntelligence; suggestions: OptimizationSuggestions }> {\r\n    const startTime = performance.now();\r\n\r\n    // Parallel analysis for better performance\r\n    const [metrics, intelligence] = await Promise.all([\r\n      this.calculateDocumentMetrics(pdf, pdfBytes),\r\n      this.performDocumentIntelligence(pdf, pdfBytes)\r\n    ]);\r\n\r\n    const analysisTime = performance.now() - startTime;\r\n    metrics.performance.loadTime = analysisTime;\r\n\r\n    const suggestions = await this.generateOptimizationSuggestions(metrics, intelligence);\r\n\r\n    return { metrics, intelligence, suggestions };\r\n  }\r\n\r\n  /**\r\n   * Calculate comprehensive document metrics\r\n   */\r\n  private async calculateDocumentMetrics(pdf: PDFDocumentProxy, pdfBytes: Uint8Array): Promise<DocumentMetrics> {\r\n    const startTime = performance.now();\r\n\r\n    const pageDimensions: { width: number; height: number; orientation: 'portrait' | 'landscape' }[] = [];\r\n    let totalTextContent = '';\r\n    let fontSet = new Set<string>();\r\n    let imageCount = 0;\r\n    let totalWords = 0;\r\n\r\n    // Analyze each page\r\n    for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\r\n      const page = await pdf.getPage(pageNum);\r\n      const viewport = page.getViewport({ scale: 1.0 });\r\n      \r\n      // Page dimensions\r\n      const orientation = viewport.width > viewport.height ? 'landscape' : 'portrait';\r\n      pageDimensions.push({\r\n        width: viewport.width,\r\n        height: viewport.height,\r\n        orientation\r\n      });\r\n\r\n      // Text content analysis\r\n      try {\r\n        const textContent = await page.getTextContent();\r\n        const pageText = textContent.items\r\n          .map((item: any) => item.str)\r\n          .join(' ');\r\n        \r\n        totalTextContent += pageText + ' ';\r\n        totalWords += pageText.split(/\\s+/).filter(word => word.length > 0).length;\r\n\r\n        // Font analysis\r\n        textContent.items.forEach((item: any) => {\r\n          if (item.fontName) {\r\n            fontSet.add(item.fontName);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.warn(`Could not extract text from page ${pageNum}:`, error);\r\n      }\r\n\r\n      // Image analysis (simplified - would need more advanced detection)\r\n      try {\r\n        const ops = await page.getOperatorList();\r\n        imageCount += ops.fnArray.filter((fn: number) => fn === 71 || fn === 74).length; // OPS.paintJpegXObject, OPS.paintImageXObject\r\n      } catch (error) {\r\n        console.warn(`Could not analyze images on page ${pageNum}:`, error);\r\n      }\r\n    }\r\n\r\n    const renderTime = performance.now() - startTime;\r\n\r\n    // Memory usage estimation (simplified)\r\n    const memoryUsage = pdfBytes.length + (pdf.numPages * 1024 * 1024); // Rough estimate\r\n\r\n    return {\r\n      fileSize: pdfBytes.length,\r\n      pageDimensions,\r\n      pageCount: pdf.numPages,\r\n      fontCount: fontSet.size,\r\n      imageCount,\r\n      formFieldCount: 0, // Would need form analysis\r\n      annotationCount: 0, // Would need annotation parsing\r\n      signatureCount: 0, // Would need signature detection\r\n      bookmarkCount: 0, // Would need outline parsing\r\n      layerCount: 0, // Would need layer detection\r\n      securityFeatures: {\r\n        isEncrypted: false, // Would need encryption detection\r\n        hasDigitalSignatures: false,\r\n        hasWatermarks: false,\r\n        hasRedactions: false,\r\n        permissionLevel: 'full'\r\n      },\r\n      contentAnalysis: {\r\n        textDensity: totalTextContent.length / pdf.numPages,\r\n        imageDensity: imageCount / pdf.numPages,\r\n        averageWordsPerPage: totalWords / pdf.numPages,\r\n        mostCommonFonts: Array.from(fontSet).map(font => ({ name: font, usage: 1 })),\r\n        colorSpaceUsage: [{ type: 'RGB', percentage: 100 }] // Simplified\r\n      },\r\n      qualityMetrics: {\r\n        textClarity: this.calculateTextClarity(totalTextContent),\r\n        imageQuality: this.estimateImageQuality(imageCount, pdfBytes.length),\r\n        structuralComplexity: this.calculateStructuralComplexity(pdf.numPages, fontSet.size, imageCount),\r\n        accessibilityScore: this.calculateAccessibilityScore(totalTextContent, imageCount)\r\n      },\r\n      performance: {\r\n        loadTime: 0, // Will be set by caller\r\n        renderTime,\r\n        memoryUsage,\r\n        compressionRatio: this.estimateCompressionRatio(pdfBytes)\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Perform advanced document intelligence analysis\r\n   */\r\n  private async performDocumentIntelligence(pdf: PDFDocumentProxy, pdfBytes: Uint8Array): Promise<DocumentIntelligence> {\r\n    let fullText = '';\r\n    \r\n    // Extract all text\r\n    for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\r\n      try {\r\n        const page = await pdf.getPage(pageNum);\r\n        const textContent = await page.getTextContent();\r\n        const pageText = textContent.items\r\n          .map((item: any) => item.str)\r\n          .join(' ');\r\n        fullText += pageText + ' ';\r\n      } catch (error) {\r\n        console.warn(`Could not extract text from page ${pageNum}:`, error);\r\n      }\r\n    }\r\n\r\n    return {\r\n      documentType: this.classifyDocumentType(fullText, pdf.numPages),\r\n      language: this.detectLanguage(fullText),\r\n      readingLevel: this.calculateReadingLevel(fullText),\r\n      keywords: this.extractKeywords(fullText),\r\n      topics: this.identifyTopics(fullText),\r\n      sentimentScore: this.analyzeSentiment(fullText),\r\n      confidenceLevel: this.calculateConfidenceLevel(fullText),\r\n      contentStructure: {\r\n        hasTableOfContents: this.detectTableOfContents(fullText),\r\n        hasIndex: this.detectIndex(fullText),\r\n        hasHeaders: this.detectHeaders(fullText),\r\n        hasFooters: this.detectFooters(fullText),\r\n        hasPageNumbers: this.detectPageNumbers(fullText),\r\n        sectionCount: this.countSections(fullText)\r\n      },\r\n      dataExtraction: {\r\n        tables: await this.extractTables(pdf),\r\n        figures: await this.extractFigures(pdf),\r\n        forms: await this.extractForms(pdf)\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generate optimization suggestions\r\n   */\r\n  private async generateOptimizationSuggestions(\r\n    metrics: DocumentMetrics, \r\n    intelligence: DocumentIntelligence\r\n  ): Promise<OptimizationSuggestions> {\r\n    const fileSizeSuggestions = this.generateFileSizeSuggestions(metrics);\r\n    const accessibilitySuggestions = this.generateAccessibilitySuggestions(metrics, intelligence);\r\n    const performanceSuggestions = this.generatePerformanceSuggestions(metrics);\r\n    const qualitySuggestions = this.generateQualitySuggestions(metrics);\r\n\r\n    return {\r\n      fileSize: fileSizeSuggestions,\r\n      accessibility: accessibilitySuggestions,\r\n      performance: performanceSuggestions,\r\n      quality: qualitySuggestions\r\n    };\r\n  }\r\n\r\n  // Helper methods for various calculations and analyses\r\n\r\n  private calculateTextClarity(text: string): number {\r\n    // Simple heuristic based on character variety and length\r\n    const uniqueChars = new Set(text).size;\r\n    const totalChars = text.length;\r\n    return Math.min(100, (uniqueChars / Math.sqrt(totalChars)) * 100);\r\n  }\r\n\r\n  private estimateImageQuality(imageCount: number, fileSize: number): number {\r\n    // Simple heuristic - more images with larger file size suggests higher quality\r\n    if (imageCount === 0) return 100;\r\n    const avgImageSize = fileSize / imageCount;\r\n    return Math.min(100, (avgImageSize / 50000) * 100); // 50KB as baseline\r\n  }\r\n\r\n  private calculateStructuralComplexity(pages: number, fonts: number, images: number): number {\r\n    // Complexity based on various elements\r\n    const pageComplexity = Math.min(50, pages * 2);\r\n    const fontComplexity = Math.min(30, fonts * 5);\r\n    const imageComplexity = Math.min(20, images * 2);\r\n    return pageComplexity + fontComplexity + imageComplexity;\r\n  }\r\n\r\n  private calculateAccessibilityScore(text: string, imageCount: number): number {\r\n    let score = 100;\r\n    \r\n    // Reduce score for images without alt text (simplified)\r\n    if (imageCount > 0) score -= 20;\r\n    \r\n    // Reduce score for very short or very long texts\r\n    if (text.length < 100) score -= 30;\r\n    if (text.length > 100000) score -= 10;\r\n    \r\n    return Math.max(0, score);\r\n  }\r\n\r\n  private estimateCompressionRatio(pdfBytes: Uint8Array): number {\r\n    // Simplified compression ratio estimation\r\n    const uncompressedSize = pdfBytes.length * 3; // Rough estimate\r\n    return pdfBytes.length / uncompressedSize;\r\n  }\r\n\r\n  private classifyDocumentType(text: string, pages: number): DocumentIntelligence['documentType'] {\r\n    const formKeywords = ['form', 'application', 'survey', 'questionnaire'];\r\n    const techKeywords = ['specification', 'manual', 'documentation', 'API'];\r\n    const presentationKeywords = ['slide', 'presentation', 'agenda'];\r\n    \r\n    const lowerText = text.toLowerCase();\r\n    \r\n    if (formKeywords.some(keyword => lowerText.includes(keyword))) return 'form';\r\n    if (techKeywords.some(keyword => lowerText.includes(keyword))) return 'technical';\r\n    if (presentationKeywords.some(keyword => lowerText.includes(keyword))) return 'presentation';\r\n    if (text.length < 1000 && pages < 5) return 'scanned';\r\n    \r\n    return 'text';\r\n  }\r\n\r\n  private detectLanguage(text: string): string {\r\n    // Simple language detection based on common words\r\n    const commonEnglish = ['the', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'with'];\r\n    const commonSpanish = ['el', 'la', 'de', 'que', 'y', 'en', 'un', 'es', 'se', 'no'];\r\n    const commonFrench = ['le', 'de', 'et', '\xE0', 'un', 'il', '\xEAtre', 'et', 'en', 'avoir'];\r\n    \r\n    const words = text.toLowerCase().split(/\\s+/);\r\n    const englishCount = words.filter(word => commonEnglish.includes(word)).length;\r\n    const spanishCount = words.filter(word => commonSpanish.includes(word)).length;\r\n    const frenchCount = words.filter(word => commonFrench.includes(word)).length;\r\n    \r\n    if (englishCount > spanishCount && englishCount > frenchCount) return 'en';\r\n    if (spanishCount > frenchCount) return 'es';\r\n    if (frenchCount > 0) return 'fr';\r\n    \r\n    return 'en'; // Default to English\r\n  }\r\n\r\n  private calculateReadingLevel(text: string): number {\r\n    const sentences = text.split(/[.!?]+/).length;\r\n    const words = text.split(/\\s+/).length;\r\n    const syllables = this.countSyllables(text);\r\n    \r\n    // Flesch Reading Ease score (simplified)\r\n    if (words === 0 || sentences === 0) return 0;\r\n    \r\n    const avgWordsPerSentence = words / sentences;\r\n    const avgSyllablesPerWord = syllables / words;\r\n    \r\n    const score = 206.835 - (1.015 * avgWordsPerSentence) - (84.6 * avgSyllablesPerWord);\r\n    return Math.max(0, Math.min(100, score));\r\n  }\r\n\r\n  private countSyllables(text: string): number {\r\n    // Simple syllable counting heuristic\r\n    const words = text.toLowerCase().match(/\\b\\w+\\b/g) || [];\r\n    return words.reduce((total, word) => {\r\n      const syllableCount = word.match(/[aeiouy]+/g)?.length || 1;\r\n      return total + Math.max(1, syllableCount);\r\n    }, 0);\r\n  }\r\n\r\n  private extractKeywords(text: string): string[] {\r\n    const words = text.toLowerCase()\r\n      .replace(/[^\\w\\s]/g, '')\r\n      .split(/\\s+/)\r\n      .filter(word => word.length > 3);\r\n    \r\n    const frequency: { [key: string]: number } = {};\r\n    words.forEach(word => {\r\n      frequency[word] = (frequency[word] || 0) + 1;\r\n    });\r\n    \r\n    return Object.entries(frequency)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 10)\r\n      .map(([word]) => word);\r\n  }\r\n\r\n  private identifyTopics(text: string): string[] {\r\n    // Simple topic identification based on keyword clusters\r\n    const businessWords = ['business', 'company', 'market', 'revenue', 'profit'];\r\n    const techWords = ['technology', 'software', 'system', 'data', 'digital'];\r\n    const legalWords = ['legal', 'contract', 'agreement', 'law', 'regulation'];\r\n    \r\n    const lowerText = text.toLowerCase();\r\n    const topics: string[] = [];\r\n    \r\n    if (businessWords.some(word => lowerText.includes(word))) topics.push('Business');\r\n    if (techWords.some(word => lowerText.includes(word))) topics.push('Technology');\r\n    if (legalWords.some(word => lowerText.includes(word))) topics.push('Legal');\r\n    \r\n    return topics;\r\n  }\r\n\r\n  private analyzeSentiment(text: string): number {\r\n    // Simple sentiment analysis\r\n    const positiveWords = ['good', 'great', 'excellent', 'positive', 'success'];\r\n    const negativeWords = ['bad', 'poor', 'negative', 'problem', 'issue'];\r\n    \r\n    const words = text.toLowerCase().split(/\\s+/);\r\n    const positiveCount = words.filter(word => positiveWords.includes(word)).length;\r\n    const negativeCount = words.filter(word => negativeWords.includes(word)).length;\r\n    \r\n    const total = positiveCount + negativeCount;\r\n    if (total === 0) return 0;\r\n    \r\n    return (positiveCount - negativeCount) / total;\r\n  }\r\n\r\n  private calculateConfidenceLevel(text: string): number {\r\n    // Confidence based on text length and structure\r\n    if (text.length < 100) return 30;\r\n    if (text.length < 1000) return 60;\r\n    if (text.length < 10000) return 80;\r\n    return 95;\r\n  }\r\n\r\n  // Content structure detection methods\r\n  private detectTableOfContents(text: string): boolean {\r\n    return /table\\s+of\\s+contents|contents|toc/i.test(text);\r\n  }\r\n\r\n  private detectIndex(text: string): boolean {\r\n    return /index|alphabetical/i.test(text);\r\n  }\r\n\r\n  private detectHeaders(text: string): boolean {\r\n    return /chapter|section|part\\s+\\d+/i.test(text);\r\n  }\r\n\r\n  private detectFooters(text: string): boolean {\r\n    return /page\\s+\\d+|footer/i.test(text);\r\n  }\r\n\r\n  private detectPageNumbers(text: string): boolean {\r\n    return /\\b\\d+\\s*$|page\\s+\\d+/m.test(text);\r\n  }\r\n\r\n  private countSections(text: string): number {\r\n    const sectionMarkers = text.match(/\\b(chapter|section|part)\\s+\\d+/gi);\r\n    return sectionMarkers ? sectionMarkers.length : 1;\r\n  }\r\n\r\n  // Data extraction methods (simplified implementations)\r\n  private async extractTables(pdf: PDFDocumentProxy): Promise<Array<{ page: number; rows: number; cols: number; data?: any[][] }>> {\r\n    // Would need advanced table detection algorithms\r\n    return [];\r\n  }\r\n\r\n  private async extractFigures(pdf: PDFDocumentProxy): Promise<Array<{ page: number; type: 'chart' | 'image' | 'diagram'; description?: string }>> {\r\n    // Would need image analysis and OCR\r\n    return [];\r\n  }\r\n\r\n  private async extractForms(pdf: PDFDocumentProxy): Promise<Array<{ page: number; fields: Array<{ name: string; type: string; value?: string }> }>> {\r\n    // Would need form field detection\r\n    return [];\r\n  }\r\n\r\n  // Suggestion generation methods\r\n  private generateFileSizeSuggestions(metrics: DocumentMetrics): OptimizationSuggestions['fileSize'] {\r\n    const suggestions = [];\r\n    let potentialSavings = 0;\r\n\r\n    if (metrics.imageCount > 5) {\r\n      suggestions.push({\r\n        action: 'Optimize images',\r\n        impact: 'high' as const,\r\n        description: `Reduce image quality and size. Could save up to ${Math.round(metrics.fileSize * 0.3)} bytes.`\r\n      });\r\n      potentialSavings += metrics.fileSize * 0.3;\r\n    }\r\n\r\n    if (metrics.fontCount > 10) {\r\n      suggestions.push({\r\n        action: 'Reduce font variety',\r\n        impact: 'medium' as const,\r\n        description: 'Using fewer fonts can reduce file size.'\r\n      });\r\n      potentialSavings += metrics.fileSize * 0.1;\r\n    }\r\n\r\n    return {\r\n      currentSize: metrics.fileSize,\r\n      potentialSavings,\r\n      suggestions\r\n    };\r\n  }\r\n\r\n  private generateAccessibilitySuggestions(metrics: DocumentMetrics, intelligence: DocumentIntelligence): OptimizationSuggestions['accessibility'] {\r\n    const issues = [];\r\n    const improvements = [];\r\n\r\n    if (metrics.imageCount > 0) {\r\n      issues.push({\r\n        type: 'Missing alt text',\r\n        severity: 'warning' as const,\r\n        description: 'Images may not have alternative text descriptions'\r\n      });\r\n      improvements.push({\r\n        action: 'Add alt text to images',\r\n        impact: 'High accessibility improvement',\r\n        description: 'Provide text descriptions for all images'\r\n      });\r\n    }\r\n\r\n    if (!intelligence.contentStructure.hasHeaders) {\r\n      issues.push({\r\n        type: 'No heading structure',\r\n        severity: 'error' as const,\r\n        description: 'Document lacks proper heading structure'\r\n      });\r\n    }\r\n\r\n    return {\r\n      currentScore: metrics.qualityMetrics.accessibilityScore,\r\n      issues,\r\n      improvements\r\n    };\r\n  }\r\n\r\n  private generatePerformanceSuggestions(metrics: DocumentMetrics): OptimizationSuggestions['performance'] {\r\n    return {\r\n      renderingOptimizations: [\r\n        { action: 'Enable page streaming', benefit: 'Faster initial display' },\r\n        { action: 'Optimize page layout', benefit: 'Smoother scrolling' }\r\n      ],\r\n      memoryOptimizations: [\r\n        { action: 'Implement virtual scrolling', benefit: 'Reduced memory usage for large documents' },\r\n        { action: 'Cache frequently accessed pages', benefit: 'Faster navigation' }\r\n      ]\r\n    };\r\n  }\r\n\r\n  private generateQualitySuggestions(metrics: DocumentMetrics): OptimizationSuggestions['quality'] {\r\n    return {\r\n      imageOptimizations: [\r\n        { page: 1, action: 'Increase resolution', benefit: 'Better image quality' }\r\n      ],\r\n      fontOptimizations: [\r\n        { action: 'Embed standard fonts', benefit: 'Consistent appearance across devices' }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Track performance metrics\r\n   */\r\n  recordPerformanceMetric(operation: string, duration: number): void {\r\n    this.performanceMetrics.set(operation, duration);\r\n  }\r\n\r\n  /**\r\n   * Get performance insights\r\n   */\r\n  getPerformanceInsights(): { [operation: string]: number } {\r\n    return Object.fromEntries(this.performanceMetrics);\r\n  }\r\n\r\n  /**\r\n   * Clear analytics cache\r\n   */\r\n  clearCache(): void {\r\n    this.documentCache.clear();\r\n    this.performanceMetrics.clear();\r\n  }\r\n}\r\n\r\nexport default AdvancedPDFAnalyticsService;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0724f248869b2a7f5ac0118664f6b356ddc7397e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fi0qah1uj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fi0qah1uj();
cov_1fi0qah1uj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fi0qah1uj().s[1]++;
exports.AdvancedPDFAnalyticsService = void 0;
class AdvancedPDFAnalyticsService {
  performanceMetrics =
  /* istanbul ignore next */
  (cov_1fi0qah1uj().s[2]++, new Map());
  documentCache =
  /* istanbul ignore next */
  (cov_1fi0qah1uj().s[3]++, new Map());
  /**
   * Perform comprehensive document analysis
   */
  async analyzeDocument(pdf, pdfBytes) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[0]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[4]++, performance.now());
    // Parallel analysis for better performance
    const [metrics, intelligence] =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[5]++, await Promise.all([this.calculateDocumentMetrics(pdf, pdfBytes), this.performDocumentIntelligence(pdf, pdfBytes)]));
    const analysisTime =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[6]++, performance.now() - startTime);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[7]++;
    metrics.performance.loadTime = analysisTime;
    const suggestions =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[8]++, await this.generateOptimizationSuggestions(metrics, intelligence));
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[9]++;
    return {
      metrics,
      intelligence,
      suggestions
    };
  }
  /**
   * Calculate comprehensive document metrics
   */
  async calculateDocumentMetrics(pdf, pdfBytes) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[1]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[10]++, performance.now());
    const pageDimensions =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[11]++, []);
    let totalTextContent =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[12]++, '');
    let fontSet =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[13]++, new Set());
    let imageCount =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[14]++, 0);
    let totalWords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[15]++, 0);
    // Analyze each page
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[16]++;
    for (let pageNum =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[17]++, 1); pageNum <= pdf.numPages; pageNum++) {
      const page =
      /* istanbul ignore next */
      (cov_1fi0qah1uj().s[18]++, await pdf.getPage(pageNum));
      const viewport =
      /* istanbul ignore next */
      (cov_1fi0qah1uj().s[19]++, page.getViewport({
        scale: 1.0
      }));
      // Page dimensions
      const orientation =
      /* istanbul ignore next */
      (cov_1fi0qah1uj().s[20]++, viewport.width > viewport.height ?
      /* istanbul ignore next */
      (cov_1fi0qah1uj().b[0][0]++, 'landscape') :
      /* istanbul ignore next */
      (cov_1fi0qah1uj().b[0][1]++, 'portrait'));
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[21]++;
      pageDimensions.push({
        width: viewport.width,
        height: viewport.height,
        orientation
      });
      // Text content analysis
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[22]++;
      try {
        const textContent =
        /* istanbul ignore next */
        (cov_1fi0qah1uj().s[23]++, await page.getTextContent());
        const pageText =
        /* istanbul ignore next */
        (cov_1fi0qah1uj().s[24]++, textContent.items.map(item => {
          /* istanbul ignore next */
          cov_1fi0qah1uj().f[2]++;
          cov_1fi0qah1uj().s[25]++;
          return item.str;
        }).join(' '));
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[26]++;
        totalTextContent += pageText + ' ';
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[27]++;
        totalWords += pageText.split(/\s+/).filter(word => {
          /* istanbul ignore next */
          cov_1fi0qah1uj().f[3]++;
          cov_1fi0qah1uj().s[28]++;
          return word.length > 0;
        }).length;
        // Font analysis
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[29]++;
        textContent.items.forEach(item => {
          /* istanbul ignore next */
          cov_1fi0qah1uj().f[4]++;
          cov_1fi0qah1uj().s[30]++;
          if (item.fontName) {
            /* istanbul ignore next */
            cov_1fi0qah1uj().b[1][0]++;
            cov_1fi0qah1uj().s[31]++;
            fontSet.add(item.fontName);
          } else
          /* istanbul ignore next */
          {
            cov_1fi0qah1uj().b[1][1]++;
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[32]++;
        console.warn(`Could not extract text from page ${pageNum}:`, error);
      }
      // Image analysis (simplified - would need more advanced detection)
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[33]++;
      try {
        const ops =
        /* istanbul ignore next */
        (cov_1fi0qah1uj().s[34]++, await page.getOperatorList());
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[35]++;
        imageCount += ops.fnArray.filter(fn => {
          /* istanbul ignore next */
          cov_1fi0qah1uj().f[5]++;
          cov_1fi0qah1uj().s[36]++;
          return /* istanbul ignore next */(cov_1fi0qah1uj().b[2][0]++, fn === 71) ||
          /* istanbul ignore next */
          (cov_1fi0qah1uj().b[2][1]++, fn === 74);
        }).length; // OPS.paintJpegXObject, OPS.paintImageXObject
      } catch (error) {
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[37]++;
        console.warn(`Could not analyze images on page ${pageNum}:`, error);
      }
    }
    const renderTime =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[38]++, performance.now() - startTime);
    // Memory usage estimation (simplified)
    const memoryUsage =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[39]++, pdfBytes.length + pdf.numPages * 1024 * 1024); // Rough estimate
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[40]++;
    return {
      fileSize: pdfBytes.length,
      pageDimensions,
      pageCount: pdf.numPages,
      fontCount: fontSet.size,
      imageCount,
      formFieldCount: 0,
      // Would need form analysis
      annotationCount: 0,
      // Would need annotation parsing
      signatureCount: 0,
      // Would need signature detection
      bookmarkCount: 0,
      // Would need outline parsing
      layerCount: 0,
      // Would need layer detection
      securityFeatures: {
        isEncrypted: false,
        // Would need encryption detection
        hasDigitalSignatures: false,
        hasWatermarks: false,
        hasRedactions: false,
        permissionLevel: 'full'
      },
      contentAnalysis: {
        textDensity: totalTextContent.length / pdf.numPages,
        imageDensity: imageCount / pdf.numPages,
        averageWordsPerPage: totalWords / pdf.numPages,
        mostCommonFonts: Array.from(fontSet).map(font => {
          /* istanbul ignore next */
          cov_1fi0qah1uj().f[6]++;
          cov_1fi0qah1uj().s[41]++;
          return {
            name: font,
            usage: 1
          };
        }),
        colorSpaceUsage: [{
          type: 'RGB',
          percentage: 100
        }] // Simplified
      },
      qualityMetrics: {
        textClarity: this.calculateTextClarity(totalTextContent),
        imageQuality: this.estimateImageQuality(imageCount, pdfBytes.length),
        structuralComplexity: this.calculateStructuralComplexity(pdf.numPages, fontSet.size, imageCount),
        accessibilityScore: this.calculateAccessibilityScore(totalTextContent, imageCount)
      },
      performance: {
        loadTime: 0,
        // Will be set by caller
        renderTime,
        memoryUsage,
        compressionRatio: this.estimateCompressionRatio(pdfBytes)
      }
    };
  }
  /**
   * Perform advanced document intelligence analysis
   */
  async performDocumentIntelligence(pdf, pdfBytes) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[7]++;
    let fullText =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[42]++, '');
    // Extract all text
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[43]++;
    for (let pageNum =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[44]++, 1); pageNum <= pdf.numPages; pageNum++) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[45]++;
      try {
        const page =
        /* istanbul ignore next */
        (cov_1fi0qah1uj().s[46]++, await pdf.getPage(pageNum));
        const textContent =
        /* istanbul ignore next */
        (cov_1fi0qah1uj().s[47]++, await page.getTextContent());
        const pageText =
        /* istanbul ignore next */
        (cov_1fi0qah1uj().s[48]++, textContent.items.map(item => {
          /* istanbul ignore next */
          cov_1fi0qah1uj().f[8]++;
          cov_1fi0qah1uj().s[49]++;
          return item.str;
        }).join(' '));
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[50]++;
        fullText += pageText + ' ';
      } catch (error) {
        /* istanbul ignore next */
        cov_1fi0qah1uj().s[51]++;
        console.warn(`Could not extract text from page ${pageNum}:`, error);
      }
    }
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[52]++;
    return {
      documentType: this.classifyDocumentType(fullText, pdf.numPages),
      language: this.detectLanguage(fullText),
      readingLevel: this.calculateReadingLevel(fullText),
      keywords: this.extractKeywords(fullText),
      topics: this.identifyTopics(fullText),
      sentimentScore: this.analyzeSentiment(fullText),
      confidenceLevel: this.calculateConfidenceLevel(fullText),
      contentStructure: {
        hasTableOfContents: this.detectTableOfContents(fullText),
        hasIndex: this.detectIndex(fullText),
        hasHeaders: this.detectHeaders(fullText),
        hasFooters: this.detectFooters(fullText),
        hasPageNumbers: this.detectPageNumbers(fullText),
        sectionCount: this.countSections(fullText)
      },
      dataExtraction: {
        tables: await this.extractTables(pdf),
        figures: await this.extractFigures(pdf),
        forms: await this.extractForms(pdf)
      }
    };
  }
  /**
   * Generate optimization suggestions
   */
  async generateOptimizationSuggestions(metrics, intelligence) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[9]++;
    const fileSizeSuggestions =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[53]++, this.generateFileSizeSuggestions(metrics));
    const accessibilitySuggestions =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[54]++, this.generateAccessibilitySuggestions(metrics, intelligence));
    const performanceSuggestions =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[55]++, this.generatePerformanceSuggestions(metrics));
    const qualitySuggestions =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[56]++, this.generateQualitySuggestions(metrics));
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[57]++;
    return {
      fileSize: fileSizeSuggestions,
      accessibility: accessibilitySuggestions,
      performance: performanceSuggestions,
      quality: qualitySuggestions
    };
  }
  // Helper methods for various calculations and analyses
  calculateTextClarity(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[10]++;
    // Simple heuristic based on character variety and length
    const uniqueChars =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[58]++, new Set(text).size);
    const totalChars =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[59]++, text.length);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[60]++;
    return Math.min(100, uniqueChars / Math.sqrt(totalChars) * 100);
  }
  estimateImageQuality(imageCount, fileSize) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[11]++;
    cov_1fi0qah1uj().s[61]++;
    // Simple heuristic - more images with larger file size suggests higher quality
    if (imageCount === 0) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[3][0]++;
      cov_1fi0qah1uj().s[62]++;
      return 100;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[3][1]++;
    }
    const avgImageSize =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[63]++, fileSize / imageCount);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[64]++;
    return Math.min(100, avgImageSize / 50000 * 100); // 50KB as baseline
  }
  calculateStructuralComplexity(pages, fonts, images) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[12]++;
    // Complexity based on various elements
    const pageComplexity =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[65]++, Math.min(50, pages * 2));
    const fontComplexity =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[66]++, Math.min(30, fonts * 5));
    const imageComplexity =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[67]++, Math.min(20, images * 2));
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[68]++;
    return pageComplexity + fontComplexity + imageComplexity;
  }
  calculateAccessibilityScore(text, imageCount) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[13]++;
    let score =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[69]++, 100);
    // Reduce score for images without alt text (simplified)
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[70]++;
    if (imageCount > 0) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[4][0]++;
      cov_1fi0qah1uj().s[71]++;
      score -= 20;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[4][1]++;
    }
    // Reduce score for very short or very long texts
    cov_1fi0qah1uj().s[72]++;
    if (text.length < 100) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[5][0]++;
      cov_1fi0qah1uj().s[73]++;
      score -= 30;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[5][1]++;
    }
    cov_1fi0qah1uj().s[74]++;
    if (text.length > 100000) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[6][0]++;
      cov_1fi0qah1uj().s[75]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[6][1]++;
    }
    cov_1fi0qah1uj().s[76]++;
    return Math.max(0, score);
  }
  estimateCompressionRatio(pdfBytes) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[14]++;
    // Simplified compression ratio estimation
    const uncompressedSize =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[77]++, pdfBytes.length * 3); // Rough estimate
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[78]++;
    return pdfBytes.length / uncompressedSize;
  }
  classifyDocumentType(text, pages) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[15]++;
    const formKeywords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[79]++, ['form', 'application', 'survey', 'questionnaire']);
    const techKeywords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[80]++, ['specification', 'manual', 'documentation', 'API']);
    const presentationKeywords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[81]++, ['slide', 'presentation', 'agenda']);
    const lowerText =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[82]++, text.toLowerCase());
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[83]++;
    if (formKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[16]++;
      cov_1fi0qah1uj().s[84]++;
      return lowerText.includes(keyword);
    })) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[7][0]++;
      cov_1fi0qah1uj().s[85]++;
      return 'form';
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[7][1]++;
    }
    cov_1fi0qah1uj().s[86]++;
    if (techKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[17]++;
      cov_1fi0qah1uj().s[87]++;
      return lowerText.includes(keyword);
    })) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[8][0]++;
      cov_1fi0qah1uj().s[88]++;
      return 'technical';
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[8][1]++;
    }
    cov_1fi0qah1uj().s[89]++;
    if (presentationKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[18]++;
      cov_1fi0qah1uj().s[90]++;
      return lowerText.includes(keyword);
    })) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[9][0]++;
      cov_1fi0qah1uj().s[91]++;
      return 'presentation';
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[9][1]++;
    }
    cov_1fi0qah1uj().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[11][0]++, text.length < 1000) &&
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[11][1]++, pages < 5)) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[10][0]++;
      cov_1fi0qah1uj().s[93]++;
      return 'scanned';
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[10][1]++;
    }
    cov_1fi0qah1uj().s[94]++;
    return 'text';
  }
  detectLanguage(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[19]++;
    // Simple language detection based on common words
    const commonEnglish =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[95]++, ['the', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'with']);
    const commonSpanish =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[96]++, ['el', 'la', 'de', 'que', 'y', 'en', 'un', 'es', 'se', 'no']);
    const commonFrench =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[97]++, ['le', 'de', 'et', 'à', 'un', 'il', 'être', 'et', 'en', 'avoir']);
    const words =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[98]++, text.toLowerCase().split(/\s+/));
    const englishCount =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[99]++, words.filter(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[20]++;
      cov_1fi0qah1uj().s[100]++;
      return commonEnglish.includes(word);
    }).length);
    const spanishCount =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[101]++, words.filter(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[21]++;
      cov_1fi0qah1uj().s[102]++;
      return commonSpanish.includes(word);
    }).length);
    const frenchCount =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[103]++, words.filter(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[22]++;
      cov_1fi0qah1uj().s[104]++;
      return commonFrench.includes(word);
    }).length);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[13][0]++, englishCount > spanishCount) &&
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[13][1]++, englishCount > frenchCount)) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[12][0]++;
      cov_1fi0qah1uj().s[106]++;
      return 'en';
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[12][1]++;
    }
    cov_1fi0qah1uj().s[107]++;
    if (spanishCount > frenchCount) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[14][0]++;
      cov_1fi0qah1uj().s[108]++;
      return 'es';
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[14][1]++;
    }
    cov_1fi0qah1uj().s[109]++;
    if (frenchCount > 0) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[15][0]++;
      cov_1fi0qah1uj().s[110]++;
      return 'fr';
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[15][1]++;
    }
    cov_1fi0qah1uj().s[111]++;
    return 'en'; // Default to English
  }
  calculateReadingLevel(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[23]++;
    const sentences =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[112]++, text.split(/[.!?]+/).length);
    const words =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[113]++, text.split(/\s+/).length);
    const syllables =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[114]++, this.countSyllables(text));
    // Flesch Reading Ease score (simplified)
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[115]++;
    if (
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[17][0]++, words === 0) ||
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[17][1]++, sentences === 0)) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[16][0]++;
      cov_1fi0qah1uj().s[116]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[16][1]++;
    }
    const avgWordsPerSentence =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[117]++, words / sentences);
    const avgSyllablesPerWord =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[118]++, syllables / words);
    const score =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[119]++, 206.835 - 1.015 * avgWordsPerSentence - 84.6 * avgSyllablesPerWord);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[120]++;
    return Math.max(0, Math.min(100, score));
  }
  countSyllables(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[24]++;
    // Simple syllable counting heuristic
    const words =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[121]++,
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[18][0]++, text.toLowerCase().match(/\b\w+\b/g)) ||
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[18][1]++, []));
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[122]++;
    return words.reduce((total, word) => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[25]++;
      const syllableCount =
      /* istanbul ignore next */
      (cov_1fi0qah1uj().s[123]++,
      /* istanbul ignore next */
      (cov_1fi0qah1uj().b[19][0]++, word.match(/[aeiouy]+/g)?.length) ||
      /* istanbul ignore next */
      (cov_1fi0qah1uj().b[19][1]++, 1));
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[124]++;
      return total + Math.max(1, syllableCount);
    }, 0);
  }
  extractKeywords(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[26]++;
    const words =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[125]++, text.toLowerCase().replace(/[^\w\s]/g, '').split(/\s+/).filter(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[27]++;
      cov_1fi0qah1uj().s[126]++;
      return word.length > 3;
    }));
    const frequency =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[127]++, {});
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[128]++;
    words.forEach(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[28]++;
      cov_1fi0qah1uj().s[129]++;
      frequency[word] = (
      /* istanbul ignore next */
      (cov_1fi0qah1uj().b[20][0]++, frequency[word]) ||
      /* istanbul ignore next */
      (cov_1fi0qah1uj().b[20][1]++, 0)) + 1;
    });
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[130]++;
    return Object.entries(frequency).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[29]++;
      cov_1fi0qah1uj().s[131]++;
      return b - a;
    }).slice(0, 10).map(([word]) => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[30]++;
      cov_1fi0qah1uj().s[132]++;
      return word;
    });
  }
  identifyTopics(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[31]++;
    // Simple topic identification based on keyword clusters
    const businessWords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[133]++, ['business', 'company', 'market', 'revenue', 'profit']);
    const techWords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[134]++, ['technology', 'software', 'system', 'data', 'digital']);
    const legalWords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[135]++, ['legal', 'contract', 'agreement', 'law', 'regulation']);
    const lowerText =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[136]++, text.toLowerCase());
    const topics =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[137]++, []);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[138]++;
    if (businessWords.some(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[32]++;
      cov_1fi0qah1uj().s[139]++;
      return lowerText.includes(word);
    })) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[21][0]++;
      cov_1fi0qah1uj().s[140]++;
      topics.push('Business');
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[21][1]++;
    }
    cov_1fi0qah1uj().s[141]++;
    if (techWords.some(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[33]++;
      cov_1fi0qah1uj().s[142]++;
      return lowerText.includes(word);
    })) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[22][0]++;
      cov_1fi0qah1uj().s[143]++;
      topics.push('Technology');
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[22][1]++;
    }
    cov_1fi0qah1uj().s[144]++;
    if (legalWords.some(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[34]++;
      cov_1fi0qah1uj().s[145]++;
      return lowerText.includes(word);
    })) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[23][0]++;
      cov_1fi0qah1uj().s[146]++;
      topics.push('Legal');
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[23][1]++;
    }
    cov_1fi0qah1uj().s[147]++;
    return topics;
  }
  analyzeSentiment(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[35]++;
    // Simple sentiment analysis
    const positiveWords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[148]++, ['good', 'great', 'excellent', 'positive', 'success']);
    const negativeWords =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[149]++, ['bad', 'poor', 'negative', 'problem', 'issue']);
    const words =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[150]++, text.toLowerCase().split(/\s+/));
    const positiveCount =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[151]++, words.filter(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[36]++;
      cov_1fi0qah1uj().s[152]++;
      return positiveWords.includes(word);
    }).length);
    const negativeCount =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[153]++, words.filter(word => {
      /* istanbul ignore next */
      cov_1fi0qah1uj().f[37]++;
      cov_1fi0qah1uj().s[154]++;
      return negativeWords.includes(word);
    }).length);
    const total =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[155]++, positiveCount + negativeCount);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[156]++;
    if (total === 0) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[24][0]++;
      cov_1fi0qah1uj().s[157]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[24][1]++;
    }
    cov_1fi0qah1uj().s[158]++;
    return (positiveCount - negativeCount) / total;
  }
  calculateConfidenceLevel(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[38]++;
    cov_1fi0qah1uj().s[159]++;
    // Confidence based on text length and structure
    if (text.length < 100) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[25][0]++;
      cov_1fi0qah1uj().s[160]++;
      return 30;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[25][1]++;
    }
    cov_1fi0qah1uj().s[161]++;
    if (text.length < 1000) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[26][0]++;
      cov_1fi0qah1uj().s[162]++;
      return 60;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[26][1]++;
    }
    cov_1fi0qah1uj().s[163]++;
    if (text.length < 10000) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[27][0]++;
      cov_1fi0qah1uj().s[164]++;
      return 80;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[27][1]++;
    }
    cov_1fi0qah1uj().s[165]++;
    return 95;
  }
  // Content structure detection methods
  detectTableOfContents(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[39]++;
    cov_1fi0qah1uj().s[166]++;
    return /table\s+of\s+contents|contents|toc/i.test(text);
  }
  detectIndex(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[40]++;
    cov_1fi0qah1uj().s[167]++;
    return /index|alphabetical/i.test(text);
  }
  detectHeaders(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[41]++;
    cov_1fi0qah1uj().s[168]++;
    return /chapter|section|part\s+\d+/i.test(text);
  }
  detectFooters(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[42]++;
    cov_1fi0qah1uj().s[169]++;
    return /page\s+\d+|footer/i.test(text);
  }
  detectPageNumbers(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[43]++;
    cov_1fi0qah1uj().s[170]++;
    return /\b\d+\s*$|page\s+\d+/m.test(text);
  }
  countSections(text) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[44]++;
    const sectionMarkers =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[171]++, text.match(/\b(chapter|section|part)\s+\d+/gi));
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[172]++;
    return sectionMarkers ?
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[28][0]++, sectionMarkers.length) :
    /* istanbul ignore next */
    (cov_1fi0qah1uj().b[28][1]++, 1);
  }
  // Data extraction methods (simplified implementations)
  async extractTables(pdf) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[45]++;
    cov_1fi0qah1uj().s[173]++;
    // Would need advanced table detection algorithms
    return [];
  }
  async extractFigures(pdf) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[46]++;
    cov_1fi0qah1uj().s[174]++;
    // Would need image analysis and OCR
    return [];
  }
  async extractForms(pdf) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[47]++;
    cov_1fi0qah1uj().s[175]++;
    // Would need form field detection
    return [];
  }
  // Suggestion generation methods
  generateFileSizeSuggestions(metrics) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[48]++;
    const suggestions =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[176]++, []);
    let potentialSavings =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[177]++, 0);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[178]++;
    if (metrics.imageCount > 5) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[29][0]++;
      cov_1fi0qah1uj().s[179]++;
      suggestions.push({
        action: 'Optimize images',
        impact: 'high',
        description: `Reduce image quality and size. Could save up to ${Math.round(metrics.fileSize * 0.3)} bytes.`
      });
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[180]++;
      potentialSavings += metrics.fileSize * 0.3;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[29][1]++;
    }
    cov_1fi0qah1uj().s[181]++;
    if (metrics.fontCount > 10) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[30][0]++;
      cov_1fi0qah1uj().s[182]++;
      suggestions.push({
        action: 'Reduce font variety',
        impact: 'medium',
        description: 'Using fewer fonts can reduce file size.'
      });
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[183]++;
      potentialSavings += metrics.fileSize * 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[30][1]++;
    }
    cov_1fi0qah1uj().s[184]++;
    return {
      currentSize: metrics.fileSize,
      potentialSavings,
      suggestions
    };
  }
  generateAccessibilitySuggestions(metrics, intelligence) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[49]++;
    const issues =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[185]++, []);
    const improvements =
    /* istanbul ignore next */
    (cov_1fi0qah1uj().s[186]++, []);
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[187]++;
    if (metrics.imageCount > 0) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[31][0]++;
      cov_1fi0qah1uj().s[188]++;
      issues.push({
        type: 'Missing alt text',
        severity: 'warning',
        description: 'Images may not have alternative text descriptions'
      });
      /* istanbul ignore next */
      cov_1fi0qah1uj().s[189]++;
      improvements.push({
        action: 'Add alt text to images',
        impact: 'High accessibility improvement',
        description: 'Provide text descriptions for all images'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[31][1]++;
    }
    cov_1fi0qah1uj().s[190]++;
    if (!intelligence.contentStructure.hasHeaders) {
      /* istanbul ignore next */
      cov_1fi0qah1uj().b[32][0]++;
      cov_1fi0qah1uj().s[191]++;
      issues.push({
        type: 'No heading structure',
        severity: 'error',
        description: 'Document lacks proper heading structure'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1fi0qah1uj().b[32][1]++;
    }
    cov_1fi0qah1uj().s[192]++;
    return {
      currentScore: metrics.qualityMetrics.accessibilityScore,
      issues,
      improvements
    };
  }
  generatePerformanceSuggestions(metrics) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[50]++;
    cov_1fi0qah1uj().s[193]++;
    return {
      renderingOptimizations: [{
        action: 'Enable page streaming',
        benefit: 'Faster initial display'
      }, {
        action: 'Optimize page layout',
        benefit: 'Smoother scrolling'
      }],
      memoryOptimizations: [{
        action: 'Implement virtual scrolling',
        benefit: 'Reduced memory usage for large documents'
      }, {
        action: 'Cache frequently accessed pages',
        benefit: 'Faster navigation'
      }]
    };
  }
  generateQualitySuggestions(metrics) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[51]++;
    cov_1fi0qah1uj().s[194]++;
    return {
      imageOptimizations: [{
        page: 1,
        action: 'Increase resolution',
        benefit: 'Better image quality'
      }],
      fontOptimizations: [{
        action: 'Embed standard fonts',
        benefit: 'Consistent appearance across devices'
      }]
    };
  }
  /**
   * Track performance metrics
   */
  recordPerformanceMetric(operation, duration) {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[52]++;
    cov_1fi0qah1uj().s[195]++;
    this.performanceMetrics.set(operation, duration);
  }
  /**
   * Get performance insights
   */
  getPerformanceInsights() {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[53]++;
    cov_1fi0qah1uj().s[196]++;
    return Object.fromEntries(this.performanceMetrics);
  }
  /**
   * Clear analytics cache
   */
  clearCache() {
    /* istanbul ignore next */
    cov_1fi0qah1uj().f[54]++;
    cov_1fi0qah1uj().s[197]++;
    this.documentCache.clear();
    /* istanbul ignore next */
    cov_1fi0qah1uj().s[198]++;
    this.performanceMetrics.clear();
  }
}
/* istanbul ignore next */
cov_1fi0qah1uj().s[199]++;
exports.AdvancedPDFAnalyticsService = AdvancedPDFAnalyticsService;
/* istanbul ignore next */
cov_1fi0qah1uj().s[200]++;
exports.default = AdvancedPDFAnalyticsService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,