f9c6ba4cce4ecad813834d061897e7a4
"use strict";

/* istanbul ignore next */
function cov_2fumnfmdy7() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts";
  var hash = "94787ab8fab21f6c5a1de406e5652ccee61a8570";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "37": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "38": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "39": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "40": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "41": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "42": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 22
        }
      },
      "43": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "44": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 84
        }
      },
      "45": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "46": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 76
        }
      },
      "47": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "48": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "49": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "50": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "51": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "52": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "53": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "54": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "55": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "56": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 55
        }
      },
      "57": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 76
        }
      },
      "58": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 28
        }
      },
      "59": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "60": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "61": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 93,
          column: 28
        }
      },
      "62": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "63": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 72
        }
      },
      "64": {
        start: {
          line: 97,
          column: 35
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "65": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 86
        }
      },
      "66": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "67": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 76
        }
      },
      "68": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 110,
          column: 17
        }
      },
      "69": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 107
        }
      },
      "70": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 77
        }
      },
      "71": {
        start: {
          line: 113,
          column: 34
        },
        end: {
          line: 113,
          column: 77
        }
      },
      "72": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 84
        }
      },
      "73": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "74": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 82
        }
      },
      "75": {
        start: {
          line: 120,
          column: 35
        },
        end: {
          line: 120,
          column: 67
        }
      },
      "76": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "77": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 121,
          column: 30
        }
      },
      "78": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "79": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 123,
          column: 88
        }
      },
      "80": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 80
        }
      },
      "81": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 40
        }
      },
      "82": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 101
        }
      },
      "83": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 33
        }
      },
      "84": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 34
        }
      },
      "85": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 86
        }
      },
      "86": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 151,
          column: 17
        }
      },
      "87": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 84
        }
      },
      "88": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 86
        }
      },
      "89": {
        start: {
          line: 138,
          column: 49
        },
        end: {
          line: 138,
          column: 84
        }
      },
      "90": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 150,
          column: 21
        }
      },
      "91": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 149,
          column: 25
        }
      },
      "92": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 142,
          column: 91
        }
      },
      "93": {
        start: {
          line: 143,
          column: 49
        },
        end: {
          line: 143,
          column: 101
        }
      },
      "94": {
        start: {
          line: 144,
          column: 28
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "95": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 75
        }
      },
      "96": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 99
        }
      },
      "97": {
        start: {
          line: 155,
          column: 29
        },
        end: {
          line: 155,
          column: 120
        }
      },
      "98": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 67
        }
      },
      "99": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 38
        }
      },
      "100": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "101": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 75
        }
      },
      "102": {
        start: {
          line: 168,
          column: 24
        },
        end: {
          line: 168,
          column: 71
        }
      },
      "103": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 23
        }
      },
      "104": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 57
        }
      },
      "105": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 77
        }
      },
      "106": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 52
        }
      },
      "107": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 83
        }
      },
      "108": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "109": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 79
        }
      },
      "110": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "111": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 80
        }
      },
      "112": {
        start: {
          line: 191,
          column: 27
        },
        end: {
          line: 191,
          column: 28
        }
      },
      "113": {
        start: {
          line: 192,
          column: 24
        },
        end: {
          line: 192,
          column: 28
        }
      },
      "114": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "115": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 28
        }
      },
      "116": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "117": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 80
        }
      },
      "118": {
        start: {
          line: 197,
          column: 34
        },
        end: {
          line: 197,
          column: 75
        }
      },
      "119": {
        start: {
          line: 199,
          column: 31
        },
        end: {
          line: 204,
          column: 18
        }
      },
      "120": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 99
        }
      },
      "121": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 54
        }
      },
      "122": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 30
        }
      },
      "123": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 34
        }
      },
      "124": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 94
        }
      },
      "125": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 216,
          column: 17
        }
      },
      "126": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 84
        }
      },
      "127": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 85
        }
      },
      "128": {
        start: {
          line: 215,
          column: 49
        },
        end: {
          line: 215,
          column: 83
        }
      },
      "129": {
        start: {
          line: 219,
          column: 29
        },
        end: {
          line: 219,
          column: 131
        }
      },
      "130": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 75
        }
      },
      "131": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 38
        }
      },
      "132": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 65
        }
      },
      "133": {
        start: {
          line: 228,
          column: 26
        },
        end: {
          line: 228,
          column: 62
        }
      },
      "134": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "135": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 230,
          column: 64
        }
      },
      "136": {
        start: {
          line: 231,
          column: 26
        },
        end: {
          line: 231,
          column: 89
        }
      },
      "137": {
        start: {
          line: 231,
          column: 86
        },
        end: {
          line: 231,
          column: 87
        }
      },
      "138": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 59
        }
      },
      "139": {
        start: {
          line: 232,
          column: 34
        },
        end: {
          line: 232,
          column: 57
        }
      },
      "140": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 38
        }
      },
      "141": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 238,
          column: 65
        }
      },
      "142": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 239,
          column: 48
        }
      },
      "143": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "144": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 57
        }
      },
      "145": {
        start: {
          line: 244,
          column: 25
        },
        end: {
          line: 244,
          column: 61
        }
      },
      "146": {
        start: {
          line: 245,
          column: 27
        },
        end: {
          line: 245,
          column: 107
        }
      },
      "147": {
        start: {
          line: 245,
          column: 104
        },
        end: {
          line: 245,
          column: 105
        }
      },
      "148": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 59
        }
      },
      "149": {
        start: {
          line: 246,
          column: 35
        },
        end: {
          line: 246,
          column: 57
        }
      },
      "150": {
        start: {
          line: 248,
          column: 26
        },
        end: {
          line: 248,
          column: 62
        }
      },
      "151": {
        start: {
          line: 249,
          column: 28
        },
        end: {
          line: 249,
          column: 134
        }
      },
      "152": {
        start: {
          line: 249,
          column: 119
        },
        end: {
          line: 249,
          column: 132
        }
      },
      "153": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 61
        }
      },
      "154": {
        start: {
          line: 250,
          column: 36
        },
        end: {
          line: 250,
          column: 59
        }
      },
      "155": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 254,
          column: 10
        }
      },
      "156": {
        start: {
          line: 258,
          column: 23
        },
        end: {
          line: 258,
          column: 65
        }
      },
      "157": {
        start: {
          line: 259,
          column: 29
        },
        end: {
          line: 259,
          column: 65
        }
      },
      "158": {
        start: {
          line: 261,
          column: 24
        },
        end: {
          line: 261,
          column: 55
        }
      },
      "159": {
        start: {
          line: 261,
          column: 47
        },
        end: {
          line: 261,
          column: 54
        }
      },
      "160": {
        start: {
          line: 262,
          column: 22
        },
        end: {
          line: 262,
          column: 67
        }
      },
      "161": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 58
        }
      },
      "162": {
        start: {
          line: 263,
          column: 30
        },
        end: {
          line: 263,
          column: 56
        }
      },
      "163": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 41
        }
      },
      "164": {
        start: {
          line: 268,
          column: 23
        },
        end: {
          line: 268,
          column: 65
        }
      },
      "165": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 269,
          column: 39
        }
      },
      "166": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "167": {
        start: {
          line: 271,
          column: 35
        },
        end: {
          line: 271,
          column: 47
        }
      },
      "168": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "169": {
        start: {
          line: 274,
          column: 36
        },
        end: {
          line: 274,
          column: 54
        }
      },
      "170": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 87
        }
      },
      "171": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 35
        }
      },
      "172": {
        start: {
          line: 283,
          column: 23
        },
        end: {
          line: 283,
          column: 65
        }
      },
      "173": {
        start: {
          line: 284,
          column: 21
        },
        end: {
          line: 284,
          column: 66
        }
      },
      "174": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 286,
          column: 78
        }
      },
      "175": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 293,
          column: 11
        }
      },
      "176": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 35
        }
      },
      "177": {
        start: {
          line: 298,
          column: 23
        },
        end: {
          line: 298,
          column: 65
        }
      },
      "178": {
        start: {
          line: 300,
          column: 28
        },
        end: {
          line: 300,
          column: 66
        }
      },
      "179": {
        start: {
          line: 300,
          column: 60
        },
        end: {
          line: 300,
          column: 65
        }
      },
      "180": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 305,
          column: 11
        }
      },
      "181": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "182": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 47
        }
      },
      "183": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 35
        }
      },
      "184": {
        start: {
          line: 310,
          column: 23
        },
        end: {
          line: 310,
          column: 65
        }
      },
      "185": {
        start: {
          line: 312,
          column: 24
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "186": {
        start: {
          line: 317,
          column: 28
        },
        end: {
          line: 317,
          column: 44
        }
      },
      "187": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 46
        }
      },
      "188": {
        start: {
          line: 322,
          column: 100
        },
        end: {
          line: 322,
          column: 107
        }
      },
      "189": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "190": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 58
        }
      },
      "191": {
        start: {
          line: 326,
          column: 33
        },
        end: {
          line: 326,
          column: 74
        }
      },
      "192": {
        start: {
          line: 327,
          column: 27
        },
        end: {
          line: 327,
          column: 73
        }
      },
      "193": {
        start: {
          line: 328,
          column: 26
        },
        end: {
          line: 328,
          column: 43
        }
      },
      "194": {
        start: {
          line: 329,
          column: 25
        },
        end: {
          line: 329,
          column: 82
        }
      },
      "195": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 342,
          column: 13
        }
      },
      "196": {
        start: {
          line: 331,
          column: 42
        },
        end: {
          line: 331,
          column: 56
        }
      },
      "197": {
        start: {
          line: 332,
          column: 34
        },
        end: {
          line: 332,
          column: 81
        }
      },
      "198": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 341,
          column: 19
        }
      },
      "199": {
        start: {
          line: 343,
          column: 27
        },
        end: {
          line: 343,
          column: 46
        }
      },
      "200": {
        start: {
          line: 344,
          column: 31
        },
        end: {
          line: 344,
          column: 70
        }
      },
      "201": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 83
        }
      },
      "202": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 30
        }
      },
      "203": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 66
        }
      },
      "204": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 73
        }
      },
      "205": {
        start: {
          line: 355,
          column: 27
        },
        end: {
          line: 355,
          column: 47
        }
      },
      "206": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "207": {
        start: {
          line: 358,
          column: 25
        },
        end: {
          line: 358,
          column: 45
        }
      },
      "208": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 32
        }
      },
      "209": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 68
        }
      },
      "210": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 24
        }
      },
      "211": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 60
        }
      },
      "212": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 78
        }
      },
      "213": {
        start: {
          line: 370,
          column: 107
        },
        end: {
          line: 370,
          column: 114
        }
      },
      "214": {
        start: {
          line: 371,
          column: 23
        },
        end: {
          line: 371,
          column: 65
        }
      },
      "215": {
        start: {
          line: 372,
          column: 22
        },
        end: {
          line: 372,
          column: 39
        }
      },
      "216": {
        start: {
          line: 373,
          column: 21
        },
        end: {
          line: 373,
          column: 78
        }
      },
      "217": {
        start: {
          line: 374,
          column: 27
        },
        end: {
          line: 374,
          column: 39
        }
      },
      "218": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 401,
          column: 11
        }
      },
      "219": {
        start: {
          line: 376,
          column: 38
        },
        end: {
          line: 376,
          column: 52
        }
      },
      "220": {
        start: {
          line: 377,
          column: 28
        },
        end: {
          line: 377,
          column: 37
        }
      },
      "221": {
        start: {
          line: 378,
          column: 25
        },
        end: {
          line: 380,
          column: 58
        }
      },
      "222": {
        start: {
          line: 381,
          column: 30
        },
        end: {
          line: 381,
          column: 68
        }
      },
      "223": {
        start: {
          line: 382,
          column: 20
        },
        end: {
          line: 382,
          column: 26
        }
      },
      "224": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 26
        }
      },
      "225": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "226": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 386,
          column: 44
        }
      },
      "227": {
        start: {
          line: 388,
          column: 17
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "228": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 389,
          column: 47
        }
      },
      "229": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "230": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 36
        }
      },
      "231": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 400,
          column: 15
        }
      },
      "232": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 35
        }
      },
      "233": {
        start: {
          line: 406,
          column: 23
        },
        end: {
          line: 406,
          column: 65
        }
      },
      "234": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 416,
          column: 10
        }
      },
      "235": {
        start: {
          line: 411,
          column: 64
        },
        end: {
          line: 411,
          column: 72
        }
      },
      "236": {
        start: {
          line: 420,
          column: 23
        },
        end: {
          line: 420,
          column: 65
        }
      },
      "237": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 422,
          column: 44
        }
      },
      "238": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 44
        }
      },
      "239": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 424,
          column: 46
        }
      },
      "240": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 46
        }
      },
      "241": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 426,
          column: 48
        }
      },
      "242": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 48
        }
      },
      "243": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "244": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 50
        }
      },
      "245": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 432,
          column: 48
        }
      },
      "246": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 432,
          column: 48
        }
      },
      "247": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 434,
          column: 50
        }
      },
      "248": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 50
        }
      },
      "249": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 436,
          column: 58
        }
      },
      "250": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 58
        }
      },
      "251": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 438,
          column: 66
        }
      },
      "252": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 66
        }
      },
      "253": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 35
        }
      },
      "254": {
        start: {
          line: 443,
          column: 23
        },
        end: {
          line: 443,
          column: 65
        }
      },
      "255": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 450,
          column: 11
        }
      },
      "256": {
        start: {
          line: 454,
          column: 23
        },
        end: {
          line: 454,
          column: 65
        }
      },
      "257": {
        start: {
          line: 455,
          column: 21
        },
        end: {
          line: 455,
          column: 51
        }
      },
      "258": {
        start: {
          line: 458,
          column: 22
        },
        end: {
          line: 458,
          column: 48
        }
      },
      "259": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "260": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 54
        }
      },
      "261": {
        start: {
          line: 463,
          column: 13
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "262": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 54
        }
      },
      "263": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 468,
          column: 56
        }
      },
      "264": {
        start: {
          line: 470,
          column: 55
        },
        end: {
          line: 470,
          column: 60
        }
      },
      "265": {
        start: {
          line: 471,
          column: 22
        },
        end: {
          line: 471,
          column: 47
        }
      },
      "266": {
        start: {
          line: 472,
          column: 23
        },
        end: {
          line: 472,
          column: 50
        }
      },
      "267": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 479,
          column: 11
        }
      },
      "268": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 35
        }
      },
      "269": {
        start: {
          line: 484,
          column: 23
        },
        end: {
          line: 484,
          column: 65
        }
      },
      "270": {
        start: {
          line: 485,
          column: 29
        },
        end: {
          line: 485,
          column: 65
        }
      },
      "271": {
        start: {
          line: 487,
          column: 24
        },
        end: {
          line: 487,
          column: 48
        }
      },
      "272": {
        start: {
          line: 487,
          column: 42
        },
        end: {
          line: 487,
          column: 47
        }
      },
      "273": {
        start: {
          line: 488,
          column: 22
        },
        end: {
          line: 488,
          column: 67
        }
      },
      "274": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 58
        }
      },
      "275": {
        start: {
          line: 489,
          column: 30
        },
        end: {
          line: 489,
          column: 56
        }
      },
      "276": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 41
        }
      },
      "277": {
        start: {
          line: 494,
          column: 23
        },
        end: {
          line: 494,
          column: 65
        }
      },
      "278": {
        start: {
          line: 495,
          column: 21
        },
        end: {
          line: 495,
          column: 51
        }
      },
      "279": {
        start: {
          line: 496,
          column: 34
        },
        end: {
          line: 496,
          column: 48
        }
      },
      "280": {
        start: {
          line: 497,
          column: 25
        },
        end: {
          line: 497,
          column: 43
        }
      },
      "281": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 502,
          column: 10
        }
      },
      "282": {
        start: {
          line: 509,
          column: 23
        },
        end: {
          line: 509,
          column: 65
        }
      },
      "283": {
        start: {
          line: 510,
          column: 22
        },
        end: {
          line: 510,
          column: 39
        }
      },
      "284": {
        start: {
          line: 511,
          column: 28
        },
        end: {
          line: 513,
          column: 19
        }
      },
      "285": {
        start: {
          line: 512,
          column: 35
        },
        end: {
          line: 512,
          column: 47
        }
      },
      "286": {
        start: {
          line: 512,
          column: 61
        },
        end: {
          line: 512,
          column: 62
        }
      },
      "287": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 516,
          column: 11
        }
      },
      "288": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 515,
          column: 85
        }
      },
      "289": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 35
        }
      },
      "290": {
        start: {
          line: 523,
          column: 24
        },
        end: {
          line: 523,
          column: 26
        }
      },
      "291": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 558,
          column: 9
        }
      },
      "292": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 557,
          column: 13
        }
      },
      "293": {
        start: {
          line: 526,
          column: 16
        },
        end: {
          line: 552,
          column: 17
        }
      },
      "294": {
        start: {
          line: 528,
          column: 39
        },
        end: {
          line: 528,
          column: 81
        }
      },
      "295": {
        start: {
          line: 529,
          column: 24
        },
        end: {
          line: 529,
          column: 45
        }
      },
      "296": {
        start: {
          line: 530,
          column: 24
        },
        end: {
          line: 530,
          column: 30
        }
      },
      "297": {
        start: {
          line: 532,
          column: 24
        },
        end: {
          line: 535,
          column: 25
        }
      },
      "298": {
        start: {
          line: 533,
          column: 44
        },
        end: {
          line: 533,
          column: 139
        }
      },
      "299": {
        start: {
          line: 534,
          column: 28
        },
        end: {
          line: 534,
          column: 50
        }
      },
      "300": {
        start: {
          line: 536,
          column: 24
        },
        end: {
          line: 536,
          column: 30
        }
      },
      "301": {
        start: {
          line: 538,
          column: 24
        },
        end: {
          line: 541,
          column: 25
        }
      },
      "302": {
        start: {
          line: 539,
          column: 47
        },
        end: {
          line: 539,
          column: 115
        }
      },
      "303": {
        start: {
          line: 540,
          column: 28
        },
        end: {
          line: 540,
          column: 53
        }
      },
      "304": {
        start: {
          line: 542,
          column: 24
        },
        end: {
          line: 542,
          column: 30
        }
      },
      "305": {
        start: {
          line: 544,
          column: 24
        },
        end: {
          line: 547,
          column: 25
        }
      },
      "306": {
        start: {
          line: 545,
          column: 48
        },
        end: {
          line: 545,
          column: 151
        }
      },
      "307": {
        start: {
          line: 546,
          column: 28
        },
        end: {
          line: 546,
          column: 54
        }
      },
      "308": {
        start: {
          line: 548,
          column: 24
        },
        end: {
          line: 548,
          column: 30
        }
      },
      "309": {
        start: {
          line: 550,
          column: 24
        },
        end: {
          line: 550,
          column: 87
        }
      },
      "310": {
        start: {
          line: 551,
          column: 24
        },
        end: {
          line: 551,
          column: 30
        }
      },
      "311": {
        start: {
          line: 555,
          column: 16
        },
        end: {
          line: 555,
          column: 82
        }
      },
      "312": {
        start: {
          line: 559,
          column: 8
        },
        end: {
          line: 559,
          column: 23
        }
      },
      "313": {
        start: {
          line: 562,
          column: 0
        },
        end: {
          line: 562,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 41
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 54
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 72
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 85
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 138,
            column: 38
          },
          end: {
            line: 138,
            column: 39
          }
        },
        loc: {
          start: {
            line: 138,
            column: 49
          },
          end: {
            line: 138,
            column: 84
          }
        },
        line: 138
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 164
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 176
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 39
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 182
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 215,
            column: 38
          },
          end: {
            line: 215,
            column: 39
          }
        },
        loc: {
          start: {
            line: 215,
            column: 49
          },
          end: {
            line: 215,
            column: 83
          }
        },
        line: 215
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 44
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 223
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 32
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 227
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 231,
            column: 76
          },
          end: {
            line: 231,
            column: 77
          }
        },
        loc: {
          start: {
            line: 231,
            column: 86
          },
          end: {
            line: 231,
            column: 87
          }
        },
        line: 231
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 232,
            column: 26
          },
          end: {
            line: 232,
            column: 27
          }
        },
        loc: {
          start: {
            line: 232,
            column: 34
          },
          end: {
            line: 232,
            column: 57
          }
        },
        line: 232
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 40
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 237
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 245,
            column: 94
          },
          end: {
            line: 245,
            column: 95
          }
        },
        loc: {
          start: {
            line: 245,
            column: 104
          },
          end: {
            line: 245,
            column: 105
          }
        },
        line: 245
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 246,
            column: 27
          },
          end: {
            line: 246,
            column: 28
          }
        },
        loc: {
          start: {
            line: 246,
            column: 35
          },
          end: {
            line: 246,
            column: 57
          }
        },
        line: 246
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 249,
            column: 109
          },
          end: {
            line: 249,
            column: 110
          }
        },
        loc: {
          start: {
            line: 249,
            column: 119
          },
          end: {
            line: 249,
            column: 132
          }
        },
        line: 249
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 250,
            column: 28
          },
          end: {
            line: 250,
            column: 29
          }
        },
        loc: {
          start: {
            line: 250,
            column: 36
          },
          end: {
            line: 250,
            column: 59
          }
        },
        line: 250
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 46
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 257
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 261,
            column: 40
          },
          end: {
            line: 261,
            column: 41
          }
        },
        loc: {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 261,
            column: 54
          }
        },
        line: 261
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 263,
            column: 22
          },
          end: {
            line: 263,
            column: 23
          }
        },
        loc: {
          start: {
            line: 263,
            column: 30
          },
          end: {
            line: 263,
            column: 56
          }
        },
        line: 263
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 55
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 267
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 271,
            column: 30
          },
          end: {
            line: 271,
            column: 31
          }
        },
        loc: {
          start: {
            line: 271,
            column: 35
          },
          end: {
            line: 271,
            column: 47
          }
        },
        line: 271
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 273,
            column: 28
          },
          end: {
            line: 273,
            column: 29
          }
        },
        loc: {
          start: {
            line: 273,
            column: 36
          },
          end: {
            line: 276,
            column: 9
          }
        },
        line: 273
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 6
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 282
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 45
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 297
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 300,
            column: 50
          },
          end: {
            line: 300,
            column: 51
          }
        },
        loc: {
          start: {
            line: 300,
            column: 60
          },
          end: {
            line: 300,
            column: 65
          }
        },
        line: 300
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 301,
            column: 28
          },
          end: {
            line: 301,
            column: 29
          }
        },
        loc: {
          start: {
            line: 301,
            column: 39
          },
          end: {
            line: 305,
            column: 9
          }
        },
        line: 301
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 52
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 309
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        loc: {
          start: {
            line: 321,
            column: 62
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 321
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 17
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 354
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 49
          },
          end: {
            line: 403,
            column: 5
          }
        },
        line: 369
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 375,
            column: 22
          },
          end: {
            line: 375,
            column: 23
          }
        },
        loc: {
          start: {
            line: 375,
            column: 39
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 375
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 32
          },
          end: {
            line: 417,
            column: 5
          }
        },
        line: 405
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 411,
            column: 59
          },
          end: {
            line: 411,
            column: 60
          }
        },
        loc: {
          start: {
            line: 411,
            column: 64
          },
          end: {
            line: 411,
            column: 72
          }
        },
        line: 411
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 42
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 419
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        loc: {
          start: {
            line: 442,
            column: 35
          },
          end: {
            line: 451,
            column: 5
          }
        },
        line: 442
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 453,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        loc: {
          start: {
            line: 453,
            column: 62
          },
          end: {
            line: 481,
            column: 5
          }
        },
        line: 453
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 483,
            column: 4
          },
          end: {
            line: 483,
            column: 5
          }
        },
        loc: {
          start: {
            line: 483,
            column: 43
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 483
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 487,
            column: 37
          },
          end: {
            line: 487,
            column: 38
          }
        },
        loc: {
          start: {
            line: 487,
            column: 42
          },
          end: {
            line: 487,
            column: 47
          }
        },
        line: 487
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 489,
            column: 22
          },
          end: {
            line: 489,
            column: 23
          }
        },
        loc: {
          start: {
            line: 489,
            column: 30
          },
          end: {
            line: 489,
            column: 56
          }
        },
        line: 489
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 50
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 493
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 53
          },
          end: {
            line: 518,
            column: 5
          }
        },
        line: 508
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 512,
            column: 30
          },
          end: {
            line: 512,
            column: 31
          }
        },
        loc: {
          start: {
            line: 512,
            column: 35
          },
          end: {
            line: 512,
            column: 47
          }
        },
        line: 512
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 512,
            column: 56
          },
          end: {
            line: 512,
            column: 57
          }
        },
        loc: {
          start: {
            line: 512,
            column: 61
          },
          end: {
            line: 512,
            column: 62
          }
        },
        line: 512
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 514,
            column: 28
          },
          end: {
            line: 514,
            column: 29
          }
        },
        loc: {
          start: {
            line: 514,
            column: 36
          },
          end: {
            line: 516,
            column: 9
          }
        },
        line: 514
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 522,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        loc: {
          start: {
            line: 522,
            column: 35
          },
          end: {
            line: 560,
            column: 5
          }
        },
        line: 522
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "18": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "19": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "20": {
        loc: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "21": {
        loc: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 31
          }
        }, {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 62
          }
        }],
        line: 104
      },
      "22": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "23": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "24": {
        loc: {
          start: {
            line: 122,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "25": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 151,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "26": {
        loc: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 150,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 150,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "27": {
        loc: {
          start: {
            line: 155,
            column: 81
          },
          end: {
            line: 155,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 81
          },
          end: {
            line: 155,
            column: 99
          }
        }, {
          start: {
            line: 155,
            column: 103
          },
          end: {
            line: 155,
            column: 118
          }
        }],
        line: 155
      },
      "28": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "29": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 21
          }
        }, {
          start: {
            line: 184,
            column: 25
          },
          end: {
            line: 184,
            column: 50
          }
        }],
        line: 184
      },
      "30": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "31": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "32": {
        loc: {
          start: {
            line: 219,
            column: 92
          },
          end: {
            line: 219,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 92
          },
          end: {
            line: 219,
            column: 110
          }
        }, {
          start: {
            line: 219,
            column: 114
          },
          end: {
            line: 219,
            column: 129
          }
        }],
        line: 219
      },
      "33": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "34": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 25
          }
        }, {
          start: {
            line: 240,
            column: 29
          },
          end: {
            line: 240,
            column: 52
          }
        }],
        line: 240
      },
      "35": {
        loc: {
          start: {
            line: 270,
            column: 28
          },
          end: {
            line: 272,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 14
          },
          end: {
            line: 271,
            column: 48
          }
        }, {
          start: {
            line: 272,
            column: 14
          },
          end: {
            line: 272,
            column: 19
          }
        }],
        line: 270
      },
      "36": {
        loc: {
          start: {
            line: 280,
            column: 47
          },
          end: {
            line: 280,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 280,
            column: 55
          },
          end: {
            line: 280,
            column: 61
          }
        }],
        line: 280
      },
      "37": {
        loc: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 281,
            column: 13
          },
          end: {
            line: 281,
            column: 19
          }
        }],
        line: 281
      },
      "38": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "39": {
        loc: {
          start: {
            line: 302,
            column: 16
          },
          end: {
            line: 302,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 16
          },
          end: {
            line: 302,
            column: 27
          }
        }, {
          start: {
            line: 302,
            column: 31
          },
          end: {
            line: 302,
            column: 63
          }
        }],
        line: 302
      },
      "40": {
        loc: {
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 309,
            column: 42
          },
          end: {
            line: 309,
            column: 50
          }
        }],
        line: 309
      },
      "41": {
        loc: {
          start: {
            line: 321,
            column: 48
          },
          end: {
            line: 321,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 321,
            column: 58
          },
          end: {
            line: 321,
            column: 60
          }
        }],
        line: 321
      },
      "42": {
        loc: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 322,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 322,
            column: 27
          },
          end: {
            line: 322,
            column: 29
          }
        }],
        line: 322
      },
      "43": {
        loc: {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 322,
            column: 41
          },
          end: {
            line: 322,
            column: 44
          }
        }],
        line: 322
      },
      "44": {
        loc: {
          start: {
            line: 322,
            column: 46
          },
          end: {
            line: 322,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 322,
            column: 57
          },
          end: {
            line: 322,
            column: 59
          }
        }],
        line: 322
      },
      "45": {
        loc: {
          start: {
            line: 322,
            column: 61
          },
          end: {
            line: 322,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 322,
            column: 69
          },
          end: {
            line: 322,
            column: 95
          }
        }],
        line: 322
      },
      "46": {
        loc: {
          start: {
            line: 369,
            column: 35
          },
          end: {
            line: 369,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 369,
            column: 45
          },
          end: {
            line: 369,
            column: 47
          }
        }],
        line: 369
      },
      "47": {
        loc: {
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 370,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 370,
            column: 27
          },
          end: {
            line: 370,
            column: 42
          }
        }],
        line: 370
      },
      "48": {
        loc: {
          start: {
            line: 370,
            column: 44
          },
          end: {
            line: 370,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 370,
            column: 53
          },
          end: {
            line: 370,
            column: 74
          }
        }],
        line: 370
      },
      "49": {
        loc: {
          start: {
            line: 370,
            column: 76
          },
          end: {
            line: 370,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 370,
            column: 87
          },
          end: {
            line: 370,
            column: 89
          }
        }],
        line: 370
      },
      "50": {
        loc: {
          start: {
            line: 370,
            column: 91
          },
          end: {
            line: 370,
            column: 102
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 370,
            column: 100
          },
          end: {
            line: 370,
            column: 102
          }
        }],
        line: 370
      },
      "51": {
        loc: {
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        }, {
          start: {
            line: 388,
            column: 17
          },
          end: {
            line: 390,
            column: 13
          }
        }],
        line: 385
      },
      "52": {
        loc: {
          start: {
            line: 388,
            column: 17
          },
          end: {
            line: 390,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 17
          },
          end: {
            line: 390,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "53": {
        loc: {
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "54": {
        loc: {
          start: {
            line: 411,
            column: 22
          },
          end: {
            line: 411,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 22
          },
          end: {
            line: 411,
            column: 73
          }
        }, {
          start: {
            line: 411,
            column: 77
          },
          end: {
            line: 411,
            column: 79
          }
        }],
        line: 411
      },
      "55": {
        loc: {
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 422,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 422,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "56": {
        loc: {
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 424,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 424,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "57": {
        loc: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 426,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 426,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "58": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "59": {
        loc: {
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 29
          }
        }, {
          start: {
            line: 427,
            column: 33
          },
          end: {
            line: 427,
            column: 61
          }
        }],
        line: 427
      },
      "60": {
        loc: {
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 432,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 432,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "61": {
        loc: {
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 434,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 434,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "62": {
        loc: {
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 436,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 436,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      },
      "63": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 438,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 438,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "64": {
        loc: {
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        }, {
          start: {
            line: 463,
            column: 13
          },
          end: {
            line: 469,
            column: 9
          }
        }],
        line: 459
      },
      "65": {
        loc: {
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 459,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 459,
            column: 29
          }
        }, {
          start: {
            line: 459,
            column: 33
          },
          end: {
            line: 459,
            column: 50
          }
        }],
        line: 459
      },
      "66": {
        loc: {
          start: {
            line: 463,
            column: 13
          },
          end: {
            line: 469,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 13
          },
          end: {
            line: 469,
            column: 9
          }
        }, {
          start: {
            line: 467,
            column: 13
          },
          end: {
            line: 469,
            column: 9
          }
        }],
        line: 463
      },
      "67": {
        loc: {
          start: {
            line: 463,
            column: 17
          },
          end: {
            line: 463,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 463,
            column: 17
          },
          end: {
            line: 463,
            column: 34
          }
        }, {
          start: {
            line: 463,
            column: 38
          },
          end: {
            line: 463,
            column: 55
          }
        }],
        line: 463
      },
      "68": {
        loc: {
          start: {
            line: 471,
            column: 22
          },
          end: {
            line: 471,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 22
          },
          end: {
            line: 471,
            column: 35
          }
        }, {
          start: {
            line: 471,
            column: 39
          },
          end: {
            line: 471,
            column: 47
          }
        }],
        line: 471
      },
      "69": {
        loc: {
          start: {
            line: 472,
            column: 23
          },
          end: {
            line: 472,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 23
          },
          end: {
            line: 472,
            column: 37
          }
        }, {
          start: {
            line: 472,
            column: 41
          },
          end: {
            line: 472,
            column: 50
          }
        }],
        line: 472
      },
      "70": {
        loc: {
          start: {
            line: 478,
            column: 21
          },
          end: {
            line: 478,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 21
          },
          end: {
            line: 478,
            column: 36
          }
        }, {
          start: {
            line: 478,
            column: 40
          },
          end: {
            line: 478,
            column: 41
          }
        }],
        line: 478
      },
      "71": {
        loc: {
          start: {
            line: 511,
            column: 28
          },
          end: {
            line: 513,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 512,
            column: 14
          },
          end: {
            line: 512,
            column: 63
          }
        }, {
          start: {
            line: 513,
            column: 14
          },
          end: {
            line: 513,
            column: 19
          }
        }],
        line: 511
      },
      "72": {
        loc: {
          start: {
            line: 526,
            column: 16
          },
          end: {
            line: 552,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 527,
            column: 20
          },
          end: {
            line: 530,
            column: 30
          }
        }, {
          start: {
            line: 531,
            column: 20
          },
          end: {
            line: 536,
            column: 30
          }
        }, {
          start: {
            line: 537,
            column: 20
          },
          end: {
            line: 542,
            column: 30
          }
        }, {
          start: {
            line: 543,
            column: 20
          },
          end: {
            line: 548,
            column: 30
          }
        }, {
          start: {
            line: 549,
            column: 20
          },
          end: {
            line: 551,
            column: 30
          }
        }],
        line: 526
      },
      "73": {
        loc: {
          start: {
            line: 533,
            column: 73
          },
          end: {
            line: 533,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 533,
            column: 73
          },
          end: {
            line: 533,
            column: 100
          }
        }, {
          start: {
            line: 533,
            column: 104
          },
          end: {
            line: 533,
            column: 106
          }
        }],
        line: 533
      },
      "74": {
        loc: {
          start: {
            line: 539,
            column: 76
          },
          end: {
            line: 539,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 539,
            column: 76
          },
          end: {
            line: 539,
            column: 102
          }
        }, {
          start: {
            line: 539,
            column: 106
          },
          end: {
            line: 539,
            column: 114
          }
        }],
        line: 539
      },
      "75": {
        loc: {
          start: {
            line: 545,
            column: 78
          },
          end: {
            line: 545,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 545,
            column: 78
          },
          end: {
            line: 545,
            column: 101
          }
        }, {
          start: {
            line: 545,
            column: 105
          },
          end: {
            line: 545,
            column: 116
          }
        }],
        line: 545
      },
      "76": {
        loc: {
          start: {
            line: 545,
            column: 118
          },
          end: {
            line: 545,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 545,
            column: 118
          },
          end: {
            line: 545,
            column: 144
          }
        }, {
          start: {
            line: 545,
            column: 148
          },
          end: {
            line: 545,
            column: 150
          }
        }],
        line: 545
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0],
      "42": [0],
      "43": [0],
      "44": [0],
      "45": [0],
      "46": [0],
      "47": [0],
      "48": [0],
      "49": [0],
      "50": [0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0, 0, 0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\PDFService.ts"],
      sourcesContent: ["import { PDFDocument, PDFPage, rgb, StandardFonts, degrees, PDFFont, PDFImage } from 'pdf-lib';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport { PDFDocumentProxy } from 'pdfjs-dist/types/src/display/api';\nimport { loadPDFSafely, validatePDFBytes, createSafePDFBytes } from '../../common/utils';\n\ninterface PDFMetadata {\n  title?: string;\n  author?: string;\n  subject?: string;\n  keywords?: string[];\n  creator?: string;\n  producer?: string;\n  creationDate?: Date;\n  modificationDate?: Date;\n}\n\ninterface ExtractedPage {\n  pageNumber: number;\n  content: Uint8Array;\n}\n\nexport class PDFService {\n  private currentPDF: PDFDocument | null = null;\n  private originalBytes: Uint8Array | null = null;\n  private isModified: boolean = false;\n\n  constructor() {\n    // Note: Worker configuration is handled in index.tsx to avoid conflicts\n    // Just verify it's configured\n    if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {\n      console.warn('\u26A0\uFE0F PDF.js worker not configured - this may cause issues');\n    }\n  }\n\n  /**\n   * Set the current PDF document and track its state\n   */\n  setCurrentPDF(pdfDoc: PDFDocument, originalBytes: Uint8Array) {\n    this.currentPDF = pdfDoc;\n    this.originalBytes = createSafePDFBytes(originalBytes);\n    this.isModified = false;\n    console.log('\u2705 Current PDF set with safe byte tracking');\n  }\n\n  /**\n   * Get current PDF with validation\n   */\n  getCurrentPDF(): PDFDocument {\n    if (!this.currentPDF) {\n      throw new Error('No PDF document is currently loaded');\n    }\n    return this.currentPDF;\n  }\n\n  /**\n   * Mark document as modified for save tracking\n   */\n  markModified() {\n    this.isModified = true;\n    console.log('\uD83D\uDCDD PDF marked as modified');\n  }\n\n  /**\n   * Check if document has unsaved changes\n   */\n  hasUnsavedChanges(): boolean {\n    return this.isModified;\n  }\n\n  /**\n   * Save current PDF with comprehensive error recovery and ArrayBuffer detachment prevention\n   */\n  async saveCurrentPDF(): Promise<Uint8Array> {\n    if (!this.currentPDF) {\n      throw new Error('No PDF document to save');\n    }\n\n    console.log('\uD83D\uDCBE Starting PDF save with enhanced error recovery...');\n    \n    // Retry logic for robust saving\n    const maxRetries = 3;\n    let lastError: Error | null = null;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        console.log(`\uD83D\uDCBE Save attempt ${attempt}/${maxRetries}`);\n        \n        // Create safe save operation with proper byte handling\n        const savedBytes = await this.currentPDF.save({\n          useObjectStreams: false, // Disable for better compatibility\n          addDefaultPage: false,   // Don't add empty pages\n          updateFieldAppearances: true // Update form field appearances\n        });\n        \n        console.log(`\uD83D\uDD0D PDF saved to buffer: ${savedBytes.byteLength} bytes`);\n        \n        // Critical validation step\n        if (!savedBytes || savedBytes.byteLength === 0) {\n          throw new Error('PDF save produced empty or null data');\n        }\n        \n        // Validate the saved PDF data before processing\n        if (!validatePDFBytes(savedBytes)) {\n          throw new Error('PDF save operation produced invalid data - failed header validation');\n        }\n        \n        // Create multiple safe copies to prevent detachment issues\n        console.log('\uD83D\uDD27 Creating detachment-resistant PDF bytes...');\n        const safeBytes = createSafePDFBytes(savedBytes);\n        console.log(`\uD83D\uDD0D Safe bytes created: ${safeBytes.byteLength} bytes`);\n        \n        // Triple validation to ensure integrity\n        if (!validatePDFBytes(safeBytes)) {\n          throw new Error('Safe PDF bytes creation corrupted the data');\n        }\n        \n        // Verify byte-for-byte integrity (sample check)\n        const sampleSize = Math.min(100, savedBytes.length);\n        for (let i = 0; i < sampleSize; i++) {\n          if (safeBytes[i] !== savedBytes[i]) {\n            throw new Error(`Byte integrity check failed at position ${i}`);\n          }\n        }\n        \n        // Update our tracked state\n        this.originalBytes = createSafePDFBytes(safeBytes);\n        this.isModified = false;\n        \n        console.log(`\u2705 PDF saved and validated successfully: ${safeBytes.byteLength} bytes`);\n        return safeBytes;\n        \n      } catch (error) {\n        lastError = error as Error;\n        console.error(`\u274C Save attempt ${attempt} failed:`, lastError.message);\n        \n        // If this is not the last attempt, wait before retrying\n        if (attempt < maxRetries) {\n          console.log(`\u23F3 Waiting before retry attempt ${attempt + 1}...`);\n          await new Promise(resolve => setTimeout(resolve, 1000 * attempt));\n          \n          // Try to recover by creating a fresh PDF instance from current state\n          if (this.originalBytes) {\n            try {\n              console.log('\uD83D\uDD04 Attempting to recover PDF state for retry...');\n              const recoveredPDF = await PDFDocument.load(this.originalBytes);\n              this.currentPDF = recoveredPDF;\n              console.log('\u2705 PDF state recovered for retry');\n            } catch (recoveryError) {\n              console.warn('\u26A0\uFE0F Could not recover PDF state:', (recoveryError as Error).message);\n            }\n          }\n        }\n      }\n    }\n    \n    // If all attempts failed, throw the last error with context\n    const errorMessage = `Failed to save PDF after ${maxRetries} attempts: ${lastError?.message || 'Unknown error'}`;\n    console.error('\u274C All save attempts failed:', errorMessage);\n    throw new Error(errorMessage);\n  }\n\n  /**\n   * Load a PDF document from binary data using safe loading\n   * @param data PDF binary data\n   * @returns Promise with PDF document proxy\n   */\n  async loadPDF(data: Uint8Array, options?: any): Promise<PDFDocumentProxy> {\n    try {\n      console.log('\uD83D\uDCC4 Loading PDF document with enhanced safety...');\n      \n      // Use the safe loading utility\n      const pdf = await loadPDFSafely(data, options);\n      return pdf;\n      \n    } catch (error) {\n      console.error('\u274C Error loading PDF:', error);\n      throw new Error(`Failed to load PDF document: ${error.message}`);\n    }\n  }\n\n  async createPDF(): Promise<PDFDocument> {\n    return await PDFDocument.create();\n  }\n\n  /**\n   * Create a PDF document from byte array with enhanced safety and error recovery\n   */\n  async createPDFFromBytes(pdfBytes: Uint8Array): Promise<PDFDocument> {\n    console.log('\uD83D\uDCC4 Creating PDF document from bytes with enhanced safety...');\n    \n    if (!pdfBytes || pdfBytes.byteLength === 0) {\n      throw new Error('Cannot create PDF from empty or null byte array');\n    }\n    \n    // Validate PDF bytes before attempting to load\n    if (!validatePDFBytes(pdfBytes)) {\n      throw new Error('Invalid PDF bytes provided to createPDFFromBytes');\n    }\n    \n    const maxRetries = 3;\n    let lastError: Error | null = null;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        console.log(`\uD83D\uDCC4 PDF creation attempt ${attempt}/${maxRetries}`);\n        \n        // Create safe bytes to prevent detachment issues\n        const safeBytes = createSafePDFBytes(pdfBytes);\n        \n        // Load PDF with enhanced options\n        const pdfDoc = await PDFDocument.load(safeBytes, {\n          ignoreEncryption: false,\n          parseSpeed: 1, // Standard parsing speed for reliability\n          throwOnInvalidJPEGData: false, // Be lenient with image data\n          updateMetadata: true // Update metadata on load\n        });\n        \n        console.log(`\u2705 PDF document created successfully: ${pdfDoc.getPageCount()} pages`);\n        \n        // Set this as current PDF and track original bytes\n        this.setCurrentPDF(pdfDoc, safeBytes);\n        \n        return pdfDoc;\n        \n      } catch (error) {\n        lastError = error as Error;\n        console.error(`\u274C PDF creation attempt ${attempt} failed:`, lastError.message);\n        \n        if (attempt < maxRetries) {\n          console.log(`\u23F3 Waiting before retry attempt ${attempt + 1}...`);\n          await new Promise(resolve => setTimeout(resolve, 500 * attempt));\n        }\n      }\n    }\n    \n    const errorMessage = `Failed to create PDF document after ${maxRetries} attempts: ${lastError?.message || 'Unknown error'}`;\n    console.error('\u274C All PDF creation attempts failed:', errorMessage);\n    throw new Error(errorMessage);\n  }\n\n  async copyPages(\n    sourcePdf: PDFDocument,\n    pageIndices: number[]\n  ): Promise<PDFPage[]> {\n    return await sourcePdf.copyPages(sourcePdf, pageIndices);\n  }\n\n  // Merge multiple PDFs into one\n  async mergePDFs(pdfBuffers: Uint8Array[]): Promise<Uint8Array> {\n    const mergedPdf = await PDFDocument.create();\n    \n    for (const buffer of pdfBuffers) {\n      const pdf = await PDFDocument.load(buffer);\n      const pages = await mergedPdf.copyPages(pdf, pdf.getPages().map((_, i) => i));\n      pages.forEach(page => mergedPdf.addPage(page));\n    }\n    \n    return await mergedPdf.save();\n  }\n\n  // Split PDF at specified page\n  async splitPDF(\n    pdfBytes: Uint8Array,\n    splitPage: number\n  ): Promise<{ first: Uint8Array; second: Uint8Array }> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const totalPages = pdfDoc.getPageCount();\n    \n    if (splitPage < 1 || splitPage >= totalPages) {\n      throw new Error('Invalid split page number');\n    }\n    \n    // Create first part\n    const firstPdf = await PDFDocument.create();\n    const firstPages = await firstPdf.copyPages(\n      pdfDoc,\n      Array.from({ length: splitPage }, (_, i) => i)\n    );\n    firstPages.forEach(page => firstPdf.addPage(page));\n    \n    // Create second part\n    const secondPdf = await PDFDocument.create();\n    const secondPages = await secondPdf.copyPages(\n      pdfDoc,\n      Array.from({ length: totalPages - splitPage }, (_, i) => i + splitPage)\n    );\n    secondPages.forEach(page => secondPdf.addPage(page));\n    \n    return {\n      first: await firstPdf.save(),\n      second: await secondPdf.save()\n    };\n  }\n\n  // Extract specific pages\n  async extractPages(\n    pdfBytes: Uint8Array,\n    pageNumbers: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const extractedPdf = await PDFDocument.create();\n    \n    // Convert page numbers to indices (0-based)\n    const indices = pageNumbers.map(num => num - 1);\n    const pages = await extractedPdf.copyPages(pdfDoc, indices);\n    pages.forEach(page => extractedPdf.addPage(page));\n    \n    return await extractedPdf.save();\n  }\n\n  // Rotate pages\n  async rotatePages(\n    pdfBytes: Uint8Array,\n    rotation: number,\n    pageNumbers?: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    \n    const targetPages = pageNumbers \n      ? pageNumbers.map(n => pages[n - 1])\n      : pages;\n    \n    targetPages.forEach(page => {\n      const currentRotation = page.getRotation();\n      page.setRotation(degrees(currentRotation.angle + rotation));\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Insert blank page\n  async insertBlankPage(\n    pdfBytes: Uint8Array,\n    afterPage: number,\n    width: number = 595.28, // A4 width in points\n    height: number = 841.89 // A4 height in points\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.insertPage(afterPage, [width, height]);\n    \n    // Add placeholder text\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    page.drawText('Blank Page', {\n      x: 50,\n      y: height - 50,\n      size: 10,\n      font,\n      color: rgb(0.8, 0.8, 0.8)\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Delete pages\n  async deletePages(\n    pdfBytes: Uint8Array,\n    pageNumbers: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Sort in descending order to avoid index shifting issues\n    const sortedPages = [...pageNumbers].sort((a, b) => b - a);\n    \n    sortedPages.forEach(pageNum => {\n      if (pageNum > 0 && pageNum <= pdfDoc.getPageCount()) {\n        pdfDoc.removePage(pageNum - 1);\n      }\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Compress PDF (simplified compression)\n  async compressPDF(\n    pdfBytes: Uint8Array,\n    quality: 'low' | 'medium' | 'high' = 'medium'\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Compression options based on quality\n    const options = {\n      low: { useObjectStreams: true, compress: true },\n      medium: { useObjectStreams: false, compress: true },\n      high: { useObjectStreams: false, compress: false }\n    };\n    \n    const saveOptions = options[quality];\n    return await pdfDoc.save(saveOptions);\n  }\n\n  // Add watermark to PDF\n  async addWatermark(\n    pdfBytes: Uint8Array,\n    watermarkText: string,\n    options: {\n      fontSize?: number;\n      opacity?: number;\n      rotation?: number;\n      color?: { r: number; g: number; b: number };\n    } = {}\n  ): Promise<Uint8Array> {\n    const {\n      fontSize = 50,\n      opacity = 0.3,\n      rotation = 45,\n      color = { r: 0.5, g: 0.5, b: 0.5 }\n    } = options;\n    \n    try {\n      console.log('\uD83C\uDFF7\uFE0F Adding watermark to PDF...');\n      \n      // Create safe copy to prevent ArrayBuffer detachment\n      const safePdfBytes = createSafePDFBytes(pdfBytes);\n      const pdfDoc = await PDFDocument.load(safePdfBytes);\n      const pages = pdfDoc.getPages();\n      const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n      \n      for (const page of pages) {\n        const { width, height } = page.getSize();\n        const textWidth = font.widthOfTextAtSize(watermarkText, fontSize);\n        \n        page.drawText(watermarkText, {\n          x: (width - textWidth) / 2,\n          y: height / 2,\n          size: fontSize,\n          font,\n          color: rgb(color.r, color.g, color.b),\n          opacity,\n          rotate: degrees(rotation)\n        });\n      }\n      \n      const result = await pdfDoc.save();\n      const safeResult = createSafePDFBytes(result);\n      \n      console.log(`\u2705 Watermark added successfully to ${pages.length} pages`);\n      return safeResult;\n      \n    } catch (error) {\n      console.error('\u274C Watermark operation failed:', error);\n      throw new Error(`Failed to add watermark: ${error.message}`);\n    }\n  }\n\n  // Create a form on the PDF\n  createForm() {\n    const currentPDF = this.getCurrentPDF();\n    \n    try {\n      // Get or create the form\n      const form = currentPDF.getForm();\n      this.markModified();\n      console.log('\u2705 PDF form accessed/created successfully');\n      return form;\n    } catch (error) {\n      console.error('\u274C Form creation failed:', error);\n      throw new Error(`Failed to create/access form: ${error.message}`);\n    }\n  }\n\n  // Add page numbers\n  async addPageNumbers(\n    pdfBytes: Uint8Array,\n    options: {\n      position?: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n      format?: string; // e.g., \"Page {n} of {total}\"\n      fontSize?: number;\n      margin?: number;\n    } = {}\n  ): Promise<Uint8Array> {\n    const {\n      position = 'bottom-center',\n      format = 'Page {n} of {total}',\n      fontSize = 10,\n      margin = 30\n    } = options;\n    \n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\n    const totalPages = pages.length;\n    \n    pages.forEach((page, index) => {\n      const { width, height } = page.getSize();\n      const pageNum = index + 1;\n      const text = format\n        .replace('{n}', pageNum.toString())\n        .replace('{total}', totalPages.toString());\n      \n      const textWidth = font.widthOfTextAtSize(text, fontSize);\n      \n      let x = margin;\n      let y = margin;\n      \n      // Calculate position\n      if (position.includes('center')) {\n        x = (width - textWidth) / 2;\n      } else if (position.includes('right')) {\n        x = width - textWidth - margin;\n      }\n      \n      if (position.includes('top')) {\n        y = height - margin;\n      }\n      \n      page.drawText(text, {\n        x,\n        y,\n        size: fontSize,\n        font,\n        color: rgb(0, 0, 0)\n      });\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Get PDF metadata\n  async getMetadata(pdfBytes: Uint8Array): Promise<PDFMetadata> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    return {\n      title: pdfDoc.getTitle(),\n      author: pdfDoc.getAuthor(),\n      subject: pdfDoc.getSubject(),\n      keywords: pdfDoc.getKeywords()?.split(',').map(k => k.trim()) || [],\n      creator: pdfDoc.getCreator(),\n      producer: pdfDoc.getProducer(),\n      creationDate: pdfDoc.getCreationDate(),\n      modificationDate: pdfDoc.getModificationDate()\n    };\n  }\n\n  // Set PDF metadata\n  async setMetadata(\n    pdfBytes: Uint8Array,\n    metadata: PDFMetadata\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    if (metadata.title) pdfDoc.setTitle(metadata.title);\n    if (metadata.author) pdfDoc.setAuthor(metadata.author);\n    if (metadata.subject) pdfDoc.setSubject(metadata.subject);\n    if (metadata.keywords && metadata.keywords.length > 0) {\n      // setKeywords expects string array in pdf-lib\n      pdfDoc.setKeywords(metadata.keywords);\n    }\n    if (metadata.creator) pdfDoc.setCreator(metadata.creator);\n    if (metadata.producer) pdfDoc.setProducer(metadata.producer);\n    if (metadata.creationDate) pdfDoc.setCreationDate(metadata.creationDate);\n    if (metadata.modificationDate) pdfDoc.setModificationDate(metadata.modificationDate);\n    \n    return await pdfDoc.save();\n  }\n\n  // Optimize PDF for web\n  async optimizeForWeb(pdfBytes: Uint8Array): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    \n    // Web optimization settings\n    return await pdfDoc.save({\n      useObjectStreams: false,\n      addDefaultPage: false,\n      objectsPerTick: 200,\n      updateFieldAppearances: true\n    });\n  }\n\n  // Add image to PDF\n  async addImage(\n    pdfBytes: Uint8Array,\n    imageBytes: Uint8Array,\n    pageNumber: number,\n    options: {\n      x: number;\n      y: number;\n      width?: number;\n      height?: number;\n      opacity?: number;\n    }\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.getPage(pageNumber - 1);\n    \n    let image: PDFImage;\n    \n    // Detect image type and embed accordingly\n    const uint8 = new Uint8Array(imageBytes);\n    if (uint8[0] === 0xFF && uint8[1] === 0xD8) {\n      // JPEG\n      image = await pdfDoc.embedJpg(imageBytes);\n    } else if (uint8[0] === 0x89 && uint8[1] === 0x50) {\n      // PNG\n      image = await pdfDoc.embedPng(imageBytes);\n    } else {\n      throw new Error('Unsupported image format');\n    }\n    \n    const { width: imgWidth, height: imgHeight } = image;\n    const width = options.width || imgWidth;\n    const height = options.height || imgHeight;\n    \n    page.drawImage(image, {\n      x: options.x,\n      y: options.y,\n      width,\n      height,\n      opacity: options.opacity || 1\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  // Reorder pages\n  async reorderPages(\n    pdfBytes: Uint8Array,\n    newOrder: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const reorderedPdf = await PDFDocument.create();\n    \n    // Convert 1-based to 0-based indices\n    const indices = newOrder.map(n => n - 1);\n    const pages = await reorderedPdf.copyPages(pdfDoc, indices);\n    pages.forEach(page => reorderedPdf.addPage(page));\n    \n    return await reorderedPdf.save();\n  }\n\n  // Get page dimensions\n  async getPageDimensions(\n    pdfBytes: Uint8Array,\n    pageNumber: number\n  ): Promise<{ width: number; height: number; rotation: number }> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.getPage(pageNumber - 1);\n    const { width, height } = page.getSize();\n    const rotation = page.getRotation();\n    \n    return {\n      width,\n      height,\n      rotation: rotation.angle\n    };\n  }\n\n  // Advanced page manipulation tools\n  \n  /**\n   * Crop pages to specified dimensions\n   */\n  async cropPages(\n    pdfBytes: Uint8Array,\n    cropArea: { x: number; y: number; width: number; height: number },\n    pageNumbers?: number[]\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const pages = pdfDoc.getPages();\n    \n    const targetPages = pageNumbers \n      ? pageNumbers.map(n => pages[n - 1]).filter(p => p)\n      : pages;\n    \n    targetPages.forEach(page => {\n      page.setCropBox(cropArea.x, cropArea.y, cropArea.width, cropArea.height);\n    });\n    \n    return await pdfDoc.save();\n  }\n\n  /**\n   * Batch process multiple PDFs\n   */\n  async batchProcess(\n    operations: Array<{\n      type: 'merge' | 'split' | 'rotate' | 'compress' | 'watermark';\n      inputFiles: Uint8Array[];\n      options?: any;\n    }>\n  ): Promise<Uint8Array[]> {\n    const results: Uint8Array[] = [];\n    \n    for (const operation of operations) {\n      try {\n        switch (operation.type) {\n          case 'merge':\n            const merged = await this.mergePDFs(operation.inputFiles);\n            results.push(merged);\n            break;\n            \n          case 'rotate':\n            for (const file of operation.inputFiles) {\n              const rotated = await this.rotatePages(\n                file,\n                operation.options?.rotation || 90,\n                operation.options?.pageNumbers\n              );\n              results.push(rotated);\n            }\n            break;\n            \n          case 'compress':\n            for (const file of operation.inputFiles) {\n              const compressed = await this.compressPDF(\n                file,\n                operation.options?.quality || 'medium'\n              );\n              results.push(compressed);\n            }\n            break;\n            \n          case 'watermark':\n            for (const file of operation.inputFiles) {\n              const watermarked = await this.addWatermark(\n                file,\n                operation.options?.text || 'WATERMARK',\n                operation.options?.options || {}\n              );\n              results.push(watermarked);\n            }\n            break;\n            \n          default:\n            console.warn(`Unsupported batch operation: ${operation.type}`);\n            break;\n        }\n      } catch (error) {\n        console.error(`Batch operation ${operation.type} failed:`, error);\n        // Continue with other operations\n      }\n    }\n    \n    return results;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "94787ab8fab21f6c5a1de406e5652ccee61a8570"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fumnfmdy7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fumnfmdy7();
var __createBinding =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[0]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fumnfmdy7().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[0]++;
  cov_2fumnfmdy7().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[2][0]++;
    cov_2fumnfmdy7().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2fumnfmdy7().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[5][1]++,
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[3][0]++;
    cov_2fumnfmdy7().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[1]++;
        cov_2fumnfmdy7().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[3][1]++;
  }
  cov_2fumnfmdy7().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2fumnfmdy7().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[2]++;
  cov_2fumnfmdy7().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().b[7][0]++;
    cov_2fumnfmdy7().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fumnfmdy7().b[7][1]++;
  }
  cov_2fumnfmdy7().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[11]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fumnfmdy7().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[3]++;
  cov_2fumnfmdy7().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2fumnfmdy7().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[4]++;
  cov_2fumnfmdy7().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[14]++,
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2fumnfmdy7().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2fumnfmdy7().f[5]++;
  cov_2fumnfmdy7().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[6]++;
    cov_2fumnfmdy7().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[17]++, []);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[12][0]++;
          cov_2fumnfmdy7().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2fumnfmdy7().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[8]++;
    cov_2fumnfmdy7().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[13][0]++;
      cov_2fumnfmdy7().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[26]++, {});
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[15][0]++;
      cov_2fumnfmdy7().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[16][0]++;
          cov_2fumnfmdy7().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[15][1]++;
    }
    cov_2fumnfmdy7().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2fumnfmdy7().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fumnfmdy7().s[36]++;
exports.PDFService = void 0;
const pdf_lib_1 =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[37]++, require("pdf-lib"));
const pdfjsLib =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[38]++, __importStar(require("pdfjs-dist")));
const utils_1 =
/* istanbul ignore next */
(cov_2fumnfmdy7().s[39]++, require("../../common/utils"));
class PDFService {
  currentPDF =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[40]++, null);
  originalBytes =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[41]++, null);
  isModified =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().s[42]++, false);
  constructor() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[9]++;
    cov_2fumnfmdy7().s[43]++;
    // Note: Worker configuration is handled in index.tsx to avoid conflicts
    // Just verify it's configured
    if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[17][0]++;
      cov_2fumnfmdy7().s[44]++;
      console.warn('⚠️ PDF.js worker not configured - this may cause issues');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[17][1]++;
    }
  }
  /**
   * Set the current PDF document and track its state
   */
  setCurrentPDF(pdfDoc, originalBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[10]++;
    cov_2fumnfmdy7().s[45]++;
    this.currentPDF = pdfDoc;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[46]++;
    this.originalBytes = (0, utils_1.createSafePDFBytes)(originalBytes);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[47]++;
    this.isModified = false;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[48]++;
    console.log('✅ Current PDF set with safe byte tracking');
  }
  /**
   * Get current PDF with validation
   */
  getCurrentPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[11]++;
    cov_2fumnfmdy7().s[49]++;
    if (!this.currentPDF) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[18][0]++;
      cov_2fumnfmdy7().s[50]++;
      throw new Error('No PDF document is currently loaded');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[18][1]++;
    }
    cov_2fumnfmdy7().s[51]++;
    return this.currentPDF;
  }
  /**
   * Mark document as modified for save tracking
   */
  markModified() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[12]++;
    cov_2fumnfmdy7().s[52]++;
    this.isModified = true;
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[53]++;
    console.log('📝 PDF marked as modified');
  }
  /**
   * Check if document has unsaved changes
   */
  hasUnsavedChanges() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[13]++;
    cov_2fumnfmdy7().s[54]++;
    return this.isModified;
  }
  /**
   * Save current PDF with comprehensive error recovery and ArrayBuffer detachment prevention
   */
  async saveCurrentPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[14]++;
    cov_2fumnfmdy7().s[55]++;
    if (!this.currentPDF) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[19][0]++;
      cov_2fumnfmdy7().s[56]++;
      throw new Error('No PDF document to save');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[19][1]++;
    }
    cov_2fumnfmdy7().s[57]++;
    console.log('💾 Starting PDF save with enhanced error recovery...');
    // Retry logic for robust saving
    const maxRetries =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[58]++, 3);
    let lastError =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[59]++, null);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[60]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[61]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[62]++;
      try {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[63]++;
        console.log(`💾 Save attempt ${attempt}/${maxRetries}`);
        // Create safe save operation with proper byte handling
        const savedBytes =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[64]++, await this.currentPDF.save({
          useObjectStreams: false,
          // Disable for better compatibility
          addDefaultPage: false,
          // Don't add empty pages
          updateFieldAppearances: true // Update form field appearances
        }));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[65]++;
        console.log(`🔍 PDF saved to buffer: ${savedBytes.byteLength} bytes`);
        // Critical validation step
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[66]++;
        if (
        /* istanbul ignore next */
        (cov_2fumnfmdy7().b[21][0]++, !savedBytes) ||
        /* istanbul ignore next */
        (cov_2fumnfmdy7().b[21][1]++, savedBytes.byteLength === 0)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[20][0]++;
          cov_2fumnfmdy7().s[67]++;
          throw new Error('PDF save produced empty or null data');
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[20][1]++;
        }
        // Validate the saved PDF data before processing
        cov_2fumnfmdy7().s[68]++;
        if (!(0, utils_1.validatePDFBytes)(savedBytes)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[22][0]++;
          cov_2fumnfmdy7().s[69]++;
          throw new Error('PDF save operation produced invalid data - failed header validation');
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[22][1]++;
        }
        // Create multiple safe copies to prevent detachment issues
        cov_2fumnfmdy7().s[70]++;
        console.log('🔧 Creating detachment-resistant PDF bytes...');
        const safeBytes =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[71]++, (0, utils_1.createSafePDFBytes)(savedBytes));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[72]++;
        console.log(`🔍 Safe bytes created: ${safeBytes.byteLength} bytes`);
        // Triple validation to ensure integrity
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[73]++;
        if (!(0, utils_1.validatePDFBytes)(safeBytes)) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[23][0]++;
          cov_2fumnfmdy7().s[74]++;
          throw new Error('Safe PDF bytes creation corrupted the data');
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[23][1]++;
        }
        // Verify byte-for-byte integrity (sample check)
        const sampleSize =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[75]++, Math.min(100, savedBytes.length));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[76]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[77]++, 0); i < sampleSize; i++) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().s[78]++;
          if (safeBytes[i] !== savedBytes[i]) {
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[24][0]++;
            cov_2fumnfmdy7().s[79]++;
            throw new Error(`Byte integrity check failed at position ${i}`);
          } else
          /* istanbul ignore next */
          {
            cov_2fumnfmdy7().b[24][1]++;
          }
        }
        // Update our tracked state
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[80]++;
        this.originalBytes = (0, utils_1.createSafePDFBytes)(safeBytes);
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[81]++;
        this.isModified = false;
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[82]++;
        console.log(`✅ PDF saved and validated successfully: ${safeBytes.byteLength} bytes`);
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[83]++;
        return safeBytes;
      } catch (error) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[84]++;
        lastError = error;
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[85]++;
        console.error(`❌ Save attempt ${attempt} failed:`, lastError.message);
        // If this is not the last attempt, wait before retrying
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[86]++;
        if (attempt < maxRetries) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[25][0]++;
          cov_2fumnfmdy7().s[87]++;
          console.log(`⏳ Waiting before retry attempt ${attempt + 1}...`);
          /* istanbul ignore next */
          cov_2fumnfmdy7().s[88]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_2fumnfmdy7().f[15]++;
            cov_2fumnfmdy7().s[89]++;
            return setTimeout(resolve, 1000 * attempt);
          });
          // Try to recover by creating a fresh PDF instance from current state
          /* istanbul ignore next */
          cov_2fumnfmdy7().s[90]++;
          if (this.originalBytes) {
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[26][0]++;
            cov_2fumnfmdy7().s[91]++;
            try {
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[92]++;
              console.log('🔄 Attempting to recover PDF state for retry...');
              const recoveredPDF =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[93]++, await pdf_lib_1.PDFDocument.load(this.originalBytes));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[94]++;
              this.currentPDF = recoveredPDF;
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[95]++;
              console.log('✅ PDF state recovered for retry');
            } catch (recoveryError) {
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[96]++;
              console.warn('⚠️ Could not recover PDF state:', recoveryError.message);
            }
          } else
          /* istanbul ignore next */
          {
            cov_2fumnfmdy7().b[26][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[25][1]++;
        }
      }
    }
    // If all attempts failed, throw the last error with context
    const errorMessage =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[97]++, `Failed to save PDF after ${maxRetries} attempts: ${
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[27][0]++, lastError?.message) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[27][1]++, 'Unknown error')}`);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[98]++;
    console.error('❌ All save attempts failed:', errorMessage);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[99]++;
    throw new Error(errorMessage);
  }
  /**
   * Load a PDF document from binary data using safe loading
   * @param data PDF binary data
   * @returns Promise with PDF document proxy
   */
  async loadPDF(data, options) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[16]++;
    cov_2fumnfmdy7().s[100]++;
    try {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[101]++;
      console.log('📄 Loading PDF document with enhanced safety...');
      // Use the safe loading utility
      const pdf =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[102]++, await (0, utils_1.loadPDFSafely)(data, options));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[103]++;
      return pdf;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[104]++;
      console.error('❌ Error loading PDF:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[105]++;
      throw new Error(`Failed to load PDF document: ${error.message}`);
    }
  }
  async createPDF() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[17]++;
    cov_2fumnfmdy7().s[106]++;
    return await pdf_lib_1.PDFDocument.create();
  }
  /**
   * Create a PDF document from byte array with enhanced safety and error recovery
   */
  async createPDFFromBytes(pdfBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[18]++;
    cov_2fumnfmdy7().s[107]++;
    console.log('📄 Creating PDF document from bytes with enhanced safety...');
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[108]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[29][0]++, !pdfBytes) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[29][1]++, pdfBytes.byteLength === 0)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[28][0]++;
      cov_2fumnfmdy7().s[109]++;
      throw new Error('Cannot create PDF from empty or null byte array');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[28][1]++;
    }
    // Validate PDF bytes before attempting to load
    cov_2fumnfmdy7().s[110]++;
    if (!(0, utils_1.validatePDFBytes)(pdfBytes)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[30][0]++;
      cov_2fumnfmdy7().s[111]++;
      throw new Error('Invalid PDF bytes provided to createPDFFromBytes');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[30][1]++;
    }
    const maxRetries =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[112]++, 3);
    let lastError =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[113]++, null);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[114]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[115]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[116]++;
      try {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[117]++;
        console.log(`📄 PDF creation attempt ${attempt}/${maxRetries}`);
        // Create safe bytes to prevent detachment issues
        const safeBytes =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[118]++, (0, utils_1.createSafePDFBytes)(pdfBytes));
        // Load PDF with enhanced options
        const pdfDoc =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[119]++, await pdf_lib_1.PDFDocument.load(safeBytes, {
          ignoreEncryption: false,
          parseSpeed: 1,
          // Standard parsing speed for reliability
          throwOnInvalidJPEGData: false,
          // Be lenient with image data
          updateMetadata: true // Update metadata on load
        }));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[120]++;
        console.log(`✅ PDF document created successfully: ${pdfDoc.getPageCount()} pages`);
        // Set this as current PDF and track original bytes
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[121]++;
        this.setCurrentPDF(pdfDoc, safeBytes);
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[122]++;
        return pdfDoc;
      } catch (error) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[123]++;
        lastError = error;
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[124]++;
        console.error(`❌ PDF creation attempt ${attempt} failed:`, lastError.message);
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[125]++;
        if (attempt < maxRetries) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[31][0]++;
          cov_2fumnfmdy7().s[126]++;
          console.log(`⏳ Waiting before retry attempt ${attempt + 1}...`);
          /* istanbul ignore next */
          cov_2fumnfmdy7().s[127]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_2fumnfmdy7().f[19]++;
            cov_2fumnfmdy7().s[128]++;
            return setTimeout(resolve, 500 * attempt);
          });
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[31][1]++;
        }
      }
    }
    const errorMessage =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[129]++, `Failed to create PDF document after ${maxRetries} attempts: ${
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[32][0]++, lastError?.message) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[32][1]++, 'Unknown error')}`);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[130]++;
    console.error('❌ All PDF creation attempts failed:', errorMessage);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[131]++;
    throw new Error(errorMessage);
  }
  async copyPages(sourcePdf, pageIndices) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[20]++;
    cov_2fumnfmdy7().s[132]++;
    return await sourcePdf.copyPages(sourcePdf, pageIndices);
  }
  // Merge multiple PDFs into one
  async mergePDFs(pdfBuffers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[21]++;
    const mergedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[133]++, await pdf_lib_1.PDFDocument.create());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[134]++;
    for (const buffer of pdfBuffers) {
      const pdf =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[135]++, await pdf_lib_1.PDFDocument.load(buffer));
      const pages =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[136]++, await mergedPdf.copyPages(pdf, pdf.getPages().map((_, i) => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[22]++;
        cov_2fumnfmdy7().s[137]++;
        return i;
      })));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[138]++;
      pages.forEach(page => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[23]++;
        cov_2fumnfmdy7().s[139]++;
        return mergedPdf.addPage(page);
      });
    }
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[140]++;
    return await mergedPdf.save();
  }
  // Split PDF at specified page
  async splitPDF(pdfBytes, splitPage) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[24]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[141]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const totalPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[142]++, pdfDoc.getPageCount());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[143]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[34][0]++, splitPage < 1) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[34][1]++, splitPage >= totalPages)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[33][0]++;
      cov_2fumnfmdy7().s[144]++;
      throw new Error('Invalid split page number');
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[33][1]++;
    }
    // Create first part
    const firstPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[145]++, await pdf_lib_1.PDFDocument.create());
    const firstPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[146]++, await firstPdf.copyPages(pdfDoc, Array.from({
      length: splitPage
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[25]++;
      cov_2fumnfmdy7().s[147]++;
      return i;
    })));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[148]++;
    firstPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[26]++;
      cov_2fumnfmdy7().s[149]++;
      return firstPdf.addPage(page);
    });
    // Create second part
    const secondPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[150]++, await pdf_lib_1.PDFDocument.create());
    const secondPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[151]++, await secondPdf.copyPages(pdfDoc, Array.from({
      length: totalPages - splitPage
    }, (_, i) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[27]++;
      cov_2fumnfmdy7().s[152]++;
      return i + splitPage;
    })));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[153]++;
    secondPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[28]++;
      cov_2fumnfmdy7().s[154]++;
      return secondPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[155]++;
    return {
      first: await firstPdf.save(),
      second: await secondPdf.save()
    };
  }
  // Extract specific pages
  async extractPages(pdfBytes, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[29]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[156]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const extractedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[157]++, await pdf_lib_1.PDFDocument.create());
    // Convert page numbers to indices (0-based)
    const indices =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[158]++, pageNumbers.map(num => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[30]++;
      cov_2fumnfmdy7().s[159]++;
      return num - 1;
    }));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[160]++, await extractedPdf.copyPages(pdfDoc, indices));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[161]++;
    pages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[31]++;
      cov_2fumnfmdy7().s[162]++;
      return extractedPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[163]++;
    return await extractedPdf.save();
  }
  // Rotate pages
  async rotatePages(pdfBytes, rotation, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[32]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[164]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[165]++, pdfDoc.getPages());
    const targetPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[166]++, pageNumbers ?
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[35][0]++, pageNumbers.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[33]++;
      cov_2fumnfmdy7().s[167]++;
      return pages[n - 1];
    })) :
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[35][1]++, pages));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[168]++;
    targetPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[34]++;
      const currentRotation =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[169]++, page.getRotation());
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[170]++;
      page.setRotation((0, pdf_lib_1.degrees)(currentRotation.angle + rotation));
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[171]++;
    return await pdfDoc.save();
  }
  // Insert blank page
  async insertBlankPage(pdfBytes, afterPage, width =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[36][0]++, 595.28),
  // A4 width in points
  height =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[37][0]++, 841.89) // A4 height in points
  ) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[35]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[172]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[173]++, pdfDoc.insertPage(afterPage, [width, height]));
    // Add placeholder text
    const font =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[174]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[175]++;
    page.drawText('Blank Page', {
      x: 50,
      y: height - 50,
      size: 10,
      font,
      color: (0, pdf_lib_1.rgb)(0.8, 0.8, 0.8)
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[176]++;
    return await pdfDoc.save();
  }
  // Delete pages
  async deletePages(pdfBytes, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[36]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[177]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Sort in descending order to avoid index shifting issues
    const sortedPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[178]++, [...pageNumbers].sort((a, b) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[37]++;
      cov_2fumnfmdy7().s[179]++;
      return b - a;
    }));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[180]++;
    sortedPages.forEach(pageNum => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[38]++;
      cov_2fumnfmdy7().s[181]++;
      if (
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[39][0]++, pageNum > 0) &&
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[39][1]++, pageNum <= pdfDoc.getPageCount())) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[38][0]++;
        cov_2fumnfmdy7().s[182]++;
        pdfDoc.removePage(pageNum - 1);
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[38][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[183]++;
    return await pdfDoc.save();
  }
  // Compress PDF (simplified compression)
  async compressPDF(pdfBytes, quality =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[40][0]++, 'medium')) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[39]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[184]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Compression options based on quality
    const options =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[185]++, {
      low: {
        useObjectStreams: true,
        compress: true
      },
      medium: {
        useObjectStreams: false,
        compress: true
      },
      high: {
        useObjectStreams: false,
        compress: false
      }
    });
    const saveOptions =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[186]++, options[quality]);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[187]++;
    return await pdfDoc.save(saveOptions);
  }
  // Add watermark to PDF
  async addWatermark(pdfBytes, watermarkText, options =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[41][0]++, {})) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[40]++;
    const {
      fontSize =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[42][0]++, 50),
      opacity =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[43][0]++, 0.3),
      rotation =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[44][0]++, 45),
      color =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[45][0]++, {
        r: 0.5,
        g: 0.5,
        b: 0.5
      })
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[188]++, options);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[189]++;
    try {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[190]++;
      console.log('🏷️ Adding watermark to PDF...');
      // Create safe copy to prevent ArrayBuffer detachment
      const safePdfBytes =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[191]++, (0, utils_1.createSafePDFBytes)(pdfBytes));
      const pdfDoc =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[192]++, await pdf_lib_1.PDFDocument.load(safePdfBytes));
      const pages =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[193]++, pdfDoc.getPages());
      const font =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[194]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[195]++;
      for (const page of pages) {
        const {
          width,
          height
        } =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[196]++, page.getSize());
        const textWidth =
        /* istanbul ignore next */
        (cov_2fumnfmdy7().s[197]++, font.widthOfTextAtSize(watermarkText, fontSize));
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[198]++;
        page.drawText(watermarkText, {
          x: (width - textWidth) / 2,
          y: height / 2,
          size: fontSize,
          font,
          color: (0, pdf_lib_1.rgb)(color.r, color.g, color.b),
          opacity,
          rotate: (0, pdf_lib_1.degrees)(rotation)
        });
      }
      const result =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[199]++, await pdfDoc.save());
      const safeResult =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[200]++, (0, utils_1.createSafePDFBytes)(result));
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[201]++;
      console.log(`✅ Watermark added successfully to ${pages.length} pages`);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[202]++;
      return safeResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[203]++;
      console.error('❌ Watermark operation failed:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[204]++;
      throw new Error(`Failed to add watermark: ${error.message}`);
    }
  }
  // Create a form on the PDF
  createForm() {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[41]++;
    const currentPDF =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[205]++, this.getCurrentPDF());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[206]++;
    try {
      // Get or create the form
      const form =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[207]++, currentPDF.getForm());
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[208]++;
      this.markModified();
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[209]++;
      console.log('✅ PDF form accessed/created successfully');
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[210]++;
      return form;
    } catch (error) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[211]++;
      console.error('❌ Form creation failed:', error);
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[212]++;
      throw new Error(`Failed to create/access form: ${error.message}`);
    }
  }
  // Add page numbers
  async addPageNumbers(pdfBytes, options =
  /* istanbul ignore next */
  (cov_2fumnfmdy7().b[46][0]++, {})) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[42]++;
    const {
      position =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[47][0]++, 'bottom-center'),
      format =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[48][0]++, 'Page {n} of {total}'),
      fontSize =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[49][0]++, 10),
      margin =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[50][0]++, 30)
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[213]++, options);
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[214]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[215]++, pdfDoc.getPages());
    const font =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[216]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    const totalPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[217]++, pages.length);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[218]++;
    pages.forEach((page, index) => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[43]++;
      const {
        width,
        height
      } =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[219]++, page.getSize());
      const pageNum =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[220]++, index + 1);
      const text =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[221]++, format.replace('{n}', pageNum.toString()).replace('{total}', totalPages.toString()));
      const textWidth =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[222]++, font.widthOfTextAtSize(text, fontSize));
      let x =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[223]++, margin);
      let y =
      /* istanbul ignore next */
      (cov_2fumnfmdy7().s[224]++, margin);
      // Calculate position
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[225]++;
      if (position.includes('center')) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[51][0]++;
        cov_2fumnfmdy7().s[226]++;
        x = (width - textWidth) / 2;
      } else {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[51][1]++;
        cov_2fumnfmdy7().s[227]++;
        if (position.includes('right')) {
          /* istanbul ignore next */
          cov_2fumnfmdy7().b[52][0]++;
          cov_2fumnfmdy7().s[228]++;
          x = width - textWidth - margin;
        } else
        /* istanbul ignore next */
        {
          cov_2fumnfmdy7().b[52][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[229]++;
      if (position.includes('top')) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[53][0]++;
        cov_2fumnfmdy7().s[230]++;
        y = height - margin;
      } else
      /* istanbul ignore next */
      {
        cov_2fumnfmdy7().b[53][1]++;
      }
      cov_2fumnfmdy7().s[231]++;
      page.drawText(text, {
        x,
        y,
        size: fontSize,
        font,
        color: (0, pdf_lib_1.rgb)(0, 0, 0)
      });
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[232]++;
    return await pdfDoc.save();
  }
  // Get PDF metadata
  async getMetadata(pdfBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[44]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[233]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[234]++;
    return {
      title: pdfDoc.getTitle(),
      author: pdfDoc.getAuthor(),
      subject: pdfDoc.getSubject(),
      keywords:
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[54][0]++, pdfDoc.getKeywords()?.split(',').map(k => {
        /* istanbul ignore next */
        cov_2fumnfmdy7().f[45]++;
        cov_2fumnfmdy7().s[235]++;
        return k.trim();
      })) ||
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[54][1]++, []),
      creator: pdfDoc.getCreator(),
      producer: pdfDoc.getProducer(),
      creationDate: pdfDoc.getCreationDate(),
      modificationDate: pdfDoc.getModificationDate()
    };
  }
  // Set PDF metadata
  async setMetadata(pdfBytes, metadata) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[46]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[236]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[237]++;
    if (metadata.title) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[55][0]++;
      cov_2fumnfmdy7().s[238]++;
      pdfDoc.setTitle(metadata.title);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[55][1]++;
    }
    cov_2fumnfmdy7().s[239]++;
    if (metadata.author) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[56][0]++;
      cov_2fumnfmdy7().s[240]++;
      pdfDoc.setAuthor(metadata.author);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[56][1]++;
    }
    cov_2fumnfmdy7().s[241]++;
    if (metadata.subject) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[57][0]++;
      cov_2fumnfmdy7().s[242]++;
      pdfDoc.setSubject(metadata.subject);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[57][1]++;
    }
    cov_2fumnfmdy7().s[243]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[59][0]++, metadata.keywords) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[59][1]++, metadata.keywords.length > 0)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[58][0]++;
      cov_2fumnfmdy7().s[244]++;
      // setKeywords expects string array in pdf-lib
      pdfDoc.setKeywords(metadata.keywords);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[58][1]++;
    }
    cov_2fumnfmdy7().s[245]++;
    if (metadata.creator) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[60][0]++;
      cov_2fumnfmdy7().s[246]++;
      pdfDoc.setCreator(metadata.creator);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[60][1]++;
    }
    cov_2fumnfmdy7().s[247]++;
    if (metadata.producer) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[61][0]++;
      cov_2fumnfmdy7().s[248]++;
      pdfDoc.setProducer(metadata.producer);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[61][1]++;
    }
    cov_2fumnfmdy7().s[249]++;
    if (metadata.creationDate) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[62][0]++;
      cov_2fumnfmdy7().s[250]++;
      pdfDoc.setCreationDate(metadata.creationDate);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[62][1]++;
    }
    cov_2fumnfmdy7().s[251]++;
    if (metadata.modificationDate) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[63][0]++;
      cov_2fumnfmdy7().s[252]++;
      pdfDoc.setModificationDate(metadata.modificationDate);
    } else
    /* istanbul ignore next */
    {
      cov_2fumnfmdy7().b[63][1]++;
    }
    cov_2fumnfmdy7().s[253]++;
    return await pdfDoc.save();
  }
  // Optimize PDF for web
  async optimizeForWeb(pdfBytes) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[47]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[254]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    // Web optimization settings
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[255]++;
    return await pdfDoc.save({
      useObjectStreams: false,
      addDefaultPage: false,
      objectsPerTick: 200,
      updateFieldAppearances: true
    });
  }
  // Add image to PDF
  async addImage(pdfBytes, imageBytes, pageNumber, options) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[48]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[256]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[257]++, pdfDoc.getPage(pageNumber - 1));
    let image;
    // Detect image type and embed accordingly
    const uint8 =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[258]++, new Uint8Array(imageBytes));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[259]++;
    if (
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[65][0]++, uint8[0] === 0xFF) &&
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[65][1]++, uint8[1] === 0xD8)) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[64][0]++;
      cov_2fumnfmdy7().s[260]++;
      // JPEG
      image = await pdfDoc.embedJpg(imageBytes);
    } else {
      /* istanbul ignore next */
      cov_2fumnfmdy7().b[64][1]++;
      cov_2fumnfmdy7().s[261]++;
      if (
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[67][0]++, uint8[0] === 0x89) &&
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[67][1]++, uint8[1] === 0x50)) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[66][0]++;
        cov_2fumnfmdy7().s[262]++;
        // PNG
        image = await pdfDoc.embedPng(imageBytes);
      } else {
        /* istanbul ignore next */
        cov_2fumnfmdy7().b[66][1]++;
        cov_2fumnfmdy7().s[263]++;
        throw new Error('Unsupported image format');
      }
    }
    const {
      width: imgWidth,
      height: imgHeight
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[264]++, image);
    const width =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[265]++,
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[68][0]++, options.width) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[68][1]++, imgWidth));
    const height =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[266]++,
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[69][0]++, options.height) ||
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[69][1]++, imgHeight));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[267]++;
    page.drawImage(image, {
      x: options.x,
      y: options.y,
      width,
      height,
      opacity:
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[70][0]++, options.opacity) ||
      /* istanbul ignore next */
      (cov_2fumnfmdy7().b[70][1]++, 1)
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[268]++;
    return await pdfDoc.save();
  }
  // Reorder pages
  async reorderPages(pdfBytes, newOrder) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[49]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[269]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const reorderedPdf =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[270]++, await pdf_lib_1.PDFDocument.create());
    // Convert 1-based to 0-based indices
    const indices =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[271]++, newOrder.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[50]++;
      cov_2fumnfmdy7().s[272]++;
      return n - 1;
    }));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[273]++, await reorderedPdf.copyPages(pdfDoc, indices));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[274]++;
    pages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[51]++;
      cov_2fumnfmdy7().s[275]++;
      return reorderedPdf.addPage(page);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[276]++;
    return await reorderedPdf.save();
  }
  // Get page dimensions
  async getPageDimensions(pdfBytes, pageNumber) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[52]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[277]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[278]++, pdfDoc.getPage(pageNumber - 1));
    const {
      width,
      height
    } =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[279]++, page.getSize());
    const rotation =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[280]++, page.getRotation());
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[281]++;
    return {
      width,
      height,
      rotation: rotation.angle
    };
  }
  // Advanced page manipulation tools
  /**
   * Crop pages to specified dimensions
   */
  async cropPages(pdfBytes, cropArea, pageNumbers) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[53]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[282]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const pages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[283]++, pdfDoc.getPages());
    const targetPages =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[284]++, pageNumbers ?
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[71][0]++, pageNumbers.map(n => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[54]++;
      cov_2fumnfmdy7().s[285]++;
      return pages[n - 1];
    }).filter(p => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[55]++;
      cov_2fumnfmdy7().s[286]++;
      return p;
    })) :
    /* istanbul ignore next */
    (cov_2fumnfmdy7().b[71][1]++, pages));
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[287]++;
    targetPages.forEach(page => {
      /* istanbul ignore next */
      cov_2fumnfmdy7().f[56]++;
      cov_2fumnfmdy7().s[288]++;
      page.setCropBox(cropArea.x, cropArea.y, cropArea.width, cropArea.height);
    });
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[289]++;
    return await pdfDoc.save();
  }
  /**
   * Batch process multiple PDFs
   */
  async batchProcess(operations) {
    /* istanbul ignore next */
    cov_2fumnfmdy7().f[57]++;
    const results =
    /* istanbul ignore next */
    (cov_2fumnfmdy7().s[290]++, []);
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[291]++;
    for (const operation of operations) {
      /* istanbul ignore next */
      cov_2fumnfmdy7().s[292]++;
      try {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[293]++;
        switch (operation.type) {
          case 'merge':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[72][0]++;
            const merged =
            /* istanbul ignore next */
            (cov_2fumnfmdy7().s[294]++, await this.mergePDFs(operation.inputFiles));
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[295]++;
            results.push(merged);
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[296]++;
            break;
          case 'rotate':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[72][1]++;
            cov_2fumnfmdy7().s[297]++;
            for (const file of operation.inputFiles) {
              const rotated =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[298]++, await this.rotatePages(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[73][0]++, operation.options?.rotation) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[73][1]++, 90), operation.options?.pageNumbers));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[299]++;
              results.push(rotated);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[300]++;
            break;
          case 'compress':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[72][2]++;
            cov_2fumnfmdy7().s[301]++;
            for (const file of operation.inputFiles) {
              const compressed =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[302]++, await this.compressPDF(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[74][0]++, operation.options?.quality) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[74][1]++, 'medium')));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[303]++;
              results.push(compressed);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[304]++;
            break;
          case 'watermark':
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[72][3]++;
            cov_2fumnfmdy7().s[305]++;
            for (const file of operation.inputFiles) {
              const watermarked =
              /* istanbul ignore next */
              (cov_2fumnfmdy7().s[306]++, await this.addWatermark(file,
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[75][0]++, operation.options?.text) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[75][1]++, 'WATERMARK'),
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[76][0]++, operation.options?.options) ||
              /* istanbul ignore next */
              (cov_2fumnfmdy7().b[76][1]++, {})));
              /* istanbul ignore next */
              cov_2fumnfmdy7().s[307]++;
              results.push(watermarked);
            }
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[308]++;
            break;
          default:
            /* istanbul ignore next */
            cov_2fumnfmdy7().b[72][4]++;
            cov_2fumnfmdy7().s[309]++;
            console.warn(`Unsupported batch operation: ${operation.type}`);
            /* istanbul ignore next */
            cov_2fumnfmdy7().s[310]++;
            break;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2fumnfmdy7().s[311]++;
        console.error(`Batch operation ${operation.type} failed:`, error);
        // Continue with other operations
      }
    }
    /* istanbul ignore next */
    cov_2fumnfmdy7().s[312]++;
    return results;
  }
}
/* istanbul ignore next */
cov_2fumnfmdy7().s[313]++;
exports.PDFService = PDFService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,