870a9009c7c1c4f241f3651c4c69bc87
"use strict";

/* istanbul ignore next */
function cov_iee09csne() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DigitalSignatureService.ts";
  var hash = "f64c4b748bd3a2e4520655c39a2adf300217be91";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DigitalSignatureService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 41
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "4": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "5": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "6": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 60
        }
      },
      "8": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "9": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 27
        }
      },
      "10": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 114
        }
      },
      "11": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 65
        }
      },
      "12": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 37
        }
      },
      "13": {
        start: {
          line: 55,
          column: 21
        },
        end: {
          line: 55,
          column: 61
        }
      },
      "14": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 66
        }
      },
      "15": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "16": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "17": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 35
        }
      },
      "18": {
        start: {
          line: 80,
          column: 23
        },
        end: {
          line: 80,
          column: 65
        }
      },
      "19": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 61
        }
      },
      "20": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 99
        }
      },
      "21": {
        start: {
          line: 91,
          column: 30
        },
        end: {
          line: 91,
          column: 92
        }
      },
      "22": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "23": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "24": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 35
        }
      },
      "25": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 97
        }
      },
      "26": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "27": {
        start: {
          line: 110,
          column: 40
        },
        end: {
          line: 110,
          column: 45
        }
      },
      "28": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "29": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "30": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "31": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "32": {
        start: {
          line: 132,
          column: 21
        },
        end: {
          line: 132,
          column: 80
        }
      },
      "33": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 133,
          column: 70
        }
      },
      "34": {
        start: {
          line: 134,
          column: 23
        },
        end: {
          line: 134,
          column: 38
        }
      },
      "35": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "36": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 146,
          column: 17
        }
      },
      "37": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 144,
          column: 23
        }
      },
      "38": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 35
        }
      },
      "39": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 22
        }
      },
      "40": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 173,
          column: 17
        }
      },
      "41": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 172,
          column: 21
        }
      },
      "42": {
        start: {
          line: 152,
          column: 38
        },
        end: {
          line: 152,
          column: 75
        }
      },
      "43": {
        start: {
          line: 153,
          column: 24
        },
        end: {
          line: 158,
          column: 25
        }
      },
      "44": {
        start: {
          line: 154,
          column: 28
        },
        end: {
          line: 154,
          column: 83
        }
      },
      "45": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 158,
          column: 25
        }
      },
      "46": {
        start: {
          line: 157,
          column: 28
        },
        end: {
          line: 157,
          column: 83
        }
      },
      "47": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 168,
          column: 25
        }
      },
      "48": {
        start: {
          line: 160,
          column: 48
        },
        end: {
          line: 160,
          column: 73
        }
      },
      "49": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 166,
          column: 31
        }
      },
      "50": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 167,
          column: 56
        }
      },
      "51": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 171,
          column: 80
        }
      },
      "52": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 22
        }
      },
      "53": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 189,
          column: 17
        }
      },
      "54": {
        start: {
          line: 179,
          column: 33
        },
        end: {
          line: 179,
          column: 55
        }
      },
      "55": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 187,
          column: 21
        }
      },
      "56": {
        start: {
          line: 180,
          column: 33
        },
        end: {
          line: 180,
          column: 34
        }
      },
      "57": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 186,
          column: 27
        }
      },
      "58": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 35
        }
      },
      "59": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 22
        }
      },
      "60": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 216,
          column: 17
        }
      },
      "61": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 215,
          column: 21
        }
      },
      "62": {
        start: {
          line: 197,
          column: 38
        },
        end: {
          line: 197,
          column: 75
        }
      },
      "63": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 203,
          column: 25
        }
      },
      "64": {
        start: {
          line: 199,
          column: 28
        },
        end: {
          line: 199,
          column: 83
        }
      },
      "65": {
        start: {
          line: 201,
          column: 29
        },
        end: {
          line: 203,
          column: 25
        }
      },
      "66": {
        start: {
          line: 202,
          column: 28
        },
        end: {
          line: 202,
          column: 83
        }
      },
      "67": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 211,
          column: 25
        }
      },
      "68": {
        start: {
          line: 205,
          column: 28
        },
        end: {
          line: 210,
          column: 31
        }
      },
      "69": {
        start: {
          line: 214,
          column: 24
        },
        end: {
          line: 214,
          column: 80
        }
      },
      "70": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 225,
          column: 17
        }
      },
      "71": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 224,
          column: 23
        }
      },
      "72": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 31
        }
      },
      "73": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 22
        }
      },
      "74": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      },
      "75": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 23
        }
      },
      "76": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "77": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 67
        }
      },
      "78": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 247,
          column: 15
        }
      },
      "79": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 27
        }
      },
      "80": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "81": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "82": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 27
        }
      },
      "83": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "84": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "85": {
        start: {
          line: 282,
          column: 27
        },
        end: {
          line: 282,
          column: 72
        }
      },
      "86": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "87": {
        start: {
          line: 285,
          column: 30
        },
        end: {
          line: 288,
          column: 50
        }
      },
      "88": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 45
        }
      },
      "89": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 62
        }
      },
      "90": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 36
        }
      },
      "91": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "92": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 78
        }
      },
      "93": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 24
        }
      },
      "94": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 61
        }
      },
      "95": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 24
        }
      },
      "96": {
        start: {
          line: 315,
          column: 23
        },
        end: {
          line: 315,
          column: 65
        }
      },
      "97": {
        start: {
          line: 316,
          column: 21
        },
        end: {
          line: 316,
          column: 37
        }
      },
      "98": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "99": {
        start: {
          line: 318,
          column: 26
        },
        end: {
          line: 318,
          column: 59
        }
      },
      "100": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 81
        }
      },
      "101": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 76
        }
      },
      "102": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 35
        }
      },
      "103": {
        start: {
          line: 334,
          column: 23
        },
        end: {
          line: 334,
          column: 25
        }
      },
      "104": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 30
        }
      },
      "105": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "106": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 56
        }
      },
      "107": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "108": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 51
        }
      },
      "109": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 346,
          column: 10
        }
      },
      "110": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 43
        }
      },
      "111": {
        start: {
          line: 353,
          column: 84
        },
        end: {
          line: 353,
          column: 91
        }
      },
      "112": {
        start: {
          line: 354,
          column: 24
        },
        end: {
          line: 354,
          column: 29
        }
      },
      "113": {
        start: {
          line: 355,
          column: 26
        },
        end: {
          line: 355,
          column: 28
        }
      },
      "114": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 40
        }
      },
      "115": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 56
        }
      },
      "116": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 35
        }
      },
      "117": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 33
        }
      },
      "118": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 30
        }
      },
      "119": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 31
        }
      },
      "120": {
        start: {
          line: 363,
          column: 29
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "121": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 29
        }
      },
      "122": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 29
        }
      },
      "123": {
        start: {
          line: 367,
          column: 28
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "124": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 30
        }
      },
      "125": {
        start: {
          line: 370,
          column: 22
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "126": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 44
        }
      },
      "127": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 60
        }
      },
      "128": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 29
        }
      },
      "129": {
        start: {
          line: 375,
          column: 29
        },
        end: {
          line: 388,
          column: 9
        }
      },
      "130": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 387,
          column: 15
        }
      },
      "131": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 386,
          column: 32
        }
      },
      "132": {
        start: {
          line: 378,
          column: 20
        },
        end: {
          line: 385,
          column: 21
        }
      },
      "133": {
        start: {
          line: 379,
          column: 24
        },
        end: {
          line: 381,
          column: 27
        }
      },
      "134": {
        start: {
          line: 380,
          column: 28
        },
        end: {
          line: 380,
          column: 60
        }
      },
      "135": {
        start: {
          line: 384,
          column: 24
        },
        end: {
          line: 384,
          column: 50
        }
      },
      "136": {
        start: {
          line: 389,
          column: 24
        },
        end: {
          line: 389,
          column: 46
        }
      },
      "137": {
        start: {
          line: 389,
          column: 30
        },
        end: {
          line: 389,
          column: 46
        }
      },
      "138": {
        start: {
          line: 391,
          column: 28
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "139": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 27
        }
      },
      "140": {
        start: {
          line: 393,
          column: 25
        },
        end: {
          line: 393,
          column: 55
        }
      },
      "141": {
        start: {
          line: 394,
          column: 28
        },
        end: {
          line: 394,
          column: 77
        }
      },
      "142": {
        start: {
          line: 395,
          column: 28
        },
        end: {
          line: 395,
          column: 77
        }
      },
      "143": {
        start: {
          line: 396,
          column: 22
        },
        end: {
          line: 396,
          column: 41
        }
      },
      "144": {
        start: {
          line: 397,
          column: 22
        },
        end: {
          line: 397,
          column: 40
        }
      },
      "145": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 39
        }
      },
      "146": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 28
        }
      },
      "147": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 29
        }
      },
      "148": {
        start: {
          line: 402,
          column: 27
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "149": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 404,
          column: 23
        }
      },
      "150": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 23
        }
      },
      "151": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 31
        }
      },
      "152": {
        start: {
          line: 406,
          column: 25
        },
        end: {
          line: 406,
          column: 55
        }
      },
      "153": {
        start: {
          line: 407,
          column: 28
        },
        end: {
          line: 407,
          column: 77
        }
      },
      "154": {
        start: {
          line: 408,
          column: 28
        },
        end: {
          line: 408,
          column: 77
        }
      },
      "155": {
        start: {
          line: 409,
          column: 22
        },
        end: {
          line: 409,
          column: 41
        }
      },
      "156": {
        start: {
          line: 410,
          column: 22
        },
        end: {
          line: 410,
          column: 40
        }
      },
      "157": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 39
        }
      },
      "158": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 29
        }
      },
      "159": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 25
        }
      },
      "160": {
        start: {
          line: 415,
          column: 26
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "161": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 26
        }
      },
      "162": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 419,
          column: 13
        }
      },
      "163": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 56
        }
      },
      "164": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 58
        }
      },
      "165": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 57
        }
      },
      "166": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 54
        }
      },
      "167": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 59
        }
      },
      "168": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 57
        }
      },
      "169": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 55
        }
      },
      "170": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 434,
          column: 10
        }
      },
      "171": {
        start: {
          line: 437,
          column: 22
        },
        end: {
          line: 437,
          column: 40
        }
      },
      "172": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 38
        }
      },
      "173": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 86
        }
      },
      "174": {
        start: {
          line: 439,
          column: 41
        },
        end: {
          line: 439,
          column: 75
        }
      },
      "175": {
        start: {
          line: 442,
          column: 0
        },
        end: {
          line: 442,
          column: 58
        }
      },
      "176": {
        start: {
          line: 443,
          column: 0
        },
        end: {
          line: 443,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 69
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 56
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 54
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 88
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 79
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 100
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 81
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 109
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 62
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 275
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 46
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 299
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 56
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 314
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 48
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 331
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        loc: {
          start: {
            line: 351,
            column: 45
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 351
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 363,
            column: 29
          },
          end: {
            line: 363,
            column: 30
          }
        },
        loc: {
          start: {
            line: 363,
            column: 35
          },
          end: {
            line: 366,
            column: 9
          }
        },
        line: 363
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 367,
            column: 28
          },
          end: {
            line: 367,
            column: 29
          }
        },
        loc: {
          start: {
            line: 367,
            column: 34
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 367
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 370,
            column: 22
          },
          end: {
            line: 370,
            column: 23
          }
        },
        loc: {
          start: {
            line: 370,
            column: 28
          },
          end: {
            line: 374,
            column: 9
          }
        },
        line: 370
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 375,
            column: 29
          },
          end: {
            line: 375,
            column: 30
          }
        },
        loc: {
          start: {
            line: 375,
            column: 41
          },
          end: {
            line: 388,
            column: 9
          }
        },
        line: 375
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 376,
            column: 31
          },
          end: {
            line: 376,
            column: 32
          }
        },
        loc: {
          start: {
            line: 376,
            column: 44
          },
          end: {
            line: 387,
            column: 13
          }
        },
        line: 376
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 377,
            column: 30
          },
          end: {
            line: 377,
            column: 31
          }
        },
        loc: {
          start: {
            line: 377,
            column: 40
          },
          end: {
            line: 386,
            column: 17
          }
        },
        line: 377
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 379,
            column: 48
          },
          end: {
            line: 379,
            column: 49
          }
        },
        loc: {
          start: {
            line: 379,
            column: 58
          },
          end: {
            line: 381,
            column: 25
          }
        },
        line: 379
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 389,
            column: 24
          },
          end: {
            line: 389,
            column: 25
          }
        },
        loc: {
          start: {
            line: 389,
            column: 30
          },
          end: {
            line: 389,
            column: 46
          }
        },
        line: 389
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 391,
            column: 28
          },
          end: {
            line: 391,
            column: 29
          }
        },
        loc: {
          start: {
            line: 391,
            column: 35
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 391
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 402,
            column: 27
          },
          end: {
            line: 402,
            column: 28
          }
        },
        loc: {
          start: {
            line: 402,
            column: 34
          },
          end: {
            line: 414,
            column: 9
          }
        },
        line: 402
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 415,
            column: 26
          },
          end: {
            line: 415,
            column: 27
          }
        },
        loc: {
          start: {
            line: 415,
            column: 32
          },
          end: {
            line: 420,
            column: 9
          }
        },
        line: 415
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        loc: {
          start: {
            line: 436,
            column: 27
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 436
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 439,
            column: 33
          },
          end: {
            line: 439,
            column: 34
          }
        },
        loc: {
          start: {
            line: 439,
            column: 41
          },
          end: {
            line: 439,
            column: 75
          }
        },
        line: 439
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 49
          },
          end: {
            line: 13,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 64
          },
          end: {
            line: 13,
            column: 67
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 79,
            column: 74
          },
          end: {
            line: 79,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 84
          },
          end: {
            line: 79,
            column: 86
          }
        }],
        line: 79
      },
      "2": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "3": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "4": {
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 46
          }
        }, {
          start: {
            line: 133,
            column: 50
          },
          end: {
            line: 133,
            column: 70
          }
        }],
        line: 133
      },
      "5": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 147,
            column: 22
          }
        }, {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 174,
            column: 22
          }
        }, {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 190,
            column: 22
          }
        }, {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 227,
            column: 22
          }
        }],
        line: 135
      },
      "6": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 146,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 146,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 153,
            column: 24
          },
          end: {
            line: 158,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 24
          },
          end: {
            line: 158,
            column: 25
          }
        }, {
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 158,
            column: 25
          }
        }],
        line: 153
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 153,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 153,
            column: 45
          }
        }, {
          start: {
            line: 153,
            column: 49
          },
          end: {
            line: 153,
            column: 66
          }
        }],
        line: 153
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 158,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 158,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "11": {
        loc: {
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 50
          }
        }, {
          start: {
            line: 156,
            column: 54
          },
          end: {
            line: 156,
            column: 71
          }
        }],
        line: 156
      },
      "12": {
        loc: {
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 168,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 168,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "13": {
        loc: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 42
          }
        }, {
          start: {
            line: 176,
            column: 46
          },
          end: {
            line: 176,
            column: 79
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "16": {
        loc: {
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 203,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 203,
            column: 25
          }
        }, {
          start: {
            line: 201,
            column: 29
          },
          end: {
            line: 203,
            column: 25
          }
        }],
        line: 198
      },
      "17": {
        loc: {
          start: {
            line: 198,
            column: 28
          },
          end: {
            line: 198,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 28
          },
          end: {
            line: 198,
            column: 45
          }
        }, {
          start: {
            line: 198,
            column: 49
          },
          end: {
            line: 198,
            column: 66
          }
        }],
        line: 198
      },
      "18": {
        loc: {
          start: {
            line: 201,
            column: 29
          },
          end: {
            line: 203,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 29
          },
          end: {
            line: 203,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "19": {
        loc: {
          start: {
            line: 201,
            column: 33
          },
          end: {
            line: 201,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 33
          },
          end: {
            line: 201,
            column: 50
          }
        }, {
          start: {
            line: 201,
            column: 54
          },
          end: {
            line: 201,
            column: 71
          }
        }],
        line: 201
      },
      "20": {
        loc: {
          start: {
            line: 204,
            column: 24
          },
          end: {
            line: 211,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 24
          },
          end: {
            line: 211,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "21": {
        loc: {
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "22": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "23": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "24": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 251,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 251,
            column: 33
          }
        }, {
          start: {
            line: 251,
            column: 37
          },
          end: {
            line: 251,
            column: 51
          }
        }],
        line: 251
      },
      "25": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "26": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 262,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 262,
            column: 35
          }
        }, {
          start: {
            line: 262,
            column: 39
          },
          end: {
            line: 262,
            column: 55
          }
        }],
        line: 262
      },
      "27": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "28": {
        loc: {
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "29": {
        loc: {
          start: {
            line: 351,
            column: 31
          },
          end: {
            line: 351,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 351,
            column: 41
          },
          end: {
            line: 351,
            column: 43
          }
        }],
        line: 351
      },
      "30": {
        loc: {
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 353,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 353,
            column: 27
          },
          end: {
            line: 353,
            column: 36
          }
        }],
        line: 353
      },
      "31": {
        loc: {
          start: {
            line: 353,
            column: 38
          },
          end: {
            line: 353,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 353,
            column: 56
          },
          end: {
            line: 353,
            column: 65
          }
        }],
        line: 353
      },
      "32": {
        loc: {
          start: {
            line: 353,
            column: 67
          },
          end: {
            line: 353,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 353,
            column: 78
          },
          end: {
            line: 353,
            column: 79
          }
        }],
        line: 353
      },
      "33": {
        loc: {
          start: {
            line: 378,
            column: 20
          },
          end: {
            line: 385,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 20
          },
          end: {
            line: 385,
            column: 21
          }
        }, {
          start: {
            line: 383,
            column: 25
          },
          end: {
            line: 385,
            column: 21
          }
        }],
        line: 378
      },
      "34": {
        loc: {
          start: {
            line: 394,
            column: 28
          },
          end: {
            line: 394,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 394,
            column: 45
          },
          end: {
            line: 394,
            column: 65
          }
        }, {
          start: {
            line: 394,
            column: 68
          },
          end: {
            line: 394,
            column: 77
          }
        }],
        line: 394
      },
      "35": {
        loc: {
          start: {
            line: 395,
            column: 28
          },
          end: {
            line: 395,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 395,
            column: 45
          },
          end: {
            line: 395,
            column: 65
          }
        }, {
          start: {
            line: 395,
            column: 68
          },
          end: {
            line: 395,
            column: 77
          }
        }],
        line: 395
      },
      "36": {
        loc: {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 404,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 404,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "37": {
        loc: {
          start: {
            line: 407,
            column: 28
          },
          end: {
            line: 407,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 407,
            column: 45
          },
          end: {
            line: 407,
            column: 65
          }
        }, {
          start: {
            line: 407,
            column: 68
          },
          end: {
            line: 407,
            column: 77
          }
        }],
        line: 407
      },
      "38": {
        loc: {
          start: {
            line: 408,
            column: 28
          },
          end: {
            line: 408,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 408,
            column: 45
          },
          end: {
            line: 408,
            column: 65
          }
        }, {
          start: {
            line: 408,
            column: 68
          },
          end: {
            line: 408,
            column: 77
          }
        }],
        line: 408
      },
      "39": {
        loc: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0],
      "31": [0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DigitalSignatureService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\DigitalSignatureService.ts"],
      sourcesContent: ["import { PDFDocument, PDFPage, rgb, StandardFonts } from 'pdf-lib';\n\nexport interface SignatureField {\n  name: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  pageIndex: number;\n  required?: boolean;\n  locked?: boolean;\n  reason?: string;\n  location?: string;\n  contactInfo?: string;\n}\n\nexport interface DigitalCertificate {\n  commonName: string;\n  organization?: string;\n  organizationalUnit?: string;\n  country?: string;\n  state?: string;\n  locality?: string;\n  email?: string;\n  validFrom: Date;\n  validTo: Date;\n  serialNumber: string;\n  issuer: string;\n  publicKey: CryptoKey;\n  privateKey: CryptoKey;\n  certificateBytes: Uint8Array;\n}\n\nexport interface SignatureInfo {\n  signerName: string;\n  signatureDate: Date;\n  reason?: string;\n  location?: string;\n  contactInfo?: string;\n  certificate?: DigitalCertificate;\n  isValid: boolean;\n  signatureBytes?: Uint8Array;\n  imageBytes?: Uint8Array;\n}\n\nexport interface SignatureAppearance {\n  type: 'text' | 'image' | 'draw' | 'mixed';\n  text?: string;\n  imageBytes?: Uint8Array;\n  drawingPath?: Array<{ x: number; y: number; pressure?: number }>;\n  showDate?: boolean;\n  showReason?: boolean;\n  showLocation?: boolean;\n  backgroundColor?: { r: number; g: number; b: number };\n  borderColor?: { r: number; g: number; b: number };\n  textColor?: { r: number; g: number; b: number };\n}\n\nexport interface TimestampInfo {\n  timestampServer: string;\n  timestampToken: Uint8Array;\n  timestampDate: Date;\n  isValid: boolean;\n}\n\nexport class DigitalSignatureService {\n  private crypto: SubtleCrypto;\n\n  constructor() {\n    this.crypto = window.crypto.subtle;\n  }\n\n  /**\n   * Generate a self-signed certificate for testing/demo purposes\n   */\n  async generateSelfSignedCertificate(\n    subject: {\n      commonName: string;\n      organization?: string;\n      country?: string;\n      email?: string;\n    },\n    validityDays: number = 365\n  ): Promise<DigitalCertificate> {\n    // Generate RSA key pair\n    const keyPair = await this.crypto.generateKey(\n      {\n        name: 'RSA-PSS',\n        modulusLength: 2048,\n        publicExponent: new Uint8Array([1, 0, 1]),\n        hash: 'SHA-256'\n      },\n      true,\n      ['sign', 'verify']\n    );\n\n    const validFrom = new Date();\n    const validTo = new Date();\n    validTo.setDate(validFrom.getDate() + validityDays);\n\n    // In a real implementation, this would generate a proper X.509 certificate\n    // For now, we'll create a simplified certificate structure\n    const certificate: DigitalCertificate = {\n      commonName: subject.commonName,\n      organization: subject.organization,\n      country: subject.country,\n      email: subject.email,\n      validFrom,\n      validTo,\n      serialNumber: this.generateSerialNumber(),\n      issuer: subject.commonName, // Self-signed\n      publicKey: keyPair.publicKey,\n      privateKey: keyPair.privateKey,\n      certificateBytes: new Uint8Array() // Would contain DER-encoded certificate\n    };\n\n    return certificate;\n  }\n\n  /**\n   * Import certificate from file\n   */\n  async importCertificate(certificateBytes: Uint8Array, password?: string): Promise<DigitalCertificate> {\n    // This would parse a real certificate file (PFX, P12, etc.)\n    // For now, return a mock certificate\n    throw new Error('Certificate import not yet implemented - use generateSelfSignedCertificate for testing');\n  }\n\n  /**\n   * Add signature field to PDF\n   */\n  async addSignatureField(\n    pdfBytes: Uint8Array,\n    signatureField: SignatureField\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const form = pdfDoc.getForm();\n    const page = pdfDoc.getPage(signatureField.pageIndex);\n\n    // Create signature field\n    const sigField = form.createTextField(signatureField.name);\n    \n    sigField.addToPage(page, {\n      x: signatureField.x,\n      y: signatureField.y,\n      width: signatureField.width,\n      height: signatureField.height,\n      borderColor: rgb(0, 0, 0),\n      borderWidth: 1,\n      backgroundColor: rgb(0.95, 0.95, 0.95)\n    });\n\n    // Add signature placeholder text\n    page.drawText('Digital Signature', {\n      x: signatureField.x + 5,\n      y: signatureField.y + signatureField.height / 2,\n      size: 10,\n      color: rgb(0.5, 0.5, 0.5)\n    });\n\n    return await pdfDoc.save();\n  }\n\n  /**\n   * Sign PDF document\n   */\n  async signDocument(\n    pdfBytes: Uint8Array,\n    signatureField: SignatureField,\n    certificate: DigitalCertificate,\n    appearance: SignatureAppearance,\n    options: {\n      reason?: string;\n      location?: string;\n      contactInfo?: string;\n      timestampServer?: string;\n    } = {}\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const page = pdfDoc.getPage(signatureField.pageIndex);\n\n    // Create signature appearance\n    await this.drawSignatureAppearance(page, signatureField, appearance, certificate, options);\n\n    // In a real implementation, this would:\n    // 1. Create a signature dictionary in the PDF\n    // 2. Generate a hash of the document content\n    // 3. Sign the hash with the private key\n    // 4. Embed the signature in the PDF structure\n    // 5. Optionally add timestamp from TSA server\n\n    // For now, we'll simulate by drawing the signature appearance\n    const signatureData = await this.createSignatureData(pdfBytes, certificate, options);\n    \n    // Add signature metadata\n    const now = new Date();\n    pdfDoc.setModificationDate(now);\n    \n    return await pdfDoc.save();\n  }\n\n  /**\n   * Verify digital signatures in PDF\n   */\n  async verifySignatures(pdfBytes: Uint8Array): Promise<SignatureInfo[]> {\n    // This would parse the PDF signature dictionaries and verify them\n    // For now, return empty array\n    console.warn('Signature verification requires advanced PDF parsing not yet implemented');\n    return [];\n  }\n\n  /**\n   * Create signature appearance on page\n   */\n  private async drawSignatureAppearance(\n    page: PDFPage,\n    field: SignatureField,\n    appearance: SignatureAppearance,\n    certificate: DigitalCertificate,\n    options: any\n  ): Promise<void> {\n    const { x, y, width, height } = field;\n\n    // Clear the signature field area\n    if (appearance.backgroundColor) {\n      page.drawRectangle({\n        x,\n        y,\n        width,\n        height,\n        color: rgb(\n          appearance.backgroundColor.r,\n          appearance.backgroundColor.g,\n          appearance.backgroundColor.b\n        )\n      });\n    }\n\n    // Draw border\n    if (appearance.borderColor) {\n      page.drawRectangle({\n        x,\n        y,\n        width,\n        height,\n        borderColor: rgb(\n          appearance.borderColor.r,\n          appearance.borderColor.g,\n          appearance.borderColor.b\n        ),\n        borderWidth: 1\n      });\n    }\n\n    const font = await page.doc.embedFont(StandardFonts.Helvetica);\n    const textColor = appearance.textColor || { r: 0, g: 0, b: 0 };\n    let currentY = y + height - 15;\n\n    switch (appearance.type) {\n      case 'text':\n        if (appearance.text) {\n          page.drawText(appearance.text, {\n            x: x + 5,\n            y: currentY,\n            size: 12,\n            font,\n            color: rgb(textColor.r, textColor.g, textColor.b)\n          });\n          currentY -= 15;\n        }\n        break;\n\n      case 'image':\n        if (appearance.imageBytes) {\n          try {\n            let image;\n            const uint8 = new Uint8Array(appearance.imageBytes);\n            \n            if (uint8[0] === 0xFF && uint8[1] === 0xD8) {\n              image = await page.doc.embedJpg(appearance.imageBytes);\n            } else if (uint8[0] === 0x89 && uint8[1] === 0x50) {\n              image = await page.doc.embedPng(appearance.imageBytes);\n            }\n\n            if (image) {\n              const imageHeight = Math.min(height - 20, 40);\n              page.drawImage(image, {\n                x: x + 5,\n                y: currentY - imageHeight,\n                width: Math.min(width - 10, 100),\n                height: imageHeight\n              });\n              currentY -= imageHeight + 5;\n            }\n          } catch (error) {\n            console.warn('Failed to embed signature image:', error);\n          }\n        }\n        break;\n\n      case 'draw':\n        if (appearance.drawingPath && appearance.drawingPath.length > 0) {\n          // Convert drawing path to PDF path operations\n          // This is a simplified implementation\n          const path = appearance.drawingPath;\n          for (let i = 1; i < path.length; i++) {\n            page.drawLine({\n              start: { x: x + path[i-1].x, y: y + path[i-1].y },\n              end: { x: x + path[i].x, y: y + path[i].y },\n              thickness: 2,\n              color: rgb(textColor.r, textColor.g, textColor.b)\n            });\n          }\n          currentY -= 30;\n        }\n        break;\n\n      case 'mixed':\n        // Combine multiple appearance types\n        if (appearance.imageBytes) {\n          // Draw image first (smaller)\n          try {\n            let image;\n            const uint8 = new Uint8Array(appearance.imageBytes);\n            \n            if (uint8[0] === 0xFF && uint8[1] === 0xD8) {\n              image = await page.doc.embedJpg(appearance.imageBytes);\n            } else if (uint8[0] === 0x89 && uint8[1] === 0x50) {\n              image = await page.doc.embedPng(appearance.imageBytes);\n            }\n\n            if (image) {\n              page.drawImage(image, {\n                x: x + 5,\n                y: currentY - 25,\n                width: 60,\n                height: 25\n              });\n            }\n          } catch (error) {\n            console.warn('Failed to embed signature image:', error);\n          }\n        }\n        \n        if (appearance.text) {\n          page.drawText(appearance.text, {\n            x: x + 70,\n            y: currentY - 10,\n            size: 10,\n            font,\n            color: rgb(textColor.r, textColor.g, textColor.b)\n          });\n        }\n        currentY -= 30;\n        break;\n    }\n\n    // Add certificate information\n    page.drawText(`Signed by: ${certificate.commonName}`, {\n      x: x + 5,\n      y: currentY,\n      size: 8,\n      font,\n      color: rgb(textColor.r, textColor.g, textColor.b)\n    });\n    currentY -= 12;\n\n    // Add date if requested\n    if (appearance.showDate) {\n      const dateText = `Date: ${new Date().toLocaleString()}`;\n      page.drawText(dateText, {\n        x: x + 5,\n        y: currentY,\n        size: 8,\n        font,\n        color: rgb(textColor.r, textColor.g, textColor.b)\n      });\n      currentY -= 12;\n    }\n\n    // Add reason if requested and provided\n    if (appearance.showReason && options.reason) {\n      page.drawText(`Reason: ${options.reason}`, {\n        x: x + 5,\n        y: currentY,\n        size: 8,\n        font,\n        color: rgb(textColor.r, textColor.g, textColor.b)\n      });\n      currentY -= 12;\n    }\n\n    // Add location if requested and provided\n    if (appearance.showLocation && options.location) {\n      page.drawText(`Location: ${options.location}`, {\n        x: x + 5,\n        y: currentY,\n        size: 8,\n        font,\n        color: rgb(textColor.r, textColor.g, textColor.b)\n      });\n    }\n  }\n\n  /**\n   * Create signature data (simplified implementation)\n   */\n  private async createSignatureData(\n    pdfBytes: Uint8Array,\n    certificate: DigitalCertificate,\n    options: any\n  ): Promise<Uint8Array> {\n    // In a real implementation, this would:\n    // 1. Calculate document hash\n    // 2. Sign hash with private key\n    // 3. Create PKCS#7 signature structure\n    // 4. Optionally add timestamp\n\n    // Create a simple hash of the document for demo purposes\n    const hashBuffer = await this.crypto.digest('SHA-256', pdfBytes);\n    \n    // Sign the hash (simplified - would normally use PKCS#7 structure)\n    try {\n      const signature = await this.crypto.sign(\n        {\n          name: 'RSA-PSS',\n          saltLength: 32\n        },\n        certificate.privateKey,\n        hashBuffer\n      );\n      \n      return new Uint8Array(signature);\n    } catch (error) {\n      console.warn('Signature creation failed:', error);\n      return new Uint8Array();\n    }\n  }\n\n  /**\n   * Get timestamp from TSA server\n   */\n  async getTimestamp(\n    data: Uint8Array,\n    timestampServer: string\n  ): Promise<TimestampInfo | null> {\n    try {\n      // This would make a request to a Time Stamp Authority server\n      // For now, return null\n      console.warn('Timestamp service integration not yet implemented');\n      return null;\n    } catch (error) {\n      console.error('Failed to get timestamp:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove signature from PDF\n   */\n  async removeSignature(\n    pdfBytes: Uint8Array,\n    signatureFieldName: string\n  ): Promise<Uint8Array> {\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n    const form = pdfDoc.getForm();\n\n    try {\n      const field = form.getField(signatureFieldName);\n      // Note: pdf-lib doesn't have direct signature removal\n      // This would require low-level PDF manipulation\n      console.warn('Signature removal requires advanced PDF manipulation');\n    } catch (error) {\n      console.warn(`Signature field ${signatureFieldName} not found`);\n    }\n\n    return await pdfDoc.save();\n  }\n\n  /**\n   * Validate certificate chain\n   */\n  async validateCertificateChain(certificate: DigitalCertificate): Promise<{\n    isValid: boolean;\n    errors: string[];\n    trustChain: DigitalCertificate[];\n  }> {\n    // This would validate the certificate against trusted root CAs\n    // For now, return basic validation\n    const errors: string[] = [];\n    const now = new Date();\n\n    if (certificate.validFrom > now) {\n      errors.push('Certificate is not yet valid');\n    }\n\n    if (certificate.validTo < now) {\n      errors.push('Certificate has expired');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      trustChain: [certificate] // Simplified\n    };\n  }\n\n  /**\n   * Create drawing pad for signature capture\n   */\n  createSignaturePad(\n    canvas: HTMLCanvasElement,\n    options: {\n      penColor?: string;\n      backgroundColor?: string;\n      penWidth?: number;\n      onComplete?: (imageData: Uint8Array) => void;\n    } = {}\n  ): {\n    startDrawing: () => void;\n    stopDrawing: () => void;\n    clear: () => void;\n    getImageData: () => Promise<Uint8Array>;\n    getPath: () => Array<{ x: number; y: number; pressure?: number }>;\n  } {\n    const ctx = canvas.getContext('2d')!;\n    const {\n      penColor = '#000000',\n      backgroundColor = '#ffffff',\n      penWidth = 2\n    } = options;\n\n    let isDrawing = false;\n    let currentPath: Array<{ x: number; y: number; pressure?: number }> = [];\n\n    // Set up canvas\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = penColor;\n    ctx.lineWidth = penWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n\n    const startDrawing = () => {\n      isDrawing = true;\n      currentPath = [];\n    };\n\n    const stopDrawing = () => {\n      isDrawing = false;\n    };\n\n    const clear = () => {\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      currentPath = [];\n    };\n\n    const getImageData = async (): Promise<Uint8Array> => {\n      return new Promise((resolve) => {\n        canvas.toBlob((blob) => {\n          if (blob) {\n            blob.arrayBuffer().then(buffer => {\n              resolve(new Uint8Array(buffer));\n            });\n          } else {\n            resolve(new Uint8Array());\n          }\n        }, 'image/png');\n      });\n    };\n\n    const getPath = () => [...currentPath];\n\n    // Mouse/touch event handlers\n    const handleStart = (e: MouseEvent | TouchEvent) => {\n      startDrawing();\n      const rect = canvas.getBoundingClientRect();\n      const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX;\n      const clientY = 'touches' in e ? e.touches[0].clientY : e.clientY;\n      \n      const x = clientX - rect.left;\n      const y = clientY - rect.top;\n      \n      currentPath.push({ x, y });\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    };\n\n    const handleMove = (e: MouseEvent | TouchEvent) => {\n      if (!isDrawing) return;\n      \n      e.preventDefault();\n      const rect = canvas.getBoundingClientRect();\n      const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX;\n      const clientY = 'touches' in e ? e.touches[0].clientY : e.clientY;\n      \n      const x = clientX - rect.left;\n      const y = clientY - rect.top;\n      \n      currentPath.push({ x, y });\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    };\n\n    const handleEnd = () => {\n      stopDrawing();\n      if (options.onComplete) {\n        getImageData().then(options.onComplete);\n      }\n    };\n\n    // Add event listeners\n    canvas.addEventListener('mousedown', handleStart);\n    canvas.addEventListener('mousemove', handleMove);\n    canvas.addEventListener('mouseup', handleEnd);\n    canvas.addEventListener('touchstart', handleStart);\n    canvas.addEventListener('touchmove', handleMove);\n    canvas.addEventListener('touchend', handleEnd);\n\n    return {\n      startDrawing,\n      stopDrawing,\n      clear,\n      getImageData,\n      getPath\n    };\n  }\n\n  private generateSerialNumber(): string {\n    const array = new Uint8Array(16);\n    crypto.getRandomValues(array);\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\n  }\n}\n\nexport default DigitalSignatureService;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f64c4b748bd3a2e4520655c39a2adf300217be91"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_iee09csne = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_iee09csne();
cov_iee09csne().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_iee09csne().s[1]++;
exports.DigitalSignatureService = void 0;
const pdf_lib_1 =
/* istanbul ignore next */
(cov_iee09csne().s[2]++, require("pdf-lib"));
class DigitalSignatureService {
  crypto;
  constructor() {
    /* istanbul ignore next */
    cov_iee09csne().f[0]++;
    cov_iee09csne().s[3]++;
    this.crypto = window.crypto.subtle;
  }
  /**
   * Generate a self-signed certificate for testing/demo purposes
   */
  async generateSelfSignedCertificate(subject, validityDays =
  /* istanbul ignore next */
  (cov_iee09csne().b[0][0]++, 365)) {
    /* istanbul ignore next */
    cov_iee09csne().f[1]++;
    // Generate RSA key pair
    const keyPair =
    /* istanbul ignore next */
    (cov_iee09csne().s[4]++, await this.crypto.generateKey({
      name: 'RSA-PSS',
      modulusLength: 2048,
      publicExponent: new Uint8Array([1, 0, 1]),
      hash: 'SHA-256'
    }, true, ['sign', 'verify']));
    const validFrom =
    /* istanbul ignore next */
    (cov_iee09csne().s[5]++, new Date());
    const validTo =
    /* istanbul ignore next */
    (cov_iee09csne().s[6]++, new Date());
    /* istanbul ignore next */
    cov_iee09csne().s[7]++;
    validTo.setDate(validFrom.getDate() + validityDays);
    // In a real implementation, this would generate a proper X.509 certificate
    // For now, we'll create a simplified certificate structure
    const certificate =
    /* istanbul ignore next */
    (cov_iee09csne().s[8]++, {
      commonName: subject.commonName,
      organization: subject.organization,
      country: subject.country,
      email: subject.email,
      validFrom,
      validTo,
      serialNumber: this.generateSerialNumber(),
      issuer: subject.commonName,
      // Self-signed
      publicKey: keyPair.publicKey,
      privateKey: keyPair.privateKey,
      certificateBytes: new Uint8Array() // Would contain DER-encoded certificate
    });
    /* istanbul ignore next */
    cov_iee09csne().s[9]++;
    return certificate;
  }
  /**
   * Import certificate from file
   */
  async importCertificate(certificateBytes, password) {
    /* istanbul ignore next */
    cov_iee09csne().f[2]++;
    cov_iee09csne().s[10]++;
    // This would parse a real certificate file (PFX, P12, etc.)
    // For now, return a mock certificate
    throw new Error('Certificate import not yet implemented - use generateSelfSignedCertificate for testing');
  }
  /**
   * Add signature field to PDF
   */
  async addSignatureField(pdfBytes, signatureField) {
    /* istanbul ignore next */
    cov_iee09csne().f[3]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_iee09csne().s[11]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const form =
    /* istanbul ignore next */
    (cov_iee09csne().s[12]++, pdfDoc.getForm());
    const page =
    /* istanbul ignore next */
    (cov_iee09csne().s[13]++, pdfDoc.getPage(signatureField.pageIndex));
    // Create signature field
    const sigField =
    /* istanbul ignore next */
    (cov_iee09csne().s[14]++, form.createTextField(signatureField.name));
    /* istanbul ignore next */
    cov_iee09csne().s[15]++;
    sigField.addToPage(page, {
      x: signatureField.x,
      y: signatureField.y,
      width: signatureField.width,
      height: signatureField.height,
      borderColor: (0, pdf_lib_1.rgb)(0, 0, 0),
      borderWidth: 1,
      backgroundColor: (0, pdf_lib_1.rgb)(0.95, 0.95, 0.95)
    });
    // Add signature placeholder text
    /* istanbul ignore next */
    cov_iee09csne().s[16]++;
    page.drawText('Digital Signature', {
      x: signatureField.x + 5,
      y: signatureField.y + signatureField.height / 2,
      size: 10,
      color: (0, pdf_lib_1.rgb)(0.5, 0.5, 0.5)
    });
    /* istanbul ignore next */
    cov_iee09csne().s[17]++;
    return await pdfDoc.save();
  }
  /**
   * Sign PDF document
   */
  async signDocument(pdfBytes, signatureField, certificate, appearance, options =
  /* istanbul ignore next */
  (cov_iee09csne().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_iee09csne().f[4]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_iee09csne().s[18]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const page =
    /* istanbul ignore next */
    (cov_iee09csne().s[19]++, pdfDoc.getPage(signatureField.pageIndex));
    // Create signature appearance
    /* istanbul ignore next */
    cov_iee09csne().s[20]++;
    await this.drawSignatureAppearance(page, signatureField, appearance, certificate, options);
    // In a real implementation, this would:
    // 1. Create a signature dictionary in the PDF
    // 2. Generate a hash of the document content
    // 3. Sign the hash with the private key
    // 4. Embed the signature in the PDF structure
    // 5. Optionally add timestamp from TSA server
    // For now, we'll simulate by drawing the signature appearance
    const signatureData =
    /* istanbul ignore next */
    (cov_iee09csne().s[21]++, await this.createSignatureData(pdfBytes, certificate, options));
    // Add signature metadata
    const now =
    /* istanbul ignore next */
    (cov_iee09csne().s[22]++, new Date());
    /* istanbul ignore next */
    cov_iee09csne().s[23]++;
    pdfDoc.setModificationDate(now);
    /* istanbul ignore next */
    cov_iee09csne().s[24]++;
    return await pdfDoc.save();
  }
  /**
   * Verify digital signatures in PDF
   */
  async verifySignatures(pdfBytes) {
    /* istanbul ignore next */
    cov_iee09csne().f[5]++;
    cov_iee09csne().s[25]++;
    // This would parse the PDF signature dictionaries and verify them
    // For now, return empty array
    console.warn('Signature verification requires advanced PDF parsing not yet implemented');
    /* istanbul ignore next */
    cov_iee09csne().s[26]++;
    return [];
  }
  /**
   * Create signature appearance on page
   */
  async drawSignatureAppearance(page, field, appearance, certificate, options) {
    /* istanbul ignore next */
    cov_iee09csne().f[6]++;
    const {
      x,
      y,
      width,
      height
    } =
    /* istanbul ignore next */
    (cov_iee09csne().s[27]++, field);
    // Clear the signature field area
    /* istanbul ignore next */
    cov_iee09csne().s[28]++;
    if (appearance.backgroundColor) {
      /* istanbul ignore next */
      cov_iee09csne().b[2][0]++;
      cov_iee09csne().s[29]++;
      page.drawRectangle({
        x,
        y,
        width,
        height,
        color: (0, pdf_lib_1.rgb)(appearance.backgroundColor.r, appearance.backgroundColor.g, appearance.backgroundColor.b)
      });
    } else
    /* istanbul ignore next */
    {
      cov_iee09csne().b[2][1]++;
    }
    // Draw border
    cov_iee09csne().s[30]++;
    if (appearance.borderColor) {
      /* istanbul ignore next */
      cov_iee09csne().b[3][0]++;
      cov_iee09csne().s[31]++;
      page.drawRectangle({
        x,
        y,
        width,
        height,
        borderColor: (0, pdf_lib_1.rgb)(appearance.borderColor.r, appearance.borderColor.g, appearance.borderColor.b),
        borderWidth: 1
      });
    } else
    /* istanbul ignore next */
    {
      cov_iee09csne().b[3][1]++;
    }
    const font =
    /* istanbul ignore next */
    (cov_iee09csne().s[32]++, await page.doc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    const textColor =
    /* istanbul ignore next */
    (cov_iee09csne().s[33]++,
    /* istanbul ignore next */
    (cov_iee09csne().b[4][0]++, appearance.textColor) ||
    /* istanbul ignore next */
    (cov_iee09csne().b[4][1]++, {
      r: 0,
      g: 0,
      b: 0
    }));
    let currentY =
    /* istanbul ignore next */
    (cov_iee09csne().s[34]++, y + height - 15);
    /* istanbul ignore next */
    cov_iee09csne().s[35]++;
    switch (appearance.type) {
      case 'text':
        /* istanbul ignore next */
        cov_iee09csne().b[5][0]++;
        cov_iee09csne().s[36]++;
        if (appearance.text) {
          /* istanbul ignore next */
          cov_iee09csne().b[6][0]++;
          cov_iee09csne().s[37]++;
          page.drawText(appearance.text, {
            x: x + 5,
            y: currentY,
            size: 12,
            font,
            color: (0, pdf_lib_1.rgb)(textColor.r, textColor.g, textColor.b)
          });
          /* istanbul ignore next */
          cov_iee09csne().s[38]++;
          currentY -= 15;
        } else
        /* istanbul ignore next */
        {
          cov_iee09csne().b[6][1]++;
        }
        cov_iee09csne().s[39]++;
        break;
      case 'image':
        /* istanbul ignore next */
        cov_iee09csne().b[5][1]++;
        cov_iee09csne().s[40]++;
        if (appearance.imageBytes) {
          /* istanbul ignore next */
          cov_iee09csne().b[7][0]++;
          cov_iee09csne().s[41]++;
          try {
            let image;
            const uint8 =
            /* istanbul ignore next */
            (cov_iee09csne().s[42]++, new Uint8Array(appearance.imageBytes));
            /* istanbul ignore next */
            cov_iee09csne().s[43]++;
            if (
            /* istanbul ignore next */
            (cov_iee09csne().b[9][0]++, uint8[0] === 0xFF) &&
            /* istanbul ignore next */
            (cov_iee09csne().b[9][1]++, uint8[1] === 0xD8)) {
              /* istanbul ignore next */
              cov_iee09csne().b[8][0]++;
              cov_iee09csne().s[44]++;
              image = await page.doc.embedJpg(appearance.imageBytes);
            } else {
              /* istanbul ignore next */
              cov_iee09csne().b[8][1]++;
              cov_iee09csne().s[45]++;
              if (
              /* istanbul ignore next */
              (cov_iee09csne().b[11][0]++, uint8[0] === 0x89) &&
              /* istanbul ignore next */
              (cov_iee09csne().b[11][1]++, uint8[1] === 0x50)) {
                /* istanbul ignore next */
                cov_iee09csne().b[10][0]++;
                cov_iee09csne().s[46]++;
                image = await page.doc.embedPng(appearance.imageBytes);
              } else
              /* istanbul ignore next */
              {
                cov_iee09csne().b[10][1]++;
              }
            }
            /* istanbul ignore next */
            cov_iee09csne().s[47]++;
            if (image) {
              /* istanbul ignore next */
              cov_iee09csne().b[12][0]++;
              const imageHeight =
              /* istanbul ignore next */
              (cov_iee09csne().s[48]++, Math.min(height - 20, 40));
              /* istanbul ignore next */
              cov_iee09csne().s[49]++;
              page.drawImage(image, {
                x: x + 5,
                y: currentY - imageHeight,
                width: Math.min(width - 10, 100),
                height: imageHeight
              });
              /* istanbul ignore next */
              cov_iee09csne().s[50]++;
              currentY -= imageHeight + 5;
            } else
            /* istanbul ignore next */
            {
              cov_iee09csne().b[12][1]++;
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_iee09csne().s[51]++;
            console.warn('Failed to embed signature image:', error);
          }
        } else
        /* istanbul ignore next */
        {
          cov_iee09csne().b[7][1]++;
        }
        cov_iee09csne().s[52]++;
        break;
      case 'draw':
        /* istanbul ignore next */
        cov_iee09csne().b[5][2]++;
        cov_iee09csne().s[53]++;
        if (
        /* istanbul ignore next */
        (cov_iee09csne().b[14][0]++, appearance.drawingPath) &&
        /* istanbul ignore next */
        (cov_iee09csne().b[14][1]++, appearance.drawingPath.length > 0)) {
          /* istanbul ignore next */
          cov_iee09csne().b[13][0]++;
          // Convert drawing path to PDF path operations
          // This is a simplified implementation
          const path =
          /* istanbul ignore next */
          (cov_iee09csne().s[54]++, appearance.drawingPath);
          /* istanbul ignore next */
          cov_iee09csne().s[55]++;
          for (let i =
          /* istanbul ignore next */
          (cov_iee09csne().s[56]++, 1); i < path.length; i++) {
            /* istanbul ignore next */
            cov_iee09csne().s[57]++;
            page.drawLine({
              start: {
                x: x + path[i - 1].x,
                y: y + path[i - 1].y
              },
              end: {
                x: x + path[i].x,
                y: y + path[i].y
              },
              thickness: 2,
              color: (0, pdf_lib_1.rgb)(textColor.r, textColor.g, textColor.b)
            });
          }
          /* istanbul ignore next */
          cov_iee09csne().s[58]++;
          currentY -= 30;
        } else
        /* istanbul ignore next */
        {
          cov_iee09csne().b[13][1]++;
        }
        cov_iee09csne().s[59]++;
        break;
      case 'mixed':
        /* istanbul ignore next */
        cov_iee09csne().b[5][3]++;
        cov_iee09csne().s[60]++;
        // Combine multiple appearance types
        if (appearance.imageBytes) {
          /* istanbul ignore next */
          cov_iee09csne().b[15][0]++;
          cov_iee09csne().s[61]++;
          // Draw image first (smaller)
          try {
            let image;
            const uint8 =
            /* istanbul ignore next */
            (cov_iee09csne().s[62]++, new Uint8Array(appearance.imageBytes));
            /* istanbul ignore next */
            cov_iee09csne().s[63]++;
            if (
            /* istanbul ignore next */
            (cov_iee09csne().b[17][0]++, uint8[0] === 0xFF) &&
            /* istanbul ignore next */
            (cov_iee09csne().b[17][1]++, uint8[1] === 0xD8)) {
              /* istanbul ignore next */
              cov_iee09csne().b[16][0]++;
              cov_iee09csne().s[64]++;
              image = await page.doc.embedJpg(appearance.imageBytes);
            } else {
              /* istanbul ignore next */
              cov_iee09csne().b[16][1]++;
              cov_iee09csne().s[65]++;
              if (
              /* istanbul ignore next */
              (cov_iee09csne().b[19][0]++, uint8[0] === 0x89) &&
              /* istanbul ignore next */
              (cov_iee09csne().b[19][1]++, uint8[1] === 0x50)) {
                /* istanbul ignore next */
                cov_iee09csne().b[18][0]++;
                cov_iee09csne().s[66]++;
                image = await page.doc.embedPng(appearance.imageBytes);
              } else
              /* istanbul ignore next */
              {
                cov_iee09csne().b[18][1]++;
              }
            }
            /* istanbul ignore next */
            cov_iee09csne().s[67]++;
            if (image) {
              /* istanbul ignore next */
              cov_iee09csne().b[20][0]++;
              cov_iee09csne().s[68]++;
              page.drawImage(image, {
                x: x + 5,
                y: currentY - 25,
                width: 60,
                height: 25
              });
            } else
            /* istanbul ignore next */
            {
              cov_iee09csne().b[20][1]++;
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_iee09csne().s[69]++;
            console.warn('Failed to embed signature image:', error);
          }
        } else
        /* istanbul ignore next */
        {
          cov_iee09csne().b[15][1]++;
        }
        cov_iee09csne().s[70]++;
        if (appearance.text) {
          /* istanbul ignore next */
          cov_iee09csne().b[21][0]++;
          cov_iee09csne().s[71]++;
          page.drawText(appearance.text, {
            x: x + 70,
            y: currentY - 10,
            size: 10,
            font,
            color: (0, pdf_lib_1.rgb)(textColor.r, textColor.g, textColor.b)
          });
        } else
        /* istanbul ignore next */
        {
          cov_iee09csne().b[21][1]++;
        }
        cov_iee09csne().s[72]++;
        currentY -= 30;
        /* istanbul ignore next */
        cov_iee09csne().s[73]++;
        break;
    }
    // Add certificate information
    /* istanbul ignore next */
    cov_iee09csne().s[74]++;
    page.drawText(`Signed by: ${certificate.commonName}`, {
      x: x + 5,
      y: currentY,
      size: 8,
      font,
      color: (0, pdf_lib_1.rgb)(textColor.r, textColor.g, textColor.b)
    });
    /* istanbul ignore next */
    cov_iee09csne().s[75]++;
    currentY -= 12;
    // Add date if requested
    /* istanbul ignore next */
    cov_iee09csne().s[76]++;
    if (appearance.showDate) {
      /* istanbul ignore next */
      cov_iee09csne().b[22][0]++;
      const dateText =
      /* istanbul ignore next */
      (cov_iee09csne().s[77]++, `Date: ${new Date().toLocaleString()}`);
      /* istanbul ignore next */
      cov_iee09csne().s[78]++;
      page.drawText(dateText, {
        x: x + 5,
        y: currentY,
        size: 8,
        font,
        color: (0, pdf_lib_1.rgb)(textColor.r, textColor.g, textColor.b)
      });
      /* istanbul ignore next */
      cov_iee09csne().s[79]++;
      currentY -= 12;
    } else
    /* istanbul ignore next */
    {
      cov_iee09csne().b[22][1]++;
    }
    // Add reason if requested and provided
    cov_iee09csne().s[80]++;
    if (
    /* istanbul ignore next */
    (cov_iee09csne().b[24][0]++, appearance.showReason) &&
    /* istanbul ignore next */
    (cov_iee09csne().b[24][1]++, options.reason)) {
      /* istanbul ignore next */
      cov_iee09csne().b[23][0]++;
      cov_iee09csne().s[81]++;
      page.drawText(`Reason: ${options.reason}`, {
        x: x + 5,
        y: currentY,
        size: 8,
        font,
        color: (0, pdf_lib_1.rgb)(textColor.r, textColor.g, textColor.b)
      });
      /* istanbul ignore next */
      cov_iee09csne().s[82]++;
      currentY -= 12;
    } else
    /* istanbul ignore next */
    {
      cov_iee09csne().b[23][1]++;
    }
    // Add location if requested and provided
    cov_iee09csne().s[83]++;
    if (
    /* istanbul ignore next */
    (cov_iee09csne().b[26][0]++, appearance.showLocation) &&
    /* istanbul ignore next */
    (cov_iee09csne().b[26][1]++, options.location)) {
      /* istanbul ignore next */
      cov_iee09csne().b[25][0]++;
      cov_iee09csne().s[84]++;
      page.drawText(`Location: ${options.location}`, {
        x: x + 5,
        y: currentY,
        size: 8,
        font,
        color: (0, pdf_lib_1.rgb)(textColor.r, textColor.g, textColor.b)
      });
    } else
    /* istanbul ignore next */
    {
      cov_iee09csne().b[25][1]++;
    }
  }
  /**
   * Create signature data (simplified implementation)
   */
  async createSignatureData(pdfBytes, certificate, options) {
    /* istanbul ignore next */
    cov_iee09csne().f[7]++;
    // In a real implementation, this would:
    // 1. Calculate document hash
    // 2. Sign hash with private key
    // 3. Create PKCS#7 signature structure
    // 4. Optionally add timestamp
    // Create a simple hash of the document for demo purposes
    const hashBuffer =
    /* istanbul ignore next */
    (cov_iee09csne().s[85]++, await this.crypto.digest('SHA-256', pdfBytes));
    // Sign the hash (simplified - would normally use PKCS#7 structure)
    /* istanbul ignore next */
    cov_iee09csne().s[86]++;
    try {
      const signature =
      /* istanbul ignore next */
      (cov_iee09csne().s[87]++, await this.crypto.sign({
        name: 'RSA-PSS',
        saltLength: 32
      }, certificate.privateKey, hashBuffer));
      /* istanbul ignore next */
      cov_iee09csne().s[88]++;
      return new Uint8Array(signature);
    } catch (error) {
      /* istanbul ignore next */
      cov_iee09csne().s[89]++;
      console.warn('Signature creation failed:', error);
      /* istanbul ignore next */
      cov_iee09csne().s[90]++;
      return new Uint8Array();
    }
  }
  /**
   * Get timestamp from TSA server
   */
  async getTimestamp(data, timestampServer) {
    /* istanbul ignore next */
    cov_iee09csne().f[8]++;
    cov_iee09csne().s[91]++;
    try {
      /* istanbul ignore next */
      cov_iee09csne().s[92]++;
      // This would make a request to a Time Stamp Authority server
      // For now, return null
      console.warn('Timestamp service integration not yet implemented');
      /* istanbul ignore next */
      cov_iee09csne().s[93]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_iee09csne().s[94]++;
      console.error('Failed to get timestamp:', error);
      /* istanbul ignore next */
      cov_iee09csne().s[95]++;
      return null;
    }
  }
  /**
   * Remove signature from PDF
   */
  async removeSignature(pdfBytes, signatureFieldName) {
    /* istanbul ignore next */
    cov_iee09csne().f[9]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_iee09csne().s[96]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const form =
    /* istanbul ignore next */
    (cov_iee09csne().s[97]++, pdfDoc.getForm());
    /* istanbul ignore next */
    cov_iee09csne().s[98]++;
    try {
      const field =
      /* istanbul ignore next */
      (cov_iee09csne().s[99]++, form.getField(signatureFieldName));
      // Note: pdf-lib doesn't have direct signature removal
      // This would require low-level PDF manipulation
      /* istanbul ignore next */
      cov_iee09csne().s[100]++;
      console.warn('Signature removal requires advanced PDF manipulation');
    } catch (error) {
      /* istanbul ignore next */
      cov_iee09csne().s[101]++;
      console.warn(`Signature field ${signatureFieldName} not found`);
    }
    /* istanbul ignore next */
    cov_iee09csne().s[102]++;
    return await pdfDoc.save();
  }
  /**
   * Validate certificate chain
   */
  async validateCertificateChain(certificate) {
    /* istanbul ignore next */
    cov_iee09csne().f[10]++;
    // This would validate the certificate against trusted root CAs
    // For now, return basic validation
    const errors =
    /* istanbul ignore next */
    (cov_iee09csne().s[103]++, []);
    const now =
    /* istanbul ignore next */
    (cov_iee09csne().s[104]++, new Date());
    /* istanbul ignore next */
    cov_iee09csne().s[105]++;
    if (certificate.validFrom > now) {
      /* istanbul ignore next */
      cov_iee09csne().b[27][0]++;
      cov_iee09csne().s[106]++;
      errors.push('Certificate is not yet valid');
    } else
    /* istanbul ignore next */
    {
      cov_iee09csne().b[27][1]++;
    }
    cov_iee09csne().s[107]++;
    if (certificate.validTo < now) {
      /* istanbul ignore next */
      cov_iee09csne().b[28][0]++;
      cov_iee09csne().s[108]++;
      errors.push('Certificate has expired');
    } else
    /* istanbul ignore next */
    {
      cov_iee09csne().b[28][1]++;
    }
    cov_iee09csne().s[109]++;
    return {
      isValid: errors.length === 0,
      errors,
      trustChain: [certificate] // Simplified
    };
  }
  /**
   * Create drawing pad for signature capture
   */
  createSignaturePad(canvas, options =
  /* istanbul ignore next */
  (cov_iee09csne().b[29][0]++, {})) {
    /* istanbul ignore next */
    cov_iee09csne().f[11]++;
    const ctx =
    /* istanbul ignore next */
    (cov_iee09csne().s[110]++, canvas.getContext('2d'));
    const {
      penColor =
      /* istanbul ignore next */
      (cov_iee09csne().b[30][0]++, '#000000'),
      backgroundColor =
      /* istanbul ignore next */
      (cov_iee09csne().b[31][0]++, '#ffffff'),
      penWidth =
      /* istanbul ignore next */
      (cov_iee09csne().b[32][0]++, 2)
    } =
    /* istanbul ignore next */
    (cov_iee09csne().s[111]++, options);
    let isDrawing =
    /* istanbul ignore next */
    (cov_iee09csne().s[112]++, false);
    let currentPath =
    /* istanbul ignore next */
    (cov_iee09csne().s[113]++, []);
    // Set up canvas
    /* istanbul ignore next */
    cov_iee09csne().s[114]++;
    ctx.fillStyle = backgroundColor;
    /* istanbul ignore next */
    cov_iee09csne().s[115]++;
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    /* istanbul ignore next */
    cov_iee09csne().s[116]++;
    ctx.strokeStyle = penColor;
    /* istanbul ignore next */
    cov_iee09csne().s[117]++;
    ctx.lineWidth = penWidth;
    /* istanbul ignore next */
    cov_iee09csne().s[118]++;
    ctx.lineCap = 'round';
    /* istanbul ignore next */
    cov_iee09csne().s[119]++;
    ctx.lineJoin = 'round';
    /* istanbul ignore next */
    cov_iee09csne().s[120]++;
    const startDrawing = () => {
      /* istanbul ignore next */
      cov_iee09csne().f[12]++;
      cov_iee09csne().s[121]++;
      isDrawing = true;
      /* istanbul ignore next */
      cov_iee09csne().s[122]++;
      currentPath = [];
    };
    /* istanbul ignore next */
    cov_iee09csne().s[123]++;
    const stopDrawing = () => {
      /* istanbul ignore next */
      cov_iee09csne().f[13]++;
      cov_iee09csne().s[124]++;
      isDrawing = false;
    };
    /* istanbul ignore next */
    cov_iee09csne().s[125]++;
    const clear = () => {
      /* istanbul ignore next */
      cov_iee09csne().f[14]++;
      cov_iee09csne().s[126]++;
      ctx.fillStyle = backgroundColor;
      /* istanbul ignore next */
      cov_iee09csne().s[127]++;
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      /* istanbul ignore next */
      cov_iee09csne().s[128]++;
      currentPath = [];
    };
    /* istanbul ignore next */
    cov_iee09csne().s[129]++;
    const getImageData = async () => {
      /* istanbul ignore next */
      cov_iee09csne().f[15]++;
      cov_iee09csne().s[130]++;
      return new Promise(resolve => {
        /* istanbul ignore next */
        cov_iee09csne().f[16]++;
        cov_iee09csne().s[131]++;
        canvas.toBlob(blob => {
          /* istanbul ignore next */
          cov_iee09csne().f[17]++;
          cov_iee09csne().s[132]++;
          if (blob) {
            /* istanbul ignore next */
            cov_iee09csne().b[33][0]++;
            cov_iee09csne().s[133]++;
            blob.arrayBuffer().then(buffer => {
              /* istanbul ignore next */
              cov_iee09csne().f[18]++;
              cov_iee09csne().s[134]++;
              resolve(new Uint8Array(buffer));
            });
          } else {
            /* istanbul ignore next */
            cov_iee09csne().b[33][1]++;
            cov_iee09csne().s[135]++;
            resolve(new Uint8Array());
          }
        }, 'image/png');
      });
    };
    /* istanbul ignore next */
    cov_iee09csne().s[136]++;
    const getPath = () => {
      /* istanbul ignore next */
      cov_iee09csne().f[19]++;
      cov_iee09csne().s[137]++;
      return [...currentPath];
    };
    // Mouse/touch event handlers
    /* istanbul ignore next */
    cov_iee09csne().s[138]++;
    const handleStart = e => {
      /* istanbul ignore next */
      cov_iee09csne().f[20]++;
      cov_iee09csne().s[139]++;
      startDrawing();
      const rect =
      /* istanbul ignore next */
      (cov_iee09csne().s[140]++, canvas.getBoundingClientRect());
      const clientX =
      /* istanbul ignore next */
      (cov_iee09csne().s[141]++, 'touches' in e ?
      /* istanbul ignore next */
      (cov_iee09csne().b[34][0]++, e.touches[0].clientX) :
      /* istanbul ignore next */
      (cov_iee09csne().b[34][1]++, e.clientX));
      const clientY =
      /* istanbul ignore next */
      (cov_iee09csne().s[142]++, 'touches' in e ?
      /* istanbul ignore next */
      (cov_iee09csne().b[35][0]++, e.touches[0].clientY) :
      /* istanbul ignore next */
      (cov_iee09csne().b[35][1]++, e.clientY));
      const x =
      /* istanbul ignore next */
      (cov_iee09csne().s[143]++, clientX - rect.left);
      const y =
      /* istanbul ignore next */
      (cov_iee09csne().s[144]++, clientY - rect.top);
      /* istanbul ignore next */
      cov_iee09csne().s[145]++;
      currentPath.push({
        x,
        y
      });
      /* istanbul ignore next */
      cov_iee09csne().s[146]++;
      ctx.beginPath();
      /* istanbul ignore next */
      cov_iee09csne().s[147]++;
      ctx.moveTo(x, y);
    };
    /* istanbul ignore next */
    cov_iee09csne().s[148]++;
    const handleMove = e => {
      /* istanbul ignore next */
      cov_iee09csne().f[21]++;
      cov_iee09csne().s[149]++;
      if (!isDrawing) {
        /* istanbul ignore next */
        cov_iee09csne().b[36][0]++;
        cov_iee09csne().s[150]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_iee09csne().b[36][1]++;
      }
      cov_iee09csne().s[151]++;
      e.preventDefault();
      const rect =
      /* istanbul ignore next */
      (cov_iee09csne().s[152]++, canvas.getBoundingClientRect());
      const clientX =
      /* istanbul ignore next */
      (cov_iee09csne().s[153]++, 'touches' in e ?
      /* istanbul ignore next */
      (cov_iee09csne().b[37][0]++, e.touches[0].clientX) :
      /* istanbul ignore next */
      (cov_iee09csne().b[37][1]++, e.clientX));
      const clientY =
      /* istanbul ignore next */
      (cov_iee09csne().s[154]++, 'touches' in e ?
      /* istanbul ignore next */
      (cov_iee09csne().b[38][0]++, e.touches[0].clientY) :
      /* istanbul ignore next */
      (cov_iee09csne().b[38][1]++, e.clientY));
      const x =
      /* istanbul ignore next */
      (cov_iee09csne().s[155]++, clientX - rect.left);
      const y =
      /* istanbul ignore next */
      (cov_iee09csne().s[156]++, clientY - rect.top);
      /* istanbul ignore next */
      cov_iee09csne().s[157]++;
      currentPath.push({
        x,
        y
      });
      /* istanbul ignore next */
      cov_iee09csne().s[158]++;
      ctx.lineTo(x, y);
      /* istanbul ignore next */
      cov_iee09csne().s[159]++;
      ctx.stroke();
    };
    /* istanbul ignore next */
    cov_iee09csne().s[160]++;
    const handleEnd = () => {
      /* istanbul ignore next */
      cov_iee09csne().f[22]++;
      cov_iee09csne().s[161]++;
      stopDrawing();
      /* istanbul ignore next */
      cov_iee09csne().s[162]++;
      if (options.onComplete) {
        /* istanbul ignore next */
        cov_iee09csne().b[39][0]++;
        cov_iee09csne().s[163]++;
        getImageData().then(options.onComplete);
      } else
      /* istanbul ignore next */
      {
        cov_iee09csne().b[39][1]++;
      }
    };
    // Add event listeners
    /* istanbul ignore next */
    cov_iee09csne().s[164]++;
    canvas.addEventListener('mousedown', handleStart);
    /* istanbul ignore next */
    cov_iee09csne().s[165]++;
    canvas.addEventListener('mousemove', handleMove);
    /* istanbul ignore next */
    cov_iee09csne().s[166]++;
    canvas.addEventListener('mouseup', handleEnd);
    /* istanbul ignore next */
    cov_iee09csne().s[167]++;
    canvas.addEventListener('touchstart', handleStart);
    /* istanbul ignore next */
    cov_iee09csne().s[168]++;
    canvas.addEventListener('touchmove', handleMove);
    /* istanbul ignore next */
    cov_iee09csne().s[169]++;
    canvas.addEventListener('touchend', handleEnd);
    /* istanbul ignore next */
    cov_iee09csne().s[170]++;
    return {
      startDrawing,
      stopDrawing,
      clear,
      getImageData,
      getPath
    };
  }
  generateSerialNumber() {
    /* istanbul ignore next */
    cov_iee09csne().f[23]++;
    const array =
    /* istanbul ignore next */
    (cov_iee09csne().s[171]++, new Uint8Array(16));
    /* istanbul ignore next */
    cov_iee09csne().s[172]++;
    crypto.getRandomValues(array);
    /* istanbul ignore next */
    cov_iee09csne().s[173]++;
    return Array.from(array, byte => {
      /* istanbul ignore next */
      cov_iee09csne().f[24]++;
      cov_iee09csne().s[174]++;
      return byte.toString(16).padStart(2, '0');
    }).join('');
  }
}
/* istanbul ignore next */
cov_iee09csne().s[175]++;
exports.DigitalSignatureService = DigitalSignatureService;
/* istanbul ignore next */
cov_iee09csne().s[176]++;
exports.default = DigitalSignatureService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,