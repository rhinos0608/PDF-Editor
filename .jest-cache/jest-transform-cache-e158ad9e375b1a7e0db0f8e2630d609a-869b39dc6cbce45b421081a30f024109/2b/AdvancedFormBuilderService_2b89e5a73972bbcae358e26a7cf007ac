fa50a75f51eb328115b563175f9fe4e5
"use strict";

/* istanbul ignore next */
function cov_1uuqn9e9on() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedFormBuilderService.ts";
  var hash = "60ff43911c2602a6ab627a2676b3ccc03ef3afbc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedFormBuilderService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "4": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 27
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "7": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "9": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 21
        }
      },
      "10": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 44
        }
      },
      "11": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 55
        }
      },
      "13": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "14": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "15": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "16": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "17": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 64,
          column: 158
        }
      },
      "18": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 41
        }
      },
      "19": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 21
        }
      },
      "20": {
        start: {
          line: 72,
          column: 21
        },
        end: {
          line: 72,
          column: 43
        }
      },
      "21": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 60
        }
      },
      "22": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 79,
          column: 43
        }
      },
      "23": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "24": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "25": {
        start: {
          line: 82,
          column: 22
        },
        end: {
          line: 82,
          column: 46
        }
      },
      "26": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "27": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "28": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 53
        }
      },
      "29": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "30": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 28
        }
      },
      "31": {
        start: {
          line: 93,
          column: 21
        },
        end: {
          line: 93,
          column: 43
        }
      },
      "32": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 95,
          column: 25
        }
      },
      "33": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 25
        }
      },
      "34": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 43
        }
      },
      "35": {
        start: {
          line: 102,
          column: 23
        },
        end: {
          line: 102,
          column: 25
        }
      },
      "36": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 24
        }
      },
      "37": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "38": {
        start: {
          line: 105,
          column: 26
        },
        end: {
          line: 105,
          column: 44
        }
      },
      "39": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "40": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 60
        }
      },
      "41": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 30
        }
      },
      "42": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "43": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 114,
          column: 17
        }
      },
      "44": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 112,
          column: 56
        }
      },
      "45": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 113,
          column: 34
        }
      },
      "46": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "47": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 89
        }
      },
      "48": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 34
        }
      },
      "49": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "50": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 89
        }
      },
      "51": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 34
        }
      },
      "52": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 33
        }
      },
      "53": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 136,
          column: 10
        }
      },
      "54": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 70
        }
      },
      "55": {
        start: {
          line: 143,
          column: 58
        },
        end: {
          line: 143,
          column: 68
        }
      },
      "56": {
        start: {
          line: 149,
          column: 21
        },
        end: {
          line: 149,
          column: 43
        }
      },
      "57": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "58": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "59": {
        start: {
          line: 152,
          column: 23
        },
        end: {
          line: 152,
          column: 55
        }
      },
      "60": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 18
        }
      },
      "61": {
        start: {
          line: 154,
          column: 24
        },
        end: {
          line: 154,
          column: 26
        }
      },
      "62": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "63": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "64": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 24
        }
      },
      "65": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 25
        }
      },
      "66": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 45
        }
      },
      "67": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 79
        }
      },
      "68": {
        start: {
          line: 169,
          column: 23
        },
        end: {
          line: 169,
          column: 65
        }
      },
      "69": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 170,
          column: 37
        }
      },
      "70": {
        start: {
          line: 171,
          column: 22
        },
        end: {
          line: 171,
          column: 39
        }
      },
      "71": {
        start: {
          line: 173,
          column: 29
        },
        end: {
          line: 173,
          column: 59
        }
      },
      "72": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "73": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 70
        }
      },
      "74": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 50
        }
      },
      "75": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "76": {
        start: {
          line: 185,
          column: 25
        },
        end: {
          line: 185,
          column: 55
        }
      },
      "77": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "78": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 64
        }
      },
      "79": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "80": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 64
        }
      },
      "81": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 58
        }
      },
      "82": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 51
        }
      },
      "83": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 198,
          column: 93
        }
      },
      "84": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 202,
          column: 10
        }
      },
      "85": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "86": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 209,
          column: 69
        }
      },
      "87": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 210,
          column: 41
        }
      },
      "88": {
        start: {
          line: 211,
          column: 27
        },
        end: {
          line: 211,
          column: 43
        }
      },
      "89": {
        start: {
          line: 212,
          column: 25
        },
        end: {
          line: 212,
          column: 27
        }
      },
      "90": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "91": {
        start: {
          line: 214,
          column: 34
        },
        end: {
          line: 214,
          column: 49
        }
      },
      "92": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "93": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 54
        }
      },
      "94": {
        start: {
          line: 218,
          column: 21
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "95": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 56
        }
      },
      "96": {
        start: {
          line: 221,
          column: 21
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "97": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 58
        }
      },
      "98": {
        start: {
          line: 224,
          column: 21
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "99": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 58
        }
      },
      "100": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 24
        }
      },
      "101": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 64
        }
      },
      "102": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 22
        }
      },
      "103": {
        start: {
          line: 239,
          column: 23
        },
        end: {
          line: 239,
          column: 25
        }
      },
      "104": {
        start: {
          line: 240,
          column: 25
        },
        end: {
          line: 240,
          column: 27
        }
      },
      "105": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "106": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 42
        }
      },
      "107": {
        start: {
          line: 243,
          column: 31
        },
        end: {
          line: 243,
          column: 47
        }
      },
      "108": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "109": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 251,
          column: 19
        }
      },
      "110": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 25
        }
      },
      "111": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 256,
          column: 25
        }
      },
      "112": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 25
        }
      },
      "113": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "114": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 264,
          column: 19
        }
      },
      "115": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 274,
          column: 13
        }
      },
      "116": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 273,
          column: 19
        }
      },
      "117": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "118": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 281,
          column: 19
        }
      },
      "119": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 301,
          column: 13
        }
      },
      "120": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 292,
          column: 17
        }
      },
      "121": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 291,
          column: 23
        }
      },
      "122": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "123": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 299,
          column: 23
        }
      },
      "124": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "125": {
        start: {
          line: 304,
          column: 31
        },
        end: {
          line: 304,
          column: 72
        }
      },
      "126": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 312,
          column: 17
        }
      },
      "127": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 311,
          column: 23
        }
      },
      "128": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "129": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 321,
          column: 19
        }
      },
      "130": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 329,
          column: 13
        }
      },
      "131": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 328,
          column: 19
        }
      },
      "132": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 335,
          column: 10
        }
      },
      "133": {
        start: {
          line: 341,
          column: 31
        },
        end: {
          line: 341,
          column: 42
        }
      },
      "134": {
        start: {
          line: 342,
          column: 39
        },
        end: {
          line: 342,
          column: 81
        }
      },
      "135": {
        start: {
          line: 342,
          column: 58
        },
        end: {
          line: 342,
          column: 80
        }
      },
      "136": {
        start: {
          line: 344,
          column: 29
        },
        end: {
          line: 344,
          column: 82
        }
      },
      "137": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "138": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 354,
          column: 13
        }
      },
      "139": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 353,
          column: 17
        }
      },
      "140": {
        start: {
          line: 348,
          column: 35
        },
        end: {
          line: 348,
          column: 109
        }
      },
      "141": {
        start: {
          line: 349,
          column: 20
        },
        end: {
          line: 349,
          column: 56
        }
      },
      "142": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 86
        }
      },
      "143": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 30
        }
      },
      "144": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 48
        }
      },
      "145": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 50
        }
      },
      "146": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 46
        }
      },
      "147": {
        start: {
          line: 375,
          column: 26
        },
        end: {
          line: 375,
          column: 61
        }
      },
      "148": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "149": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 66
        }
      },
      "150": {
        start: {
          line: 377,
          column: 41
        },
        end: {
          line: 377,
          column: 64
        }
      },
      "151": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 25
        }
      },
      "152": {
        start: {
          line: 385,
          column: 23
        },
        end: {
          line: 385,
          column: 59
        }
      },
      "153": {
        start: {
          line: 386,
          column: 21
        },
        end: {
          line: 386,
          column: 47
        }
      },
      "154": {
        start: {
          line: 388,
          column: 21
        },
        end: {
          line: 388,
          column: 78
        }
      },
      "155": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 395,
          column: 11
        }
      },
      "156": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "157": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 59
        }
      },
      "158": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 35
        }
      },
      "159": {
        start: {
          line: 408,
          column: 23
        },
        end: {
          line: 408,
          column: 25
        }
      },
      "160": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "161": {
        start: {
          line: 411,
          column: 33
        },
        end: {
          line: 411,
          column: 121
        }
      },
      "162": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 426,
          column: 13
        }
      },
      "163": {
        start: {
          line: 413,
          column: 28
        },
        end: {
          line: 413,
          column: 29
        }
      },
      "164": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 425,
          column: 17
        }
      },
      "165": {
        start: {
          line: 415,
          column: 38
        },
        end: {
          line: 415,
          column: 67
        }
      },
      "166": {
        start: {
          line: 416,
          column: 39
        },
        end: {
          line: 416,
          column: 77
        }
      },
      "167": {
        start: {
          line: 417,
          column: 20
        },
        end: {
          line: 424,
          column: 21
        }
      },
      "168": {
        start: {
          line: 418,
          column: 38
        },
        end: {
          line: 421,
          column: 26
        }
      },
      "169": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 43
        }
      },
      "170": {
        start: {
          line: 423,
          column: 24
        },
        end: {
          line: 423,
          column: 32
        }
      },
      "171": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 57
        }
      },
      "172": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 22
        }
      },
      "173": {
        start: {
          line: 437,
          column: 18
        },
        end: {
          line: 437,
          column: 30
        }
      },
      "174": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 50
        }
      },
      "175": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "176": {
        start: {
          line: 440,
          column: 26
        },
        end: {
          line: 440,
          column: 70
        }
      },
      "177": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 62
        }
      },
      "178": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 73
        }
      },
      "179": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 19
        }
      },
      "180": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 80
        }
      },
      "181": {
        start: {
          line: 451,
          column: 23
        },
        end: {
          line: 451,
          column: 32
        }
      },
      "182": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "183": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 455,
          column: 13
        }
      },
      "184": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 43
        }
      },
      "185": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 47
        }
      },
      "186": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 22
        }
      },
      "187": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "188": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 463,
          column: 25
        }
      },
      "189": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 25
        }
      },
      "190": {
        start: {
          line: 464,
          column: 25
        },
        end: {
          line: 464,
          column: 47
        }
      },
      "191": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 491,
          column: 13
        }
      },
      "192": {
        start: {
          line: 473,
          column: 20
        },
        end: {
          line: 473,
          column: 63
        }
      },
      "193": {
        start: {
          line: 474,
          column: 20
        },
        end: {
          line: 474,
          column: 26
        }
      },
      "194": {
        start: {
          line: 476,
          column: 20
        },
        end: {
          line: 476,
          column: 62
        }
      },
      "195": {
        start: {
          line: 477,
          column: 20
        },
        end: {
          line: 477,
          column: 26
        }
      },
      "196": {
        start: {
          line: 479,
          column: 20
        },
        end: {
          line: 479,
          column: 64
        }
      },
      "197": {
        start: {
          line: 480,
          column: 20
        },
        end: {
          line: 480,
          column: 26
        }
      },
      "198": {
        start: {
          line: 483,
          column: 20
        },
        end: {
          line: 483,
          column: 62
        }
      },
      "199": {
        start: {
          line: 484,
          column: 20
        },
        end: {
          line: 484,
          column: 26
        }
      },
      "200": {
        start: {
          line: 486,
          column: 20
        },
        end: {
          line: 486,
          column: 60
        }
      },
      "201": {
        start: {
          line: 487,
          column: 20
        },
        end: {
          line: 487,
          column: 26
        }
      },
      "202": {
        start: {
          line: 489,
          column: 20
        },
        end: {
          line: 489,
          column: 68
        }
      },
      "203": {
        start: {
          line: 490,
          column: 20
        },
        end: {
          line: 490,
          column: 26
        }
      },
      "204": {
        start: {
          line: 495,
          column: 26
        },
        end: {
          line: 495,
          column: 58
        }
      },
      "205": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 52
        }
      },
      "206": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 499,
          column: 9
        }
      },
      "207": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 52
        }
      },
      "208": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "209": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 40
        }
      },
      "210": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "211": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 504,
          column: 39
        }
      },
      "212": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 508,
          column: 9
        }
      },
      "213": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 39
        }
      },
      "214": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 521,
          column: 11
        }
      },
      "215": {
        start: {
          line: 524,
          column: 25
        },
        end: {
          line: 524,
          column: 56
        }
      },
      "216": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 527,
          column: 9
        }
      },
      "217": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 29
        }
      },
      "218": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "219": {
        start: {
          line: 529,
          column: 12
        },
        end: {
          line: 529,
          column: 38
        }
      },
      "220": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 540,
          column: 11
        }
      },
      "221": {
        start: {
          line: 543,
          column: 27
        },
        end: {
          line: 543,
          column: 60
        }
      },
      "222": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 564,
          column: 9
        }
      },
      "223": {
        start: {
          line: 545,
          column: 26
        },
        end: {
          line: 545,
          column: 27
        }
      },
      "224": {
        start: {
          line: 546,
          column: 12
        },
        end: {
          line: 560,
          column: 13
        }
      },
      "225": {
        start: {
          line: 547,
          column: 16
        },
        end: {
          line: 552,
          column: 19
        }
      },
      "226": {
        start: {
          line: 554,
          column: 16
        },
        end: {
          line: 558,
          column: 19
        }
      },
      "227": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 30
        }
      },
      "228": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 563,
          column: 13
        }
      },
      "229": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 562,
          column: 54
        }
      },
      "230": {
        start: {
          line: 565,
          column: 8
        },
        end: {
          line: 567,
          column: 9
        }
      },
      "231": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 566,
          column: 40
        }
      },
      "232": {
        start: {
          line: 570,
          column: 25
        },
        end: {
          line: 570,
          column: 56
        }
      },
      "233": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 576,
          column: 9
        }
      },
      "234": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 572,
          column: 69
        }
      },
      "235": {
        start: {
          line: 572,
          column: 57
        },
        end: {
          line: 572,
          column: 66
        }
      },
      "236": {
        start: {
          line: 573,
          column: 12
        },
        end: {
          line: 575,
          column: 13
        }
      },
      "237": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 574,
          column: 52
        }
      },
      "238": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "239": {
        start: {
          line: 578,
          column: 12
        },
        end: {
          line: 578,
          column: 38
        }
      },
      "240": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 592,
          column: 11
        }
      },
      "241": {
        start: {
          line: 595,
          column: 23
        },
        end: {
          line: 595,
          column: 52
        }
      },
      "242": {
        start: {
          line: 596,
          column: 8
        },
        end: {
          line: 608,
          column: 11
        }
      },
      "243": {
        start: {
          line: 612,
          column: 25
        },
        end: {
          line: 612,
          column: 57
        }
      },
      "244": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 621,
          column: 11
        }
      },
      "245": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 628,
          column: 11
        }
      },
      "246": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 640,
          column: 11
        }
      },
      "247": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 648,
          column: 11
        }
      },
      "248": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 658,
          column: 9
        }
      },
      "249": {
        start: {
          line: 651,
          column: 12
        },
        end: {
          line: 657,
          column: 15
        }
      },
      "250": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 69
        }
      },
      "251": {
        start: {
          line: 664,
          column: 27
        },
        end: {
          line: 664,
          column: 55
        }
      },
      "252": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 38
        }
      },
      "253": {
        start: {
          line: 668,
          column: 27
        },
        end: {
          line: 668,
          column: 47
        }
      },
      "254": {
        start: {
          line: 669,
          column: 8
        },
        end: {
          line: 669,
          column: 79
        }
      },
      "255": {
        start: {
          line: 673,
          column: 23
        },
        end: {
          line: 673,
          column: 25
        }
      },
      "256": {
        start: {
          line: 674,
          column: 24
        },
        end: {
          line: 674,
          column: 33
        }
      },
      "257": {
        start: {
          line: 675,
          column: 22
        },
        end: {
          line: 689,
          column: 9
        }
      },
      "258": {
        start: {
          line: 676,
          column: 12
        },
        end: {
          line: 677,
          column: 23
        }
      },
      "259": {
        start: {
          line: 677,
          column: 16
        },
        end: {
          line: 677,
          column: 23
        }
      },
      "260": {
        start: {
          line: 679,
          column: 12
        },
        end: {
          line: 686,
          column: 13
        }
      },
      "261": {
        start: {
          line: 680,
          column: 16
        },
        end: {
          line: 685,
          column: 17
        }
      },
      "262": {
        start: {
          line: 681,
          column: 37
        },
        end: {
          line: 681,
          column: 73
        }
      },
      "263": {
        start: {
          line: 681,
          column: 54
        },
        end: {
          line: 681,
          column: 72
        }
      },
      "264": {
        start: {
          line: 682,
          column: 20
        },
        end: {
          line: 684,
          column: 21
        }
      },
      "265": {
        start: {
          line: 683,
          column: 24
        },
        end: {
          line: 683,
          column: 40
        }
      },
      "266": {
        start: {
          line: 687,
          column: 12
        },
        end: {
          line: 687,
          column: 34
        }
      },
      "267": {
        start: {
          line: 688,
          column: 12
        },
        end: {
          line: 688,
          column: 31
        }
      },
      "268": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 692,
          column: 9
        }
      },
      "269": {
        start: {
          line: 691,
          column: 12
        },
        end: {
          line: 691,
          column: 25
        }
      },
      "270": {
        start: {
          line: 693,
          column: 8
        },
        end: {
          line: 693,
          column: 22
        }
      },
      "271": {
        start: {
          line: 697,
          column: 36
        },
        end: {
          line: 719,
          column: 9
        }
      },
      "272": {
        start: {
          line: 720,
          column: 8
        },
        end: {
          line: 720,
          column: 72
        }
      },
      "273": {
        start: {
          line: 724,
          column: 0
        },
        end: {
          line: 724,
          column: 64
        }
      },
      "274": {
        start: {
          line: 730,
          column: 8
        },
        end: {
          line: 746,
          column: 9
        }
      },
      "275": {
        start: {
          line: 732,
          column: 29
        },
        end: {
          line: 732,
          column: 36
        }
      },
      "276": {
        start: {
          line: 734,
          column: 12
        },
        end: {
          line: 737,
          column: 13
        }
      },
      "277": {
        start: {
          line: 735,
          column: 30
        },
        end: {
          line: 735,
          column: 61
        }
      },
      "278": {
        start: {
          line: 736,
          column: 16
        },
        end: {
          line: 736,
          column: 75
        }
      },
      "279": {
        start: {
          line: 740,
          column: 27
        },
        end: {
          line: 740,
          column: 56
        }
      },
      "280": {
        start: {
          line: 741,
          column: 12
        },
        end: {
          line: 741,
          column: 26
        }
      },
      "281": {
        start: {
          line: 744,
          column: 12
        },
        end: {
          line: 744,
          column: 55
        }
      },
      "282": {
        start: {
          line: 745,
          column: 12
        },
        end: {
          line: 745,
          column: 21
        }
      },
      "283": {
        start: {
          line: 750,
          column: 26
        },
        end: {
          line: 750,
          column: 69
        }
      },
      "284": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 757,
          column: 9
        }
      },
      "285": {
        start: {
          line: 753,
          column: 12
        },
        end: {
          line: 753,
          column: 57
        }
      },
      "286": {
        start: {
          line: 756,
          column: 12
        },
        end: {
          line: 756,
          column: 21
        }
      },
      "287": {
        start: {
          line: 760,
          column: 0
        },
        end: {
          line: 760,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 68
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 46
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 59
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 42
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 33
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 92
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 39
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 101
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 45
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 130
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 24
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 141
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 143,
            column: 51
          },
          end: {
            line: 143,
            column: 52
          }
        },
        loc: {
          start: {
            line: 143,
            column: 58
          },
          end: {
            line: 143,
            column: 68
          }
        },
        line: 143
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 38
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 148
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 24
          }
        },
        loc: {
          start: {
            line: 155,
            column: 41
          },
          end: {
            line: 160,
            column: 9
          }
        },
        line: 155
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 21
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 162
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 47
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 168
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 55
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 184
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 36
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 207
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 35
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 238
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 39
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 340
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 342,
            column: 53
          },
          end: {
            line: 342,
            column: 54
          }
        },
        loc: {
          start: {
            line: 342,
            column: 58
          },
          end: {
            line: 342,
            column: 80
          }
        },
        line: 342
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 27
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 361
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 28
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 368
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 37
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 374
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 377,
            column: 36
          },
          end: {
            line: 377,
            column: 37
          }
        },
        loc: {
          start: {
            line: 377,
            column: 41
          },
          end: {
            line: 377,
            column: 64
          }
        },
        line: 377
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        loc: {
          start: {
            line: 384,
            column: 38
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 384
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 33
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 405
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        loc: {
          start: {
            line: 436,
            column: 30
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 436
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 447,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        },
        loc: {
          start: {
            line: 447,
            column: 22
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 447
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 30
          },
          end: {
            line: 459,
            column: 5
          }
        },
        line: 450
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        },
        loc: {
          start: {
            line: 460,
            column: 53
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 460
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 494,
            column: 4
          },
          end: {
            line: 494,
            column: 5
          }
        },
        loc: {
          start: {
            line: 494,
            column: 42
          },
          end: {
            line: 522,
            column: 5
          }
        },
        line: 494
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 523,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        },
        loc: {
          start: {
            line: 523,
            column: 41
          },
          end: {
            line: 541,
            column: 5
          }
        },
        line: 523
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 542,
            column: 5
          }
        },
        loc: {
          start: {
            line: 542,
            column: 43
          },
          end: {
            line: 568,
            column: 5
          }
        },
        line: 542
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 569,
            column: 4
          },
          end: {
            line: 569,
            column: 5
          }
        },
        loc: {
          start: {
            line: 569,
            column: 41
          },
          end: {
            line: 593,
            column: 5
          }
        },
        line: 569
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 572,
            column: 50
          },
          end: {
            line: 572,
            column: 51
          }
        },
        loc: {
          start: {
            line: 572,
            column: 57
          },
          end: {
            line: 572,
            column: 66
          }
        },
        line: 572
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 594,
            column: 4
          },
          end: {
            line: 594,
            column: 5
          }
        },
        loc: {
          start: {
            line: 594,
            column: 39
          },
          end: {
            line: 609,
            column: 5
          }
        },
        line: 594
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 610,
            column: 4
          },
          end: {
            line: 610,
            column: 5
          }
        },
        loc: {
          start: {
            line: 610,
            column: 47
          },
          end: {
            line: 629,
            column: 5
          }
        },
        line: 610
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 5
          }
        },
        loc: {
          start: {
            line: 630,
            column: 46
          },
          end: {
            line: 659,
            column: 5
          }
        },
        line: 630
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 660,
            column: 4
          },
          end: {
            line: 660,
            column: 5
          }
        },
        loc: {
          start: {
            line: 660,
            column: 19
          },
          end: {
            line: 662,
            column: 5
          }
        },
        line: 660
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 663,
            column: 4
          },
          end: {
            line: 663,
            column: 5
          }
        },
        loc: {
          start: {
            line: 663,
            column: 24
          },
          end: {
            line: 666,
            column: 5
          }
        },
        line: 663
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 667,
            column: 4
          },
          end: {
            line: 667,
            column: 5
          }
        },
        loc: {
          start: {
            line: 667,
            column: 24
          },
          end: {
            line: 670,
            column: 5
          }
        },
        line: 667
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 671,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        },
        loc: {
          start: {
            line: 671,
            column: 37
          },
          end: {
            line: 694,
            column: 5
          }
        },
        line: 671
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 675,
            column: 22
          },
          end: {
            line: 675,
            column: 23
          }
        },
        loc: {
          start: {
            line: 675,
            column: 33
          },
          end: {
            line: 689,
            column: 9
          }
        },
        line: 675
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 681,
            column: 49
          },
          end: {
            line: 681,
            column: 50
          }
        },
        loc: {
          start: {
            line: 681,
            column: 54
          },
          end: {
            line: 681,
            column: 72
          }
        },
        line: 681
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 695,
            column: 4
          },
          end: {
            line: 695,
            column: 5
          }
        },
        loc: {
          start: {
            line: 695,
            column: 33
          },
          end: {
            line: 722,
            column: 5
          }
        },
        line: 695
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 729,
            column: 4
          },
          end: {
            line: 729,
            column: 5
          }
        },
        loc: {
          start: {
            line: 729,
            column: 28
          },
          end: {
            line: 747,
            column: 5
          }
        },
        line: 729
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 748,
            column: 4
          },
          end: {
            line: 748,
            column: 5
          }
        },
        loc: {
          start: {
            line: 748,
            column: 29
          },
          end: {
            line: 758,
            column: 5
          }
        },
        line: 748
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 16,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 64
          },
          end: {
            line: 16,
            column: 66
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 30
          }
        }, {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 20,
            column: 47
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 59,
            column: 44
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 50
          },
          end: {
            line: 64,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 50
          },
          end: {
            line: 64,
            column: 59
          }
        }, {
          start: {
            line: 64,
            column: 63
          },
          end: {
            line: 64,
            column: 64
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 66
          },
          end: {
            line: 64,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 66
          },
          end: {
            line: 64,
            column: 75
          }
        }, {
          start: {
            line: 64,
            column: 79
          },
          end: {
            line: 64,
            column: 80
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 82
          },
          end: {
            line: 64,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 82
          },
          end: {
            line: 64,
            column: 95
          }
        }, {
          start: {
            line: 64,
            column: 99
          },
          end: {
            line: 64,
            column: 102
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 104
          },
          end: {
            line: 64,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 104
          },
          end: {
            line: 64,
            column: 118
          }
        }, {
          start: {
            line: 64,
            column: 122
          },
          end: {
            line: 64,
            column: 124
          }
        }],
        line: 64
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 126
          },
          end: {
            line: 64,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 126
          },
          end: {
            line: 64,
            column: 143
          }
        }, {
          start: {
            line: 64,
            column: 147
          },
          end: {
            line: 64,
            column: 148
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 15
          },
          end: {
            line: 73,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 22
          },
          end: {
            line: 73,
            column: 54
          }
        }, {
          start: {
            line: 73,
            column: 57
          },
          end: {
            line: 73,
            column: 59
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 81,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 84,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 84,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "12": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 95,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 95,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "13": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "14": {
        loc: {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 30
          }
        }, {
          start: {
            line: 106,
            column: 35
          },
          end: {
            line: 106,
            column: 41
          }
        }, {
          start: {
            line: 106,
            column: 45
          },
          end: {
            line: 106,
            column: 75
          }
        }],
        line: 106
      },
      "15": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "16": {
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 32
          }
        }, {
          start: {
            line: 110,
            column: 36
          },
          end: {
            line: 110,
            column: 41
          }
        }],
        line: 110
      },
      "17": {
        loc: {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 114,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 114,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "18": {
        loc: {
          start: {
            line: 111,
            column: 20
          },
          end: {
            line: 111,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 20
          },
          end: {
            line: 111,
            column: 44
          }
        }, {
          start: {
            line: 111,
            column: 48
          },
          end: {
            line: 111,
            column: 96
          }
        }],
        line: 111
      },
      "19": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 46
          }
        }, {
          start: {
            line: 115,
            column: 50
          },
          end: {
            line: 115,
            column: 102
          }
        }],
        line: 115
      },
      "21": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "22": {
        loc: {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 119,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 119,
            column: 46
          }
        }, {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 119,
            column: 102
          }
        }],
        line: 119
      },
      "23": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "24": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "25": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: 193,
            column: 13
          },
          end: {
            line: 197,
            column: 9
          }
        }],
        line: 190
      },
      "26": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 226,
            column: 17
          }
        }, {
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        }],
        line: 215
      },
      "27": {
        loc: {
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        }, {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        }],
        line: 218
      },
      "28": {
        loc: {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        }, {
          start: {
            line: 224,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        }],
        line: 221
      },
      "29": {
        loc: {
          start: {
            line: 224,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 21
          },
          end: {
            line: 226,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "30": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "31": {
        loc: {
          start: {
            line: 245,
            column: 16
          },
          end: {
            line: 245,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 16
          },
          end: {
            line: 245,
            column: 30
          }
        }, {
          start: {
            line: 245,
            column: 34
          },
          end: {
            line: 245,
            column: 53
          }
        }],
        line: 245
      },
      "32": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 256,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 256,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "33": {
        loc: {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 255,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 255,
            column: 35
          }
        }, {
          start: {
            line: 255,
            column: 39
          },
          end: {
            line: 255,
            column: 54
          }
        }],
        line: 255
      },
      "34": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "35": {
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 35
          }
        }, {
          start: {
            line: 258,
            column: 39
          },
          end: {
            line: 258,
            column: 78
          }
        }],
        line: 258
      },
      "36": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 274,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 274,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "37": {
        loc: {
          start: {
            line: 267,
            column: 16
          },
          end: {
            line: 267,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 16
          },
          end: {
            line: 267,
            column: 37
          }
        }, {
          start: {
            line: 267,
            column: 41
          },
          end: {
            line: 267,
            column: 84
          }
        }],
        line: 267
      },
      "38": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "39": {
        loc: {
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 37
          }
        }, {
          start: {
            line: 275,
            column: 41
          },
          end: {
            line: 275,
            column: 84
          }
        }],
        line: 275
      },
      "40": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "41": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 284,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 284,
            column: 39
          }
        }, {
          start: {
            line: 284,
            column: 43
          },
          end: {
            line: 284,
            column: 68
          }
        }],
        line: 284
      },
      "42": {
        loc: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 292,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 292,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "43": {
        loc: {
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 49
          }
        }, {
          start: {
            line: 285,
            column: 53
          },
          end: {
            line: 285,
            column: 75
          }
        }],
        line: 285
      },
      "44": {
        loc: {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "45": {
        loc: {
          start: {
            line: 293,
            column: 20
          },
          end: {
            line: 293,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 20
          },
          end: {
            line: 293,
            column: 49
          }
        }, {
          start: {
            line: 293,
            column: 53
          },
          end: {
            line: 293,
            column: 75
          }
        }],
        line: 293
      },
      "46": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "47": {
        loc: {
          start: {
            line: 305,
            column: 16
          },
          end: {
            line: 312,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 16
          },
          end: {
            line: 312,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "48": {
        loc: {
          start: {
            line: 309,
            column: 33
          },
          end: {
            line: 309,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 33
          },
          end: {
            line: 309,
            column: 47
          }
        }, {
          start: {
            line: 309,
            column: 51
          },
          end: {
            line: 309,
            column: 66
          }
        }],
        line: 309
      },
      "49": {
        loc: {
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "50": {
        loc: {
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 315,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 315,
            column: 38
          }
        }, {
          start: {
            line: 315,
            column: 42
          },
          end: {
            line: 315,
            column: 75
          }
        }],
        line: 315
      },
      "51": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "52": {
        loc: {
          start: {
            line: 323,
            column: 16
          },
          end: {
            line: 323,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 16
          },
          end: {
            line: 323,
            column: 38
          }
        }, {
          start: {
            line: 323,
            column: 42
          },
          end: {
            line: 323,
            column: 75
          }
        }],
        line: 323
      },
      "53": {
        loc: {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "54": {
        loc: {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "55": {
        loc: {
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 426,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 426,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "56": {
        loc: {
          start: {
            line: 417,
            column: 20
          },
          end: {
            line: 424,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 20
          },
          end: {
            line: 424,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "57": {
        loc: {
          start: {
            line: 420,
            column: 42
          },
          end: {
            line: 420,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 55
          },
          end: {
            line: 420,
            column: 68
          }
        }, {
          start: {
            line: 420,
            column: 71
          },
          end: {
            line: 420,
            column: 73
          }
        }],
        line: 420
      },
      "58": {
        loc: {
          start: {
            line: 440,
            column: 26
          },
          end: {
            line: 440,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 26
          },
          end: {
            line: 440,
            column: 42
          }
        }, {
          start: {
            line: 440,
            column: 46
          },
          end: {
            line: 440,
            column: 64
          }
        }, {
          start: {
            line: 440,
            column: 68
          },
          end: {
            line: 440,
            column: 70
          }
        }],
        line: 440
      },
      "59": {
        loc: {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 455,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 455,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "60": {
        loc: {
          start: {
            line: 462,
            column: 12
          },
          end: {
            line: 463,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 12
          },
          end: {
            line: 463,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "61": {
        loc: {
          start: {
            line: 465,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 466,
            column: 16
          },
          end: {
            line: 466,
            column: 28
          }
        }, {
          start: {
            line: 467,
            column: 16
          },
          end: {
            line: 467,
            column: 33
          }
        }, {
          start: {
            line: 468,
            column: 16
          },
          end: {
            line: 468,
            column: 32
          }
        }, {
          start: {
            line: 469,
            column: 16
          },
          end: {
            line: 469,
            column: 30
          }
        }, {
          start: {
            line: 470,
            column: 16
          },
          end: {
            line: 470,
            column: 29
          }
        }, {
          start: {
            line: 471,
            column: 16
          },
          end: {
            line: 471,
            column: 29
          }
        }, {
          start: {
            line: 472,
            column: 16
          },
          end: {
            line: 474,
            column: 26
          }
        }, {
          start: {
            line: 475,
            column: 16
          },
          end: {
            line: 477,
            column: 26
          }
        }, {
          start: {
            line: 478,
            column: 16
          },
          end: {
            line: 480,
            column: 26
          }
        }, {
          start: {
            line: 481,
            column: 16
          },
          end: {
            line: 481,
            column: 32
          }
        }, {
          start: {
            line: 482,
            column: 16
          },
          end: {
            line: 484,
            column: 26
          }
        }, {
          start: {
            line: 485,
            column: 16
          },
          end: {
            line: 487,
            column: 26
          }
        }, {
          start: {
            line: 488,
            column: 16
          },
          end: {
            line: 490,
            column: 26
          }
        }],
        line: 465
      },
      "62": {
        loc: {
          start: {
            line: 496,
            column: 26
          },
          end: {
            line: 496,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 26
          },
          end: {
            line: 496,
            column: 44
          }
        }, {
          start: {
            line: 496,
            column: 48
          },
          end: {
            line: 496,
            column: 50
          }
        }],
        line: 496
      },
      "63": {
        loc: {
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "64": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "65": {
        loc: {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 500,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 500,
            column: 27
          }
        }, {
          start: {
            line: 500,
            column: 31
          },
          end: {
            line: 500,
            column: 57
          }
        }],
        line: 500
      },
      "66": {
        loc: {
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "67": {
        loc: {
          start: {
            line: 503,
            column: 12
          },
          end: {
            line: 503,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 503,
            column: 12
          },
          end: {
            line: 503,
            column: 26
          }
        }, {
          start: {
            line: 503,
            column: 30
          },
          end: {
            line: 503,
            column: 55
          }
        }],
        line: 503
      },
      "68": {
        loc: {
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "69": {
        loc: {
          start: {
            line: 514,
            column: 25
          },
          end: {
            line: 516,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 515,
            column: 16
          },
          end: {
            line: 515,
            column: 130
          }
        }, {
          start: {
            line: 516,
            column: 16
          },
          end: {
            line: 516,
            column: 49
          }
        }],
        line: 514
      },
      "70": {
        loc: {
          start: {
            line: 517,
            column: 25
          },
          end: {
            line: 517,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 517,
            column: 25
          },
          end: {
            line: 517,
            column: 54
          }
        }, {
          start: {
            line: 517,
            column: 58
          },
          end: {
            line: 517,
            column: 59
          }
        }],
        line: 517
      },
      "71": {
        loc: {
          start: {
            line: 518,
            column: 29
          },
          end: {
            line: 520,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 519,
            column: 16
          },
          end: {
            line: 519,
            column: 142
          }
        }, {
          start: {
            line: 520,
            column: 16
          },
          end: {
            line: 520,
            column: 43
          }
        }],
        line: 518
      },
      "72": {
        loc: {
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 525
      },
      "73": {
        loc: {
          start: {
            line: 525,
            column: 12
          },
          end: {
            line: 525,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 525,
            column: 12
          },
          end: {
            line: 525,
            column: 41
          }
        }, {
          start: {
            line: 525,
            column: 45
          },
          end: {
            line: 525,
            column: 72
          }
        }],
        line: 525
      },
      "74": {
        loc: {
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 528
      },
      "75": {
        loc: {
          start: {
            line: 536,
            column: 25
          },
          end: {
            line: 538,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 537,
            column: 16
          },
          end: {
            line: 537,
            column: 130
          }
        }, {
          start: {
            line: 538,
            column: 16
          },
          end: {
            line: 538,
            column: 49
          }
        }],
        line: 536
      },
      "76": {
        loc: {
          start: {
            line: 539,
            column: 25
          },
          end: {
            line: 539,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 539,
            column: 25
          },
          end: {
            line: 539,
            column: 54
          }
        }, {
          start: {
            line: 539,
            column: 58
          },
          end: {
            line: 539,
            column: 59
          }
        }],
        line: 539
      },
      "77": {
        loc: {
          start: {
            line: 544,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 544
      },
      "78": {
        loc: {
          start: {
            line: 557,
            column: 26
          },
          end: {
            line: 557,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 557,
            column: 26
          },
          end: {
            line: 557,
            column: 52
          }
        }, {
          start: {
            line: 557,
            column: 56
          },
          end: {
            line: 557,
            column: 58
          }
        }],
        line: 557
      },
      "79": {
        loc: {
          start: {
            line: 561,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 561,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 561
      },
      "80": {
        loc: {
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 567,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 567,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "81": {
        loc: {
          start: {
            line: 571,
            column: 8
          },
          end: {
            line: 576,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 8
          },
          end: {
            line: 576,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 571
      },
      "82": {
        loc: {
          start: {
            line: 573,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "83": {
        loc: {
          start: {
            line: 577,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 577,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 577
      },
      "84": {
        loc: {
          start: {
            line: 585,
            column: 25
          },
          end: {
            line: 587,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 586,
            column: 16
          },
          end: {
            line: 586,
            column: 130
          }
        }, {
          start: {
            line: 587,
            column: 16
          },
          end: {
            line: 587,
            column: 49
          }
        }],
        line: 585
      },
      "85": {
        loc: {
          start: {
            line: 588,
            column: 25
          },
          end: {
            line: 588,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 588,
            column: 25
          },
          end: {
            line: 588,
            column: 54
          }
        }, {
          start: {
            line: 588,
            column: 58
          },
          end: {
            line: 588,
            column: 59
          }
        }],
        line: 588
      },
      "86": {
        loc: {
          start: {
            line: 589,
            column: 29
          },
          end: {
            line: 591,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 590,
            column: 16
          },
          end: {
            line: 590,
            column: 142
          }
        }, {
          start: {
            line: 591,
            column: 16
          },
          end: {
            line: 591,
            column: 43
          }
        }],
        line: 589
      },
      "87": {
        loc: {
          start: {
            line: 601,
            column: 25
          },
          end: {
            line: 603,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 602,
            column: 16
          },
          end: {
            line: 602,
            column: 130
          }
        }, {
          start: {
            line: 603,
            column: 16
          },
          end: {
            line: 603,
            column: 49
          }
        }],
        line: 601
      },
      "88": {
        loc: {
          start: {
            line: 604,
            column: 25
          },
          end: {
            line: 604,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 604,
            column: 25
          },
          end: {
            line: 604,
            column: 54
          }
        }, {
          start: {
            line: 604,
            column: 58
          },
          end: {
            line: 604,
            column: 59
          }
        }],
        line: 604
      },
      "89": {
        loc: {
          start: {
            line: 605,
            column: 29
          },
          end: {
            line: 607,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 606,
            column: 16
          },
          end: {
            line: 606,
            column: 142
          }
        }, {
          start: {
            line: 607,
            column: 16
          },
          end: {
            line: 607,
            column: 49
          }
        }],
        line: 605
      },
      "90": {
        loc: {
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 650
      },
      "91": {
        loc: {
          start: {
            line: 661,
            column: 15
          },
          end: {
            line: 661,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 661,
            column: 15
          },
          end: {
            line: 661,
            column: 29
          }
        }, {
          start: {
            line: 661,
            column: 33
          },
          end: {
            line: 661,
            column: 52
          }
        }, {
          start: {
            line: 661,
            column: 56
          },
          end: {
            line: 661,
            column: 68
          }
        }],
        line: 661
      },
      "92": {
        loc: {
          start: {
            line: 669,
            column: 15
          },
          end: {
            line: 669,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 669,
            column: 15
          },
          end: {
            line: 669,
            column: 37
          }
        }, {
          start: {
            line: 669,
            column: 41
          },
          end: {
            line: 669,
            column: 78
          }
        }],
        line: 669
      },
      "93": {
        loc: {
          start: {
            line: 676,
            column: 12
          },
          end: {
            line: 677,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 12
          },
          end: {
            line: 677,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 676
      },
      "94": {
        loc: {
          start: {
            line: 679,
            column: 12
          },
          end: {
            line: 686,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 679,
            column: 12
          },
          end: {
            line: 686,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 679
      },
      "95": {
        loc: {
          start: {
            line: 682,
            column: 20
          },
          end: {
            line: 684,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 682,
            column: 20
          },
          end: {
            line: 684,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 682
      },
      "96": {
        loc: {
          start: {
            line: 682,
            column: 24
          },
          end: {
            line: 682,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 682,
            column: 24
          },
          end: {
            line: 682,
            column: 32
          }
        }, {
          start: {
            line: 682,
            column: 36
          },
          end: {
            line: 682,
            column: 61
          }
        }],
        line: 682
      },
      "97": {
        loc: {
          start: {
            line: 736,
            column: 62
          },
          end: {
            line: 736,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 736,
            column: 62
          },
          end: {
            line: 736,
            column: 67
          }
        }, {
          start: {
            line: 736,
            column: 71
          },
          end: {
            line: 736,
            column: 72
          }
        }],
        line: 736
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedFormBuilderService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\services\\AdvancedFormBuilderService.ts"],
      sourcesContent: ["import { PDFDocument, PDFForm, PDFTextField, PDFCheckBox, PDFRadioGroup, PDFDropdown, PDFButton, rgb, StandardFonts, PDFFont, PDFPage } from 'pdf-lib';\r\n\r\nexport interface FormField {\r\n  id: string;\r\n  name: string;\r\n  type: 'text' | 'multiline' | 'password' | 'number' | 'email' | 'phone' | 'date' | 'checkbox' | 'radio' | 'dropdown' | 'listbox' | 'button' | 'signature' | 'barcode';\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  pageIndex: number;\r\n  \r\n  // Common properties\r\n  required?: boolean;\r\n  readOnly?: boolean;\r\n  visible?: boolean;\r\n  tooltip?: string;\r\n  tabOrder?: number;\r\n  \r\n  // Text field specific\r\n  defaultValue?: string;\r\n  placeholder?: string;\r\n  maxLength?: number;\r\n  multiline?: boolean;\r\n  password?: boolean;\r\n  richText?: boolean;\r\n  \r\n  // Validation\r\n  validation?: {\r\n    pattern?: RegExp;\r\n    customValidator?: (value: string) => { valid: boolean; message?: string };\r\n    minLength?: number;\r\n    maxLength?: number;\r\n    min?: number;\r\n    max?: number;\r\n    required?: boolean;\r\n  };\r\n  \r\n  // Formatting\r\n  format?: {\r\n    type?: 'none' | 'number' | 'percent' | 'date' | 'time' | 'special';\r\n    mask?: string;\r\n    decimalPlaces?: number;\r\n    currency?: string;\r\n    dateFormat?: string;\r\n    timeFormat?: string;\r\n  };\r\n  \r\n  // Choice fields (dropdown, radio, checkbox)\r\n  options?: Array<{\r\n    value: string;\r\n    label: string;\r\n    selected?: boolean;\r\n  }>;\r\n  \r\n  // Appearance\r\n  appearance?: {\r\n    fontSize?: number;\r\n    fontFamily?: string;\r\n    fontColor?: { r: number; g: number; b: number };\r\n    backgroundColor?: { r: number; g: number; b: number };\r\n    borderColor?: { r: number; g: number; b: number };\r\n    borderWidth?: number;\r\n    borderStyle?: 'solid' | 'dashed' | 'beveled' | 'inset' | 'underline';\r\n    alignment?: 'left' | 'center' | 'right' | 'justify';\r\n  };\r\n  \r\n  // Calculation and scripting\r\n  calculation?: {\r\n    formula?: string;\r\n    dependencies?: string[];\r\n    recalculateOnChange?: boolean;\r\n  };\r\n  \r\n  // Actions\r\n  actions?: {\r\n    onFocus?: string;\r\n    onBlur?: string;\r\n    onChange?: string;\r\n    onClick?: string;\r\n    onKeyPress?: string;\r\n    onValidate?: string;\r\n  };\r\n}\r\n\r\nexport interface FormTemplate {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  category: string;\r\n  fields: FormField[];\r\n  metadata: {\r\n    created: Date;\r\n    modified: Date;\r\n    author: string;\r\n    version: string;\r\n  };\r\n  settings: {\r\n    submitUrl?: string;\r\n    submitMethod?: 'POST' | 'GET' | 'EMAIL';\r\n    submitFormat?: 'FDF' | 'XFDF' | 'PDF' | 'HTML' | 'XML';\r\n    resetAfterSubmit?: boolean;\r\n    showRequiredFieldsOnly?: boolean;\r\n    highlightRequiredFields?: boolean;\r\n  };\r\n}\r\n\r\nexport interface FormValidationResult {\r\n  valid: boolean;\r\n  errors: Array<{\r\n    fieldId: string;\r\n    fieldName: string;\r\n    message: string;\r\n    type: 'required' | 'format' | 'range' | 'custom';\r\n  }>;\r\n  warnings: Array<{\r\n    fieldId: string;\r\n    fieldName: string;\r\n    message: string;\r\n  }>;\r\n}\r\n\r\nexport interface FormSubmission {\r\n  id: string;\r\n  timestamp: Date;\r\n  data: { [fieldName: string]: any };\r\n  validation: FormValidationResult;\r\n  metadata: {\r\n    userAgent?: string;\r\n    ipAddress?: string;\r\n    sessionId?: string;\r\n  };\r\n}\r\n\r\nexport class AdvancedFormBuilderService {\r\n  private templates: Map<string, FormTemplate> = new Map();\r\n  private submissions: Map<string, FormSubmission[]> = new Map();\r\n  private calculationEngine: CalculationEngine;\r\n\r\n  constructor() {\r\n    this.calculationEngine = new CalculationEngine();\r\n    this.initializeBuiltinTemplates();\r\n  }\r\n\r\n  /**\r\n   * Create a new form field\r\n   */\r\n  createField(\r\n    type: FormField['type'],\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    pageIndex: number,\r\n    options: Partial<FormField> = {}\r\n  ): FormField {\r\n    const id = this.generateFieldId();\r\n    \r\n    return {\r\n      id,\r\n      name: options.name || `field_${id}`,\r\n      type,\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      pageIndex,\r\n      required: false,\r\n      readOnly: false,\r\n      visible: true,\r\n      appearance: {\r\n        fontSize: 12,\r\n        fontFamily: 'Helvetica',\r\n        fontColor: { r: 0, g: 0, b: 0 },\r\n        backgroundColor: { r: 1, g: 1, b: 1 },\r\n        borderColor: { r: 0.5, g: 0.5, b: 0.5 },\r\n        borderWidth: 1,\r\n        borderStyle: 'solid',\r\n        alignment: 'left'\r\n      },\r\n      ...options\r\n    };\r\n  }\r\n\r\n  private forms: Map<string, { id: string; fields: Map<string, FormField> }> = new Map();\r\n\r\n  /**\r\n   * Create a new form\r\n   */\r\n  createForm(templateId?: string): Promise<{ formId: string; fields: FormField[] }> {\r\n    const formId = this.generateFormId();\r\n    const fields = new Map<string, FormField>();\r\n    \r\n    this.forms.set(formId, { id: formId, fields });\r\n    \r\n    return Promise.resolve({\r\n      formId,\r\n      fields: Array.from(fields.values())\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a field to an existing form\r\n   */\r\n  addField(formId: string, fieldType: FormField['type'], options: Partial<FormField> = {}): FormField {\r\n    const form = this.forms.get(formId);\r\n    if (!form) {\r\n      throw new Error(`Form with ID ${formId} not found`);\r\n    }\r\n\r\n    const field = this.createField(\r\n      fieldType,\r\n      options.x || 0,\r\n      options.y || 0,\r\n      options.width || 100,\r\n      options.height || 30,\r\n      options.pageIndex || 0,\r\n      options\r\n    );\r\n\r\n    form.fields.set(field.id, field);\r\n    return field;\r\n  }\r\n\r\n  /**\r\n   * Get all fields for a form\r\n   */\r\n  getFormFields(formId: string): FormField[] {\r\n    const form = this.forms.get(formId);\r\n    return form ? Array.from(form.fields.values()) : [];\r\n  }\r\n\r\n  /**\r\n   * Update a field in a form\r\n   */\r\n  updateField(formId: string, fieldId: string, updates: Partial<FormField>): FormField | null {\r\n    const form = this.forms.get(formId);\r\n    if (!form) return null;\r\n\r\n    const field = form.fields.get(fieldId);\r\n    if (!field) return null;\r\n\r\n    const updatedField = { ...field, ...updates };\r\n    form.fields.set(fieldId, updatedField);\r\n    return updatedField;\r\n  }\r\n\r\n  /**\r\n   * Delete a field from a form\r\n   */\r\n  deleteField(formId: string, fieldId: string): boolean {\r\n    const form = this.forms.get(formId);\r\n    if (!form) return false;\r\n\r\n    return form.fields.delete(fieldId);\r\n  }\r\n\r\n  /**\r\n   * Validate form data\r\n   */\r\n  validateFormData(formData: Record<string, any>, fields: FormField[]): { valid: boolean; errors: Record<string, string> } {\r\n    const errors: Record<string, string> = {};\r\n    let valid = true;\r\n\r\n    for (const field of fields) {\r\n      const value = formData[field.id];\r\n      \r\n      if (field.required && (!value || value.toString().trim() === '')) {\r\n        errors[field.id] = 'This field is required';\r\n        valid = false;\r\n      }\r\n\r\n      if (field.validation && value) {\r\n        if (field.validation.pattern && !field.validation.pattern.test(value.toString())) {\r\n          errors[field.id] = 'Invalid format';\r\n          valid = false;\r\n        }\r\n\r\n        if (field.validation.minLength && value.toString().length < field.validation.minLength) {\r\n          errors[field.id] = `Minimum length is ${field.validation.minLength}`;\r\n          valid = false;\r\n        }\r\n\r\n        if (field.validation.maxLength && value.toString().length > field.validation.maxLength) {\r\n          errors[field.id] = `Maximum length is ${field.validation.maxLength}`;\r\n          valid = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return { valid, errors };\r\n  }\r\n\r\n  /**\r\n   * Generate submission data\r\n   */\r\n  generateSubmissionData(formId: string, formData: Record<string, any>): any {\r\n    return {\r\n      formId,\r\n      submissionId: `submission_${Date.now()}`,\r\n      timestamp: new Date(),\r\n      data: formData\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Export form to PDF\r\n   */\r\n  exportToPDF(formId: string): Promise<Uint8Array> {\r\n    // Basic implementation - returns empty PDF for now\r\n    return PDFDocument.create().then(doc => doc.save());\r\n  }\r\n\r\n  /**\r\n   * Auto-arrange fields\r\n   */\r\n  autoArrangeFields(formId: string, layout: 'single-column' | 'two-column' | 'grid'): void {\r\n    const form = this.forms.get(formId);\r\n    if (!form) return;\r\n\r\n    const fields = Array.from(form.fields.values());\r\n    let y = 50;\r\n    const spacing = 40;\r\n\r\n    fields.forEach((field, index) => {\r\n      field.x = 50;\r\n      field.y = y;\r\n      y += spacing;\r\n      form.fields.set(field.id, field);\r\n    });\r\n  }\r\n\r\n  private generateFormId(): string {\r\n    return `form_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Add form fields to existing PDF\r\n   */\r\n  async addFormFieldsToPDF(\r\n    pdfBytes: Uint8Array,\r\n    fields: FormField[]\r\n  ): Promise<Uint8Array> {\r\n    const pdfDoc = await PDFDocument.load(pdfBytes);\r\n    const form = pdfDoc.getForm();\r\n    const pages = pdfDoc.getPages();\r\n    \r\n    // Group fields by type for batch processing\r\n    const fieldsByType = this.groupFieldsByType(fields);\r\n    \r\n    for (const [type, typeFields] of fieldsByType) {\r\n      await this.addFieldsOfType(form, pages, type, typeFields);\r\n    }\r\n    \r\n    // Enable form features\r\n    pdfDoc.getForm().updateFieldAppearances();\r\n    \r\n    return await pdfDoc.save();\r\n  }\r\n\r\n  /**\r\n   * Create form from template\r\n   */\r\n  async createFormFromTemplate(\r\n    templateId: string,\r\n    pdfBytes?: Uint8Array\r\n  ): Promise<{ pdfBytes: Uint8Array; template: FormTemplate }> {\r\n    const template = this.templates.get(templateId);\r\n    if (!template) {\r\n      throw new Error(`Template ${templateId} not found`);\r\n    }\r\n\r\n    let pdfDoc: PDFDocument;\r\n    if (pdfBytes) {\r\n      pdfDoc = await PDFDocument.load(pdfBytes);\r\n    } else {\r\n      // Create new PDF with appropriate size\r\n      pdfDoc = await PDFDocument.create();\r\n      const page = pdfDoc.addPage([612, 792]); // Standard letter size\r\n    }\r\n\r\n    const formBytes = await this.addFormFieldsToPDF(\r\n      await pdfDoc.save(),\r\n      template.fields\r\n    );\r\n\r\n    return {\r\n      pdfBytes: formBytes,\r\n      template\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Extract form data from PDF\r\n   */\r\n  async extractFormData(pdfBytes: Uint8Array): Promise<{ [fieldName: string]: any }> {\r\n    try {\r\n      const pdfDoc = await PDFDocument.load(pdfBytes);\r\n      const form = pdfDoc.getForm();\r\n      const fields = form.getFields();\r\n      \r\n      const data: { [fieldName: string]: any } = {};\r\n      \r\n      for (const field of fields) {\r\n        const fieldName = field.getName();\r\n        \r\n        if (field instanceof PDFTextField) {\r\n          data[fieldName] = field.getText();\r\n        } else if (field instanceof PDFCheckBox) {\r\n          data[fieldName] = field.isChecked();\r\n        } else if (field instanceof PDFRadioGroup) {\r\n          data[fieldName] = field.getSelected();\r\n        } else if (field instanceof PDFDropdown) {\r\n          data[fieldName] = field.getSelected();\r\n        }\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error extracting form data:', error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate form data\r\n   */\r\n  validateFormData(\r\n    data: { [fieldName: string]: any },\r\n    fields: FormField[]\r\n  ): FormValidationResult {\r\n    const errors: FormValidationResult['errors'] = [];\r\n    const warnings: FormValidationResult['warnings'] = [];\r\n\r\n    for (const field of fields) {\r\n      const value = data[field.name];\r\n      const validation = field.validation;\r\n\r\n      // Required field validation\r\n      if (field.required && this.isEmpty(value)) {\r\n        errors.push({\r\n          fieldId: field.id,\r\n          fieldName: field.name,\r\n          message: `${field.name} is required`,\r\n          type: 'required'\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // Skip validation for empty non-required fields\r\n      if (this.isEmpty(value) && !field.required) continue;\r\n\r\n      // Pattern validation\r\n      if (validation?.pattern && !validation.pattern.test(String(value))) {\r\n        errors.push({\r\n          fieldId: field.id,\r\n          fieldName: field.name,\r\n          message: `${field.name} format is invalid`,\r\n          type: 'format'\r\n        });\r\n      }\r\n\r\n      // Length validation\r\n      if (validation?.minLength && String(value).length < validation.minLength) {\r\n        errors.push({\r\n          fieldId: field.id,\r\n          fieldName: field.name,\r\n          message: `${field.name} must be at least ${validation.minLength} characters`,\r\n          type: 'format'\r\n        });\r\n      }\r\n\r\n      if (validation?.maxLength && String(value).length > validation.maxLength) {\r\n        errors.push({\r\n          fieldId: field.id,\r\n          fieldName: field.name,\r\n          message: `${field.name} must be no more than ${validation.maxLength} characters`,\r\n          type: 'format'\r\n        });\r\n      }\r\n\r\n      // Range validation for numbers\r\n      if (field.type === 'number' && typeof value === 'number') {\r\n        if (validation?.min !== undefined && value < validation.min) {\r\n          errors.push({\r\n            fieldId: field.id,\r\n            fieldName: field.name,\r\n            message: `${field.name} must be at least ${validation.min}`,\r\n            type: 'range'\r\n          });\r\n        }\r\n\r\n        if (validation?.max !== undefined && value > validation.max) {\r\n          errors.push({\r\n            fieldId: field.id,\r\n            fieldName: field.name,\r\n            message: `${field.name} must be no more than ${validation.max}`,\r\n            type: 'range'\r\n          });\r\n        }\r\n      }\r\n\r\n      // Custom validation\r\n      if (validation?.customValidator) {\r\n        const result = validation.customValidator(String(value));\r\n        if (!result.valid) {\r\n          errors.push({\r\n            fieldId: field.id,\r\n            fieldName: field.name,\r\n            message: result.message || 'Invalid value',\r\n            type: 'custom'\r\n          });\r\n        }\r\n      }\r\n\r\n      // Type-specific validation\r\n      if (field.type === 'email' && !this.isValidEmail(String(value))) {\r\n        errors.push({\r\n          fieldId: field.id,\r\n          fieldName: field.name,\r\n          message: 'Please enter a valid email address',\r\n          type: 'format'\r\n        });\r\n      }\r\n\r\n      if (field.type === 'phone' && !this.isValidPhone(String(value))) {\r\n        warnings.push({\r\n          fieldId: field.id,\r\n          fieldName: field.name,\r\n          message: 'Phone number format may be invalid'\r\n        });\r\n      }\r\n    }\r\n\r\n    return {\r\n      valid: errors.length === 0,\r\n      errors,\r\n      warnings\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate field values based on formulas\r\n   */\r\n  calculateFieldValues(\r\n    data: { [fieldName: string]: any },\r\n    fields: FormField[]\r\n  ): { [fieldName: string]: any } {\r\n    const calculatedData = { ...data };\r\n    const fieldsWithCalculations = fields.filter(f => f.calculation?.formula);\r\n\r\n    // Sort by dependency order to ensure correct calculation sequence\r\n    const sortedFields = this.sortFieldsByDependencies(fieldsWithCalculations);\r\n\r\n    for (const field of sortedFields) {\r\n      if (field.calculation?.formula) {\r\n        try {\r\n          const result = this.calculationEngine.evaluate(\r\n            field.calculation.formula,\r\n            calculatedData\r\n          );\r\n          calculatedData[field.name] = result;\r\n        } catch (error) {\r\n          console.warn(`Calculation error for field ${field.name}:`, error);\r\n        }\r\n      }\r\n    }\r\n\r\n    return calculatedData;\r\n  }\r\n\r\n  /**\r\n   * Save form template\r\n   */\r\n  saveTemplate(template: FormTemplate): void {\r\n    template.metadata.modified = new Date();\r\n    this.templates.set(template.id, template);\r\n  }\r\n\r\n  /**\r\n   * Load form template\r\n   */\r\n  getTemplate(templateId: string): FormTemplate | undefined {\r\n    return this.templates.get(templateId);\r\n  }\r\n\r\n  /**\r\n   * Get all templates by category\r\n   */\r\n  getTemplatesByCategory(category?: string): FormTemplate[] {\r\n    const templates = Array.from(this.templates.values());\r\n    if (category) {\r\n      return templates.filter(t => t.category === category);\r\n    }\r\n    return templates;\r\n  }\r\n\r\n  /**\r\n   * Generate form preview\r\n   */\r\n  async generateFormPreview(fields: FormField[]): Promise<Uint8Array> {\r\n    const pdfDoc = await PDFDocument.create();\r\n    const page = pdfDoc.addPage([612, 792]);\r\n    \r\n    // Add title\r\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n    page.drawText('Form Preview', {\r\n      x: 50,\r\n      y: 750,\r\n      size: 18,\r\n      font,\r\n      color: rgb(0, 0, 0)\r\n    });\r\n\r\n    // Add form fields with visual representation\r\n    for (const field of fields) {\r\n      await this.drawFieldPreview(page, field, font);\r\n    }\r\n\r\n    return await pdfDoc.save();\r\n  }\r\n\r\n  /**\r\n   * Import form fields from FDF/XFDF\r\n   */\r\n  async importFromFDF(fdfData: string): Promise<FormField[]> {\r\n    // Parse FDF/XFDF and convert to FormField objects\r\n    // This is a simplified implementation\r\n    const fields: FormField[] = [];\r\n    \r\n    try {\r\n      // Parse FDF format (simplified)\r\n      const fieldMatches = fdfData.match(/<field name=\"([^\"]+)\">[\\s\\S]*?<value>([^<]+)<\\/value>[\\s\\S]*?<\\/field>/g);\r\n      \r\n      if (fieldMatches) {\r\n        let index = 0;\r\n        for (const match of fieldMatches) {\r\n          const nameMatch = match.match(/name=\"([^\"]+)\"/);\r\n          const valueMatch = match.match(/<value>([^<]+)<\\/value>/);\r\n          \r\n          if (nameMatch) {\r\n            const field = this.createField(\r\n              'text',\r\n              50,\r\n              700 - (index * 40),\r\n              200,\r\n              25,\r\n              0,\r\n              {\r\n                name: nameMatch[1],\r\n                defaultValue: valueMatch ? valueMatch[1] : ''\r\n              }\r\n            );\r\n            fields.push(field);\r\n            index++;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error importing FDF:', error);\r\n    }\r\n\r\n    return fields;\r\n  }\r\n\r\n  /**\r\n   * Export form fields to FDF/XFDF\r\n   */\r\n  exportToFDF(fields: FormField[], data: { [fieldName: string]: any }): string {\r\n    let fdf = `%FDF-1.2\\n`;\r\n    fdf += `1 0 obj\\n<<\\n/FDF << /Fields [\\n`;\r\n\r\n    for (const field of fields) {\r\n      const value = data[field.name] || field.defaultValue || '';\r\n      fdf += `<< /T (${field.name}) /V (${value}) >>\\n`;\r\n    }\r\n\r\n    fdf += `] >>\\n>>\\nendobj\\ntrailer\\n<<\\n/Root 1 0 R\\n>>\\n%%EOF\\n`;\r\n\r\n    return fdf;\r\n  }\r\n\r\n  // Private helper methods\r\n\r\n  private generateFieldId(): string {\r\n    return `field_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private groupFieldsByType(fields: FormField[]): Map<FormField['type'], FormField[]> {\r\n    const groups = new Map<FormField['type'], FormField[]>();\r\n    \r\n    for (const field of fields) {\r\n      if (!groups.has(field.type)) {\r\n        groups.set(field.type, []);\r\n      }\r\n      groups.get(field.type)!.push(field);\r\n    }\r\n    \r\n    return groups;\r\n  }\r\n\r\n  private async addFieldsOfType(\r\n    form: PDFForm,\r\n    pages: PDFPage[],\r\n    type: FormField['type'],\r\n    fields: FormField[]\r\n  ): Promise<void> {\r\n    for (const field of fields) {\r\n      if (field.pageIndex >= pages.length) continue;\r\n      \r\n      const page = pages[field.pageIndex];\r\n      \r\n      switch (type) {\r\n        case 'text':\r\n        case 'multiline':\r\n        case 'password':\r\n        case 'number':\r\n        case 'email':\r\n        case 'phone':\r\n        case 'date':\r\n          await this.addTextField(form, page, field);\r\n          break;\r\n          \r\n        case 'checkbox':\r\n          await this.addCheckBox(form, page, field);\r\n          break;\r\n          \r\n        case 'radio':\r\n          await this.addRadioGroup(form, page, field);\r\n          break;\r\n          \r\n        case 'dropdown':\r\n        case 'listbox':\r\n          await this.addDropdown(form, page, field);\r\n          break;\r\n          \r\n        case 'button':\r\n          await this.addButton(form, page, field);\r\n          break;\r\n          \r\n        case 'signature':\r\n          await this.addSignatureField(form, page, field);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async addTextField(form: PDFForm, page: PDFPage, field: FormField): Promise<void> {\r\n    const textField = form.createTextField(field.name);\r\n    \r\n    textField.setText(field.defaultValue || '');\r\n    \r\n    if (field.maxLength) {\r\n      textField.setMaxLength(field.maxLength);\r\n    }\r\n    \r\n    if (field.multiline || field.type === 'multiline') {\r\n      textField.enableMultiline();\r\n    }\r\n    \r\n    if (field.password || field.type === 'password') {\r\n      textField.enablePassword();\r\n    }\r\n    \r\n    if (field.readOnly) {\r\n      textField.enableReadOnly();\r\n    }\r\n    \r\n    textField.addToPage(page, {\r\n      x: field.x,\r\n      y: page.getHeight() - field.y - field.height,\r\n      width: field.width,\r\n      height: field.height,\r\n      borderColor: field.appearance?.borderColor ? \r\n        rgb(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b) :\r\n        rgb(0.5, 0.5, 0.5),\r\n      borderWidth: field.appearance?.borderWidth || 1,\r\n      backgroundColor: field.appearance?.backgroundColor ?\r\n        rgb(field.appearance.backgroundColor.r, field.appearance.backgroundColor.g, field.appearance.backgroundColor.b) :\r\n        rgb(1, 1, 1)\r\n    });\r\n  }\r\n\r\n  private async addCheckBox(form: PDFForm, page: PDFPage, field: FormField): Promise<void> {\r\n    const checkbox = form.createCheckBox(field.name);\r\n    \r\n    if (field.defaultValue === 'true' || field.defaultValue === true) {\r\n      checkbox.check();\r\n    }\r\n    \r\n    if (field.readOnly) {\r\n      checkbox.enableReadOnly();\r\n    }\r\n    \r\n    checkbox.addToPage(page, {\r\n      x: field.x,\r\n      y: page.getHeight() - field.y - field.height,\r\n      width: field.width,\r\n      height: field.height,\r\n      borderColor: field.appearance?.borderColor ? \r\n        rgb(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b) :\r\n        rgb(0.5, 0.5, 0.5),\r\n      borderWidth: field.appearance?.borderWidth || 1\r\n    });\r\n  }\r\n\r\n  private async addRadioGroup(form: PDFForm, page: PDFPage, field: FormField): Promise<void> {\r\n    const radioGroup = form.createRadioGroup(field.name);\r\n    \r\n    if (field.options) {\r\n      let yOffset = 0;\r\n      for (const option of field.options) {\r\n        radioGroup.addOptionToPage(option.value, page, {\r\n          x: field.x,\r\n          y: page.getHeight() - field.y - field.height - yOffset,\r\n          width: 15,\r\n          height: 15\r\n        });\r\n        \r\n        // Add option label\r\n        page.drawText(option.label, {\r\n          x: field.x + 20,\r\n          y: page.getHeight() - field.y - field.height - yOffset + 3,\r\n          size: field.appearance?.fontSize || 12\r\n        });\r\n        \r\n        yOffset += 20;\r\n      }\r\n      \r\n      if (field.defaultValue) {\r\n        radioGroup.select(field.defaultValue);\r\n      }\r\n    }\r\n    \r\n    if (field.readOnly) {\r\n      radioGroup.enableReadOnly();\r\n    }\r\n  }\r\n\r\n  private async addDropdown(form: PDFForm, page: PDFPage, field: FormField): Promise<void> {\r\n    const dropdown = form.createDropdown(field.name);\r\n    \r\n    if (field.options) {\r\n      dropdown.setOptions(field.options.map(opt => opt.value));\r\n      \r\n      if (field.defaultValue) {\r\n        dropdown.select(field.defaultValue);\r\n      }\r\n    }\r\n    \r\n    if (field.readOnly) {\r\n      dropdown.enableReadOnly();\r\n    }\r\n    \r\n    dropdown.addToPage(page, {\r\n      x: field.x,\r\n      y: page.getHeight() - field.y - field.height,\r\n      width: field.width,\r\n      height: field.height,\r\n      borderColor: field.appearance?.borderColor ? \r\n        rgb(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b) :\r\n        rgb(0.5, 0.5, 0.5),\r\n      borderWidth: field.appearance?.borderWidth || 1,\r\n      backgroundColor: field.appearance?.backgroundColor ?\r\n        rgb(field.appearance.backgroundColor.r, field.appearance.backgroundColor.g, field.appearance.backgroundColor.b) :\r\n        rgb(1, 1, 1)\r\n    });\r\n  }\r\n\r\n  private async addButton(form: PDFForm, page: PDFPage, field: FormField): Promise<void> {\r\n    const button = form.createButton(field.name);\r\n    \r\n    button.addToPage(page, {\r\n      x: field.x,\r\n      y: page.getHeight() - field.y - field.height,\r\n      width: field.width,\r\n      height: field.height,\r\n      borderColor: field.appearance?.borderColor ? \r\n        rgb(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b) :\r\n        rgb(0.5, 0.5, 0.5),\r\n      borderWidth: field.appearance?.borderWidth || 1,\r\n      backgroundColor: field.appearance?.backgroundColor ?\r\n        rgb(field.appearance.backgroundColor.r, field.appearance.backgroundColor.g, field.appearance.backgroundColor.b) :\r\n        rgb(0.9, 0.9, 0.9)\r\n    });\r\n  }\r\n\r\n  private async addSignatureField(form: PDFForm, page: PDFPage, field: FormField): Promise<void> {\r\n    // Signature fields are typically text fields with special appearance\r\n    const sigField = form.createTextField(field.name);\r\n    \r\n    sigField.addToPage(page, {\r\n      x: field.x,\r\n      y: page.getHeight() - field.y - field.height,\r\n      width: field.width,\r\n      height: field.height,\r\n      borderColor: rgb(0, 0, 0),\r\n      borderWidth: 2,\r\n      backgroundColor: rgb(0.98, 0.98, 0.98)\r\n    });\r\n    \r\n    // Add signature placeholder text\r\n    page.drawText('Digital Signature', {\r\n      x: field.x + 5,\r\n      y: page.getHeight() - field.y - field.height / 2,\r\n      size: 10,\r\n      color: rgb(0.5, 0.5, 0.5)\r\n    });\r\n  }\r\n\r\n  private async drawFieldPreview(page: PDFPage, field: FormField, font: PDFFont): Promise<void> {\r\n    // Draw field rectangle\r\n    page.drawRectangle({\r\n      x: field.x,\r\n      y: page.getHeight() - field.y - field.height,\r\n      width: field.width,\r\n      height: field.height,\r\n      borderColor: rgb(0.7, 0.7, 0.7),\r\n      borderWidth: 1,\r\n      color: rgb(0.95, 0.95, 0.95)\r\n    });\r\n    \r\n    // Draw field label\r\n    page.drawText(`${field.name} (${field.type})`, {\r\n      x: field.x,\r\n      y: page.getHeight() - field.y + 5,\r\n      size: 8,\r\n      font,\r\n      color: rgb(0.3, 0.3, 0.3)\r\n    });\r\n    \r\n    // Draw required indicator\r\n    if (field.required) {\r\n      page.drawText('*', {\r\n        x: field.x + field.width - 10,\r\n        y: page.getHeight() - field.y + 5,\r\n        size: 12,\r\n        font,\r\n        color: rgb(1, 0, 0)\r\n      });\r\n    }\r\n  }\r\n\r\n  private isEmpty(value: any): boolean {\r\n    return value === null || value === undefined || value === '';\r\n  }\r\n\r\n  private isValidEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  private isValidPhone(phone: string): boolean {\r\n    const phoneRegex = /^\\+?[\\d\\s\\-\\(\\)]+$/;\r\n    return phoneRegex.test(phone) && phone.replace(/\\D/g, '').length >= 10;\r\n  }\r\n\r\n  private sortFieldsByDependencies(fields: FormField[]): FormField[] {\r\n    // Simple topological sort for calculation dependencies\r\n    const sorted: FormField[] = [];\r\n    const visited = new Set<string>();\r\n    \r\n    const visit = (field: FormField) => {\r\n      if (visited.has(field.id)) return;\r\n      \r\n      // Visit dependencies first\r\n      if (field.calculation?.dependencies) {\r\n        for (const depName of field.calculation.dependencies) {\r\n          const depField = fields.find(f => f.name === depName);\r\n          if (depField && !visited.has(depField.id)) {\r\n            visit(depField);\r\n          }\r\n        }\r\n      }\r\n      \r\n      visited.add(field.id);\r\n      sorted.push(field);\r\n    };\r\n    \r\n    for (const field of fields) {\r\n      visit(field);\r\n    }\r\n    \r\n    return sorted;\r\n  }\r\n\r\n  private initializeBuiltinTemplates(): void {\r\n    // Initialize some common form templates\r\n    const contactFormTemplate: FormTemplate = {\r\n      id: 'contact-form',\r\n      name: 'Contact Form',\r\n      description: 'Basic contact information form',\r\n      category: 'Business',\r\n      fields: [\r\n        this.createField('text', 50, 100, 200, 25, 0, { name: 'firstName', required: true }),\r\n        this.createField('text', 300, 100, 200, 25, 0, { name: 'lastName', required: true }),\r\n        this.createField('email', 50, 140, 450, 25, 0, { name: 'email', required: true }),\r\n        this.createField('phone', 50, 180, 200, 25, 0, { name: 'phone' }),\r\n        this.createField('multiline', 50, 220, 450, 100, 0, { name: 'message' })\r\n      ],\r\n      metadata: {\r\n        created: new Date(),\r\n        modified: new Date(),\r\n        author: 'System',\r\n        version: '1.0'\r\n      },\r\n      settings: {\r\n        submitFormat: 'PDF',\r\n        highlightRequiredFields: true\r\n      }\r\n    };\r\n    \r\n    this.templates.set(contactFormTemplate.id, contactFormTemplate);\r\n    \r\n    // Add more built-in templates as needed\r\n  }\r\n}\r\n\r\n/**\r\n * Simple calculation engine for form field calculations\r\n */\r\nclass CalculationEngine {\r\n  evaluate(formula: string, data: { [key: string]: any }): any {\r\n    try {\r\n      // Replace field references with actual values\r\n      let expression = formula;\r\n      \r\n      // Simple variable substitution\r\n      for (const [key, value] of Object.entries(data)) {\r\n        const regex = new RegExp(`\\\\b${key}\\\\b`, 'g');\r\n        expression = expression.replace(regex, String(value || 0));\r\n      }\r\n      \r\n      // Basic mathematical operations (in a real implementation, use a proper expression parser)\r\n      // This is a simplified version for demonstration\r\n      const result = this.safeEvaluate(expression);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Calculation error:', error);\r\n      return 0;\r\n    }\r\n  }\r\n  \r\n  private safeEvaluate(expression: string): number {\r\n    // Remove any non-mathematical characters for safety\r\n    const sanitized = expression.replace(/[^0-9+\\-*/().\\s]/g, '');\r\n    \r\n    try {\r\n      // Use Function constructor instead of eval for better safety\r\n      return new Function(`return ${sanitized}`)();\r\n    } catch {\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AdvancedFormBuilderService;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "60ff43911c2602a6ab627a2676b3ccc03ef3afbc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uuqn9e9on = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uuqn9e9on();
cov_1uuqn9e9on().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1uuqn9e9on().s[1]++;
exports.AdvancedFormBuilderService = void 0;
const pdf_lib_1 =
/* istanbul ignore next */
(cov_1uuqn9e9on().s[2]++, require("pdf-lib"));
class AdvancedFormBuilderService {
  templates =
  /* istanbul ignore next */
  (cov_1uuqn9e9on().s[3]++, new Map());
  submissions =
  /* istanbul ignore next */
  (cov_1uuqn9e9on().s[4]++, new Map());
  calculationEngine;
  constructor() {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[0]++;
    cov_1uuqn9e9on().s[5]++;
    this.calculationEngine = new CalculationEngine();
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[6]++;
    this.initializeBuiltinTemplates();
  }
  /**
   * Create a new form field
   */
  createField(type, x, y, width, height, pageIndex, options =
  /* istanbul ignore next */
  (cov_1uuqn9e9on().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[1]++;
    const id =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[7]++, this.generateFieldId());
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[8]++;
    return {
      id,
      name:
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[1][0]++, options.name) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[1][1]++, `field_${id}`),
      type,
      x,
      y,
      width,
      height,
      pageIndex,
      required: false,
      readOnly: false,
      visible: true,
      appearance: {
        fontSize: 12,
        fontFamily: 'Helvetica',
        fontColor: {
          r: 0,
          g: 0,
          b: 0
        },
        backgroundColor: {
          r: 1,
          g: 1,
          b: 1
        },
        borderColor: {
          r: 0.5,
          g: 0.5,
          b: 0.5
        },
        borderWidth: 1,
        borderStyle: 'solid',
        alignment: 'left'
      },
      ...options
    };
  }
  forms =
  /* istanbul ignore next */
  (cov_1uuqn9e9on().s[9]++, new Map());
  /**
   * Create a new form
   */
  createForm(templateId) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[2]++;
    const formId =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[10]++, this.generateFormId());
    const fields =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[11]++, new Map());
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[12]++;
    this.forms.set(formId, {
      id: formId,
      fields
    });
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[13]++;
    return Promise.resolve({
      formId,
      fields: Array.from(fields.values())
    });
  }
  /**
   * Add a field to an existing form
   */
  addField(formId, fieldType, options =
  /* istanbul ignore next */
  (cov_1uuqn9e9on().b[2][0]++, {})) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[3]++;
    const form =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[14]++, this.forms.get(formId));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[15]++;
    if (!form) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[3][0]++;
      cov_1uuqn9e9on().s[16]++;
      throw new Error(`Form with ID ${formId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[3][1]++;
    }
    const field =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[17]++, this.createField(fieldType,
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[4][0]++, options.x) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[4][1]++, 0),
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[5][0]++, options.y) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[5][1]++, 0),
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[6][0]++, options.width) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[6][1]++, 100),
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[7][0]++, options.height) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[7][1]++, 30),
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[8][0]++, options.pageIndex) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[8][1]++, 0), options));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[18]++;
    form.fields.set(field.id, field);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[19]++;
    return field;
  }
  /**
   * Get all fields for a form
   */
  getFormFields(formId) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[4]++;
    const form =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[20]++, this.forms.get(formId));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[21]++;
    return form ?
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[9][0]++, Array.from(form.fields.values())) :
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[9][1]++, []);
  }
  /**
   * Update a field in a form
   */
  updateField(formId, fieldId, updates) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[5]++;
    const form =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[22]++, this.forms.get(formId));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[23]++;
    if (!form) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[10][0]++;
      cov_1uuqn9e9on().s[24]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[10][1]++;
    }
    const field =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[25]++, form.fields.get(fieldId));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[26]++;
    if (!field) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[11][0]++;
      cov_1uuqn9e9on().s[27]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[11][1]++;
    }
    const updatedField =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[28]++, {
      ...field,
      ...updates
    });
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[29]++;
    form.fields.set(fieldId, updatedField);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[30]++;
    return updatedField;
  }
  /**
   * Delete a field from a form
   */
  deleteField(formId, fieldId) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[6]++;
    const form =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[31]++, this.forms.get(formId));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[32]++;
    if (!form) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[12][0]++;
      cov_1uuqn9e9on().s[33]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[12][1]++;
    }
    cov_1uuqn9e9on().s[34]++;
    return form.fields.delete(fieldId);
  }
  /**
   * Validate form data
   */
  validateFormData(formData, fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[7]++;
    const errors =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[35]++, {});
    let valid =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[36]++, true);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[37]++;
    for (const field of fields) {
      const value =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[38]++, formData[field.id]);
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[39]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[14][0]++, field.required) && (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[14][1]++, !value) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[14][2]++, value.toString().trim() === ''))) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[13][0]++;
        cov_1uuqn9e9on().s[40]++;
        errors[field.id] = 'This field is required';
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[41]++;
        valid = false;
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[13][1]++;
      }
      cov_1uuqn9e9on().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[16][0]++, field.validation) &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[16][1]++, value)) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[15][0]++;
        cov_1uuqn9e9on().s[43]++;
        if (
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[18][0]++, field.validation.pattern) &&
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[18][1]++, !field.validation.pattern.test(value.toString()))) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[17][0]++;
          cov_1uuqn9e9on().s[44]++;
          errors[field.id] = 'Invalid format';
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[45]++;
          valid = false;
        } else
        /* istanbul ignore next */
        {
          cov_1uuqn9e9on().b[17][1]++;
        }
        cov_1uuqn9e9on().s[46]++;
        if (
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[20][0]++, field.validation.minLength) &&
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[20][1]++, value.toString().length < field.validation.minLength)) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[19][0]++;
          cov_1uuqn9e9on().s[47]++;
          errors[field.id] = `Minimum length is ${field.validation.minLength}`;
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[48]++;
          valid = false;
        } else
        /* istanbul ignore next */
        {
          cov_1uuqn9e9on().b[19][1]++;
        }
        cov_1uuqn9e9on().s[49]++;
        if (
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[22][0]++, field.validation.maxLength) &&
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[22][1]++, value.toString().length > field.validation.maxLength)) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[21][0]++;
          cov_1uuqn9e9on().s[50]++;
          errors[field.id] = `Maximum length is ${field.validation.maxLength}`;
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[51]++;
          valid = false;
        } else
        /* istanbul ignore next */
        {
          cov_1uuqn9e9on().b[21][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[15][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[52]++;
    return {
      valid,
      errors
    };
  }
  /**
   * Generate submission data
   */
  generateSubmissionData(formId, formData) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[8]++;
    cov_1uuqn9e9on().s[53]++;
    return {
      formId,
      submissionId: `submission_${Date.now()}`,
      timestamp: new Date(),
      data: formData
    };
  }
  /**
   * Export form to PDF
   */
  exportToPDF(formId) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[9]++;
    cov_1uuqn9e9on().s[54]++;
    // Basic implementation - returns empty PDF for now
    return pdf_lib_1.PDFDocument.create().then(doc => {
      /* istanbul ignore next */
      cov_1uuqn9e9on().f[10]++;
      cov_1uuqn9e9on().s[55]++;
      return doc.save();
    });
  }
  /**
   * Auto-arrange fields
   */
  autoArrangeFields(formId, layout) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[11]++;
    const form =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[56]++, this.forms.get(formId));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[57]++;
    if (!form) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[23][0]++;
      cov_1uuqn9e9on().s[58]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[23][1]++;
    }
    const fields =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[59]++, Array.from(form.fields.values()));
    let y =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[60]++, 50);
    const spacing =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[61]++, 40);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[62]++;
    fields.forEach((field, index) => {
      /* istanbul ignore next */
      cov_1uuqn9e9on().f[12]++;
      cov_1uuqn9e9on().s[63]++;
      field.x = 50;
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[64]++;
      field.y = y;
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[65]++;
      y += spacing;
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[66]++;
      form.fields.set(field.id, field);
    });
  }
  generateFormId() {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[13]++;
    cov_1uuqn9e9on().s[67]++;
    return `form_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Add form fields to existing PDF
   */
  async addFormFieldsToPDF(pdfBytes, fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[14]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[68]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
    const form =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[69]++, pdfDoc.getForm());
    const pages =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[70]++, pdfDoc.getPages());
    // Group fields by type for batch processing
    const fieldsByType =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[71]++, this.groupFieldsByType(fields));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[72]++;
    for (const [type, typeFields] of fieldsByType) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[73]++;
      await this.addFieldsOfType(form, pages, type, typeFields);
    }
    // Enable form features
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[74]++;
    pdfDoc.getForm().updateFieldAppearances();
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[75]++;
    return await pdfDoc.save();
  }
  /**
   * Create form from template
   */
  async createFormFromTemplate(templateId, pdfBytes) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[15]++;
    const template =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[76]++, this.templates.get(templateId));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[77]++;
    if (!template) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[24][0]++;
      cov_1uuqn9e9on().s[78]++;
      throw new Error(`Template ${templateId} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[24][1]++;
    }
    let pdfDoc;
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[79]++;
    if (pdfBytes) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[25][0]++;
      cov_1uuqn9e9on().s[80]++;
      pdfDoc = await pdf_lib_1.PDFDocument.load(pdfBytes);
    } else {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[25][1]++;
      cov_1uuqn9e9on().s[81]++;
      // Create new PDF with appropriate size
      pdfDoc = await pdf_lib_1.PDFDocument.create();
      const page =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[82]++, pdfDoc.addPage([612, 792])); // Standard letter size
    }
    const formBytes =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[83]++, await this.addFormFieldsToPDF(await pdfDoc.save(), template.fields));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[84]++;
    return {
      pdfBytes: formBytes,
      template
    };
  }
  /**
   * Extract form data from PDF
   */
  async extractFormData(pdfBytes) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[16]++;
    cov_1uuqn9e9on().s[85]++;
    try {
      const pdfDoc =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[86]++, await pdf_lib_1.PDFDocument.load(pdfBytes));
      const form =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[87]++, pdfDoc.getForm());
      const fields =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[88]++, form.getFields());
      const data =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[89]++, {});
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[90]++;
      for (const field of fields) {
        const fieldName =
        /* istanbul ignore next */
        (cov_1uuqn9e9on().s[91]++, field.getName());
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[92]++;
        if (field instanceof pdf_lib_1.PDFTextField) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[26][0]++;
          cov_1uuqn9e9on().s[93]++;
          data[fieldName] = field.getText();
        } else {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[26][1]++;
          cov_1uuqn9e9on().s[94]++;
          if (field instanceof pdf_lib_1.PDFCheckBox) {
            /* istanbul ignore next */
            cov_1uuqn9e9on().b[27][0]++;
            cov_1uuqn9e9on().s[95]++;
            data[fieldName] = field.isChecked();
          } else {
            /* istanbul ignore next */
            cov_1uuqn9e9on().b[27][1]++;
            cov_1uuqn9e9on().s[96]++;
            if (field instanceof pdf_lib_1.PDFRadioGroup) {
              /* istanbul ignore next */
              cov_1uuqn9e9on().b[28][0]++;
              cov_1uuqn9e9on().s[97]++;
              data[fieldName] = field.getSelected();
            } else {
              /* istanbul ignore next */
              cov_1uuqn9e9on().b[28][1]++;
              cov_1uuqn9e9on().s[98]++;
              if (field instanceof pdf_lib_1.PDFDropdown) {
                /* istanbul ignore next */
                cov_1uuqn9e9on().b[29][0]++;
                cov_1uuqn9e9on().s[99]++;
                data[fieldName] = field.getSelected();
              } else
              /* istanbul ignore next */
              {
                cov_1uuqn9e9on().b[29][1]++;
              }
            }
          }
        }
      }
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[100]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[101]++;
      console.error('Error extracting form data:', error);
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[102]++;
      return {};
    }
  }
  /**
   * Validate form data
   */
  validateFormData(data, fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[17]++;
    const errors =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[103]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[104]++, []);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[105]++;
    for (const field of fields) {
      const value =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[106]++, data[field.name]);
      const validation =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[107]++, field.validation);
      // Required field validation
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[108]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[31][0]++, field.required) &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[31][1]++, this.isEmpty(value))) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[30][0]++;
        cov_1uuqn9e9on().s[109]++;
        errors.push({
          fieldId: field.id,
          fieldName: field.name,
          message: `${field.name} is required`,
          type: 'required'
        });
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[110]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[30][1]++;
      }
      // Skip validation for empty non-required fields
      cov_1uuqn9e9on().s[111]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[33][0]++, this.isEmpty(value)) &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[33][1]++, !field.required)) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[32][0]++;
        cov_1uuqn9e9on().s[112]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[32][1]++;
      }
      // Pattern validation
      cov_1uuqn9e9on().s[113]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[35][0]++, validation?.pattern) &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[35][1]++, !validation.pattern.test(String(value)))) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[34][0]++;
        cov_1uuqn9e9on().s[114]++;
        errors.push({
          fieldId: field.id,
          fieldName: field.name,
          message: `${field.name} format is invalid`,
          type: 'format'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[34][1]++;
      }
      // Length validation
      cov_1uuqn9e9on().s[115]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[37][0]++, validation?.minLength) &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[37][1]++, String(value).length < validation.minLength)) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[36][0]++;
        cov_1uuqn9e9on().s[116]++;
        errors.push({
          fieldId: field.id,
          fieldName: field.name,
          message: `${field.name} must be at least ${validation.minLength} characters`,
          type: 'format'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[36][1]++;
      }
      cov_1uuqn9e9on().s[117]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[39][0]++, validation?.maxLength) &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[39][1]++, String(value).length > validation.maxLength)) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[38][0]++;
        cov_1uuqn9e9on().s[118]++;
        errors.push({
          fieldId: field.id,
          fieldName: field.name,
          message: `${field.name} must be no more than ${validation.maxLength} characters`,
          type: 'format'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[38][1]++;
      }
      // Range validation for numbers
      cov_1uuqn9e9on().s[119]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[41][0]++, field.type === 'number') &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[41][1]++, typeof value === 'number')) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[40][0]++;
        cov_1uuqn9e9on().s[120]++;
        if (
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[43][0]++, validation?.min !== undefined) &&
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[43][1]++, value < validation.min)) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[42][0]++;
          cov_1uuqn9e9on().s[121]++;
          errors.push({
            fieldId: field.id,
            fieldName: field.name,
            message: `${field.name} must be at least ${validation.min}`,
            type: 'range'
          });
        } else
        /* istanbul ignore next */
        {
          cov_1uuqn9e9on().b[42][1]++;
        }
        cov_1uuqn9e9on().s[122]++;
        if (
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[45][0]++, validation?.max !== undefined) &&
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[45][1]++, value > validation.max)) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[44][0]++;
          cov_1uuqn9e9on().s[123]++;
          errors.push({
            fieldId: field.id,
            fieldName: field.name,
            message: `${field.name} must be no more than ${validation.max}`,
            type: 'range'
          });
        } else
        /* istanbul ignore next */
        {
          cov_1uuqn9e9on().b[44][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[40][1]++;
      }
      // Custom validation
      cov_1uuqn9e9on().s[124]++;
      if (validation?.customValidator) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[46][0]++;
        const result =
        /* istanbul ignore next */
        (cov_1uuqn9e9on().s[125]++, validation.customValidator(String(value)));
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[126]++;
        if (!result.valid) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[47][0]++;
          cov_1uuqn9e9on().s[127]++;
          errors.push({
            fieldId: field.id,
            fieldName: field.name,
            message:
            /* istanbul ignore next */
            (cov_1uuqn9e9on().b[48][0]++, result.message) ||
            /* istanbul ignore next */
            (cov_1uuqn9e9on().b[48][1]++, 'Invalid value'),
            type: 'custom'
          });
        } else
        /* istanbul ignore next */
        {
          cov_1uuqn9e9on().b[47][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[46][1]++;
      }
      // Type-specific validation
      cov_1uuqn9e9on().s[128]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[50][0]++, field.type === 'email') &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[50][1]++, !this.isValidEmail(String(value)))) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[49][0]++;
        cov_1uuqn9e9on().s[129]++;
        errors.push({
          fieldId: field.id,
          fieldName: field.name,
          message: 'Please enter a valid email address',
          type: 'format'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[49][1]++;
      }
      cov_1uuqn9e9on().s[130]++;
      if (
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[52][0]++, field.type === 'phone') &&
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[52][1]++, !this.isValidPhone(String(value)))) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[51][0]++;
        cov_1uuqn9e9on().s[131]++;
        warnings.push({
          fieldId: field.id,
          fieldName: field.name,
          message: 'Phone number format may be invalid'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[51][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[132]++;
    return {
      valid: errors.length === 0,
      errors,
      warnings
    };
  }
  /**
   * Calculate field values based on formulas
   */
  calculateFieldValues(data, fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[18]++;
    const calculatedData =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[133]++, {
      ...data
    });
    const fieldsWithCalculations =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[134]++, fields.filter(f => {
      /* istanbul ignore next */
      cov_1uuqn9e9on().f[19]++;
      cov_1uuqn9e9on().s[135]++;
      return f.calculation?.formula;
    }));
    // Sort by dependency order to ensure correct calculation sequence
    const sortedFields =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[136]++, this.sortFieldsByDependencies(fieldsWithCalculations));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[137]++;
    for (const field of sortedFields) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[138]++;
      if (field.calculation?.formula) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[53][0]++;
        cov_1uuqn9e9on().s[139]++;
        try {
          const result =
          /* istanbul ignore next */
          (cov_1uuqn9e9on().s[140]++, this.calculationEngine.evaluate(field.calculation.formula, calculatedData));
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[141]++;
          calculatedData[field.name] = result;
        } catch (error) {
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[142]++;
          console.warn(`Calculation error for field ${field.name}:`, error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[53][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[143]++;
    return calculatedData;
  }
  /**
   * Save form template
   */
  saveTemplate(template) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[20]++;
    cov_1uuqn9e9on().s[144]++;
    template.metadata.modified = new Date();
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[145]++;
    this.templates.set(template.id, template);
  }
  /**
   * Load form template
   */
  getTemplate(templateId) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[21]++;
    cov_1uuqn9e9on().s[146]++;
    return this.templates.get(templateId);
  }
  /**
   * Get all templates by category
   */
  getTemplatesByCategory(category) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[22]++;
    const templates =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[147]++, Array.from(this.templates.values()));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[148]++;
    if (category) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[54][0]++;
      cov_1uuqn9e9on().s[149]++;
      return templates.filter(t => {
        /* istanbul ignore next */
        cov_1uuqn9e9on().f[23]++;
        cov_1uuqn9e9on().s[150]++;
        return t.category === category;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[54][1]++;
    }
    cov_1uuqn9e9on().s[151]++;
    return templates;
  }
  /**
   * Generate form preview
   */
  async generateFormPreview(fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[24]++;
    const pdfDoc =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[152]++, await pdf_lib_1.PDFDocument.create());
    const page =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[153]++, pdfDoc.addPage([612, 792]));
    // Add title
    const font =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[154]++, await pdfDoc.embedFont(pdf_lib_1.StandardFonts.Helvetica));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[155]++;
    page.drawText('Form Preview', {
      x: 50,
      y: 750,
      size: 18,
      font,
      color: (0, pdf_lib_1.rgb)(0, 0, 0)
    });
    // Add form fields with visual representation
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[156]++;
    for (const field of fields) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[157]++;
      await this.drawFieldPreview(page, field, font);
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[158]++;
    return await pdfDoc.save();
  }
  /**
   * Import form fields from FDF/XFDF
   */
  async importFromFDF(fdfData) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[25]++;
    // Parse FDF/XFDF and convert to FormField objects
    // This is a simplified implementation
    const fields =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[159]++, []);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[160]++;
    try {
      // Parse FDF format (simplified)
      const fieldMatches =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[161]++, fdfData.match(/<field name="([^"]+)">[\s\S]*?<value>([^<]+)<\/value>[\s\S]*?<\/field>/g));
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[162]++;
      if (fieldMatches) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[55][0]++;
        let index =
        /* istanbul ignore next */
        (cov_1uuqn9e9on().s[163]++, 0);
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[164]++;
        for (const match of fieldMatches) {
          const nameMatch =
          /* istanbul ignore next */
          (cov_1uuqn9e9on().s[165]++, match.match(/name="([^"]+)"/));
          const valueMatch =
          /* istanbul ignore next */
          (cov_1uuqn9e9on().s[166]++, match.match(/<value>([^<]+)<\/value>/));
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[167]++;
          if (nameMatch) {
            /* istanbul ignore next */
            cov_1uuqn9e9on().b[56][0]++;
            const field =
            /* istanbul ignore next */
            (cov_1uuqn9e9on().s[168]++, this.createField('text', 50, 700 - index * 40, 200, 25, 0, {
              name: nameMatch[1],
              defaultValue: valueMatch ?
              /* istanbul ignore next */
              (cov_1uuqn9e9on().b[57][0]++, valueMatch[1]) :
              /* istanbul ignore next */
              (cov_1uuqn9e9on().b[57][1]++, '')
            }));
            /* istanbul ignore next */
            cov_1uuqn9e9on().s[169]++;
            fields.push(field);
            /* istanbul ignore next */
            cov_1uuqn9e9on().s[170]++;
            index++;
          } else
          /* istanbul ignore next */
          {
            cov_1uuqn9e9on().b[56][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[55][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[171]++;
      console.error('Error importing FDF:', error);
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[172]++;
    return fields;
  }
  /**
   * Export form fields to FDF/XFDF
   */
  exportToFDF(fields, data) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[26]++;
    let fdf =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[173]++, `%FDF-1.2\n`);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[174]++;
    fdf += `1 0 obj\n<<\n/FDF << /Fields [\n`;
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[175]++;
    for (const field of fields) {
      const value =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[176]++,
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[58][0]++, data[field.name]) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[58][1]++, field.defaultValue) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[58][2]++, ''));
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[177]++;
      fdf += `<< /T (${field.name}) /V (${value}) >>\n`;
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[178]++;
    fdf += `] >>\n>>\nendobj\ntrailer\n<<\n/Root 1 0 R\n>>\n%%EOF\n`;
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[179]++;
    return fdf;
  }
  // Private helper methods
  generateFieldId() {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[27]++;
    cov_1uuqn9e9on().s[180]++;
    return `field_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  groupFieldsByType(fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[28]++;
    const groups =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[181]++, new Map());
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[182]++;
    for (const field of fields) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[183]++;
      if (!groups.has(field.type)) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[59][0]++;
        cov_1uuqn9e9on().s[184]++;
        groups.set(field.type, []);
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[59][1]++;
      }
      cov_1uuqn9e9on().s[185]++;
      groups.get(field.type).push(field);
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[186]++;
    return groups;
  }
  async addFieldsOfType(form, pages, type, fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[29]++;
    cov_1uuqn9e9on().s[187]++;
    for (const field of fields) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[188]++;
      if (field.pageIndex >= pages.length) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[60][0]++;
        cov_1uuqn9e9on().s[189]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[60][1]++;
      }
      const page =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[190]++, pages[field.pageIndex]);
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[191]++;
      switch (type) {
        case 'text':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][0]++;
        case 'multiline':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][1]++;
        case 'password':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][2]++;
        case 'number':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][3]++;
        case 'email':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][4]++;
        case 'phone':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][5]++;
        case 'date':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][6]++;
          cov_1uuqn9e9on().s[192]++;
          await this.addTextField(form, page, field);
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[193]++;
          break;
        case 'checkbox':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][7]++;
          cov_1uuqn9e9on().s[194]++;
          await this.addCheckBox(form, page, field);
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[195]++;
          break;
        case 'radio':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][8]++;
          cov_1uuqn9e9on().s[196]++;
          await this.addRadioGroup(form, page, field);
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[197]++;
          break;
        case 'dropdown':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][9]++;
        case 'listbox':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][10]++;
          cov_1uuqn9e9on().s[198]++;
          await this.addDropdown(form, page, field);
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[199]++;
          break;
        case 'button':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][11]++;
          cov_1uuqn9e9on().s[200]++;
          await this.addButton(form, page, field);
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[201]++;
          break;
        case 'signature':
          /* istanbul ignore next */
          cov_1uuqn9e9on().b[61][12]++;
          cov_1uuqn9e9on().s[202]++;
          await this.addSignatureField(form, page, field);
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[203]++;
          break;
      }
    }
  }
  async addTextField(form, page, field) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[30]++;
    const textField =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[204]++, form.createTextField(field.name));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[205]++;
    textField.setText(
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[62][0]++, field.defaultValue) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[62][1]++, ''));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[206]++;
    if (field.maxLength) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[63][0]++;
      cov_1uuqn9e9on().s[207]++;
      textField.setMaxLength(field.maxLength);
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[63][1]++;
    }
    cov_1uuqn9e9on().s[208]++;
    if (
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[65][0]++, field.multiline) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[65][1]++, field.type === 'multiline')) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[64][0]++;
      cov_1uuqn9e9on().s[209]++;
      textField.enableMultiline();
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[64][1]++;
    }
    cov_1uuqn9e9on().s[210]++;
    if (
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[67][0]++, field.password) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[67][1]++, field.type === 'password')) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[66][0]++;
      cov_1uuqn9e9on().s[211]++;
      textField.enablePassword();
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[66][1]++;
    }
    cov_1uuqn9e9on().s[212]++;
    if (field.readOnly) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[68][0]++;
      cov_1uuqn9e9on().s[213]++;
      textField.enableReadOnly();
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[68][1]++;
    }
    cov_1uuqn9e9on().s[214]++;
    textField.addToPage(page, {
      x: field.x,
      y: page.getHeight() - field.y - field.height,
      width: field.width,
      height: field.height,
      borderColor: field.appearance?.borderColor ?
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[69][0]++, (0, pdf_lib_1.rgb)(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b)) :
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[69][1]++, (0, pdf_lib_1.rgb)(0.5, 0.5, 0.5)),
      borderWidth:
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[70][0]++, field.appearance?.borderWidth) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[70][1]++, 1),
      backgroundColor: field.appearance?.backgroundColor ?
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[71][0]++, (0, pdf_lib_1.rgb)(field.appearance.backgroundColor.r, field.appearance.backgroundColor.g, field.appearance.backgroundColor.b)) :
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[71][1]++, (0, pdf_lib_1.rgb)(1, 1, 1))
    });
  }
  async addCheckBox(form, page, field) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[31]++;
    const checkbox =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[215]++, form.createCheckBox(field.name));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[216]++;
    if (
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[73][0]++, field.defaultValue === 'true') ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[73][1]++, field.defaultValue === true)) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[72][0]++;
      cov_1uuqn9e9on().s[217]++;
      checkbox.check();
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[72][1]++;
    }
    cov_1uuqn9e9on().s[218]++;
    if (field.readOnly) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[74][0]++;
      cov_1uuqn9e9on().s[219]++;
      checkbox.enableReadOnly();
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[74][1]++;
    }
    cov_1uuqn9e9on().s[220]++;
    checkbox.addToPage(page, {
      x: field.x,
      y: page.getHeight() - field.y - field.height,
      width: field.width,
      height: field.height,
      borderColor: field.appearance?.borderColor ?
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[75][0]++, (0, pdf_lib_1.rgb)(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b)) :
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[75][1]++, (0, pdf_lib_1.rgb)(0.5, 0.5, 0.5)),
      borderWidth:
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[76][0]++, field.appearance?.borderWidth) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[76][1]++, 1)
    });
  }
  async addRadioGroup(form, page, field) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[32]++;
    const radioGroup =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[221]++, form.createRadioGroup(field.name));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[222]++;
    if (field.options) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[77][0]++;
      let yOffset =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[223]++, 0);
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[224]++;
      for (const option of field.options) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[225]++;
        radioGroup.addOptionToPage(option.value, page, {
          x: field.x,
          y: page.getHeight() - field.y - field.height - yOffset,
          width: 15,
          height: 15
        });
        // Add option label
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[226]++;
        page.drawText(option.label, {
          x: field.x + 20,
          y: page.getHeight() - field.y - field.height - yOffset + 3,
          size:
          /* istanbul ignore next */
          (cov_1uuqn9e9on().b[78][0]++, field.appearance?.fontSize) ||
          /* istanbul ignore next */
          (cov_1uuqn9e9on().b[78][1]++, 12)
        });
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[227]++;
        yOffset += 20;
      }
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[228]++;
      if (field.defaultValue) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[79][0]++;
        cov_1uuqn9e9on().s[229]++;
        radioGroup.select(field.defaultValue);
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[79][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[77][1]++;
    }
    cov_1uuqn9e9on().s[230]++;
    if (field.readOnly) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[80][0]++;
      cov_1uuqn9e9on().s[231]++;
      radioGroup.enableReadOnly();
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[80][1]++;
    }
  }
  async addDropdown(form, page, field) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[33]++;
    const dropdown =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[232]++, form.createDropdown(field.name));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[233]++;
    if (field.options) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[81][0]++;
      cov_1uuqn9e9on().s[234]++;
      dropdown.setOptions(field.options.map(opt => {
        /* istanbul ignore next */
        cov_1uuqn9e9on().f[34]++;
        cov_1uuqn9e9on().s[235]++;
        return opt.value;
      }));
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[236]++;
      if (field.defaultValue) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[82][0]++;
        cov_1uuqn9e9on().s[237]++;
        dropdown.select(field.defaultValue);
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[82][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[81][1]++;
    }
    cov_1uuqn9e9on().s[238]++;
    if (field.readOnly) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[83][0]++;
      cov_1uuqn9e9on().s[239]++;
      dropdown.enableReadOnly();
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[83][1]++;
    }
    cov_1uuqn9e9on().s[240]++;
    dropdown.addToPage(page, {
      x: field.x,
      y: page.getHeight() - field.y - field.height,
      width: field.width,
      height: field.height,
      borderColor: field.appearance?.borderColor ?
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[84][0]++, (0, pdf_lib_1.rgb)(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b)) :
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[84][1]++, (0, pdf_lib_1.rgb)(0.5, 0.5, 0.5)),
      borderWidth:
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[85][0]++, field.appearance?.borderWidth) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[85][1]++, 1),
      backgroundColor: field.appearance?.backgroundColor ?
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[86][0]++, (0, pdf_lib_1.rgb)(field.appearance.backgroundColor.r, field.appearance.backgroundColor.g, field.appearance.backgroundColor.b)) :
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[86][1]++, (0, pdf_lib_1.rgb)(1, 1, 1))
    });
  }
  async addButton(form, page, field) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[35]++;
    const button =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[241]++, form.createButton(field.name));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[242]++;
    button.addToPage(page, {
      x: field.x,
      y: page.getHeight() - field.y - field.height,
      width: field.width,
      height: field.height,
      borderColor: field.appearance?.borderColor ?
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[87][0]++, (0, pdf_lib_1.rgb)(field.appearance.borderColor.r, field.appearance.borderColor.g, field.appearance.borderColor.b)) :
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[87][1]++, (0, pdf_lib_1.rgb)(0.5, 0.5, 0.5)),
      borderWidth:
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[88][0]++, field.appearance?.borderWidth) ||
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[88][1]++, 1),
      backgroundColor: field.appearance?.backgroundColor ?
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[89][0]++, (0, pdf_lib_1.rgb)(field.appearance.backgroundColor.r, field.appearance.backgroundColor.g, field.appearance.backgroundColor.b)) :
      /* istanbul ignore next */
      (cov_1uuqn9e9on().b[89][1]++, (0, pdf_lib_1.rgb)(0.9, 0.9, 0.9))
    });
  }
  async addSignatureField(form, page, field) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[36]++;
    // Signature fields are typically text fields with special appearance
    const sigField =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[243]++, form.createTextField(field.name));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[244]++;
    sigField.addToPage(page, {
      x: field.x,
      y: page.getHeight() - field.y - field.height,
      width: field.width,
      height: field.height,
      borderColor: (0, pdf_lib_1.rgb)(0, 0, 0),
      borderWidth: 2,
      backgroundColor: (0, pdf_lib_1.rgb)(0.98, 0.98, 0.98)
    });
    // Add signature placeholder text
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[245]++;
    page.drawText('Digital Signature', {
      x: field.x + 5,
      y: page.getHeight() - field.y - field.height / 2,
      size: 10,
      color: (0, pdf_lib_1.rgb)(0.5, 0.5, 0.5)
    });
  }
  async drawFieldPreview(page, field, font) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[37]++;
    cov_1uuqn9e9on().s[246]++;
    // Draw field rectangle
    page.drawRectangle({
      x: field.x,
      y: page.getHeight() - field.y - field.height,
      width: field.width,
      height: field.height,
      borderColor: (0, pdf_lib_1.rgb)(0.7, 0.7, 0.7),
      borderWidth: 1,
      color: (0, pdf_lib_1.rgb)(0.95, 0.95, 0.95)
    });
    // Draw field label
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[247]++;
    page.drawText(`${field.name} (${field.type})`, {
      x: field.x,
      y: page.getHeight() - field.y + 5,
      size: 8,
      font,
      color: (0, pdf_lib_1.rgb)(0.3, 0.3, 0.3)
    });
    // Draw required indicator
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[248]++;
    if (field.required) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().b[90][0]++;
      cov_1uuqn9e9on().s[249]++;
      page.drawText('*', {
        x: field.x + field.width - 10,
        y: page.getHeight() - field.y + 5,
        size: 12,
        font,
        color: (0, pdf_lib_1.rgb)(1, 0, 0)
      });
    } else
    /* istanbul ignore next */
    {
      cov_1uuqn9e9on().b[90][1]++;
    }
  }
  isEmpty(value) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[38]++;
    cov_1uuqn9e9on().s[250]++;
    return /* istanbul ignore next */(cov_1uuqn9e9on().b[91][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[91][1]++, value === undefined) ||
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[91][2]++, value === '');
  }
  isValidEmail(email) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[39]++;
    const emailRegex =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[251]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[252]++;
    return emailRegex.test(email);
  }
  isValidPhone(phone) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[40]++;
    const phoneRegex =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[253]++, /^\+?[\d\s\-\(\)]+$/);
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[254]++;
    return /* istanbul ignore next */(cov_1uuqn9e9on().b[92][0]++, phoneRegex.test(phone)) &&
    /* istanbul ignore next */
    (cov_1uuqn9e9on().b[92][1]++, phone.replace(/\D/g, '').length >= 10);
  }
  sortFieldsByDependencies(fields) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[41]++;
    // Simple topological sort for calculation dependencies
    const sorted =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[255]++, []);
    const visited =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[256]++, new Set());
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[257]++;
    const visit = field => {
      /* istanbul ignore next */
      cov_1uuqn9e9on().f[42]++;
      cov_1uuqn9e9on().s[258]++;
      if (visited.has(field.id)) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[93][0]++;
        cov_1uuqn9e9on().s[259]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[93][1]++;
      }
      // Visit dependencies first
      cov_1uuqn9e9on().s[260]++;
      if (field.calculation?.dependencies) {
        /* istanbul ignore next */
        cov_1uuqn9e9on().b[94][0]++;
        cov_1uuqn9e9on().s[261]++;
        for (const depName of field.calculation.dependencies) {
          const depField =
          /* istanbul ignore next */
          (cov_1uuqn9e9on().s[262]++, fields.find(f => {
            /* istanbul ignore next */
            cov_1uuqn9e9on().f[43]++;
            cov_1uuqn9e9on().s[263]++;
            return f.name === depName;
          }));
          /* istanbul ignore next */
          cov_1uuqn9e9on().s[264]++;
          if (
          /* istanbul ignore next */
          (cov_1uuqn9e9on().b[96][0]++, depField) &&
          /* istanbul ignore next */
          (cov_1uuqn9e9on().b[96][1]++, !visited.has(depField.id))) {
            /* istanbul ignore next */
            cov_1uuqn9e9on().b[95][0]++;
            cov_1uuqn9e9on().s[265]++;
            visit(depField);
          } else
          /* istanbul ignore next */
          {
            cov_1uuqn9e9on().b[95][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uuqn9e9on().b[94][1]++;
      }
      cov_1uuqn9e9on().s[266]++;
      visited.add(field.id);
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[267]++;
      sorted.push(field);
    };
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[268]++;
    for (const field of fields) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[269]++;
      visit(field);
    }
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[270]++;
    return sorted;
  }
  initializeBuiltinTemplates() {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[44]++;
    // Initialize some common form templates
    const contactFormTemplate =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[271]++, {
      id: 'contact-form',
      name: 'Contact Form',
      description: 'Basic contact information form',
      category: 'Business',
      fields: [this.createField('text', 50, 100, 200, 25, 0, {
        name: 'firstName',
        required: true
      }), this.createField('text', 300, 100, 200, 25, 0, {
        name: 'lastName',
        required: true
      }), this.createField('email', 50, 140, 450, 25, 0, {
        name: 'email',
        required: true
      }), this.createField('phone', 50, 180, 200, 25, 0, {
        name: 'phone'
      }), this.createField('multiline', 50, 220, 450, 100, 0, {
        name: 'message'
      })],
      metadata: {
        created: new Date(),
        modified: new Date(),
        author: 'System',
        version: '1.0'
      },
      settings: {
        submitFormat: 'PDF',
        highlightRequiredFields: true
      }
    });
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[272]++;
    this.templates.set(contactFormTemplate.id, contactFormTemplate);
    // Add more built-in templates as needed
  }
}
/* istanbul ignore next */
cov_1uuqn9e9on().s[273]++;
exports.AdvancedFormBuilderService = AdvancedFormBuilderService;
/**
 * Simple calculation engine for form field calculations
 */
class CalculationEngine {
  evaluate(formula, data) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[45]++;
    cov_1uuqn9e9on().s[274]++;
    try {
      // Replace field references with actual values
      let expression =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[275]++, formula);
      // Simple variable substitution
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[276]++;
      for (const [key, value] of Object.entries(data)) {
        const regex =
        /* istanbul ignore next */
        (cov_1uuqn9e9on().s[277]++, new RegExp(`\\b${key}\\b`, 'g'));
        /* istanbul ignore next */
        cov_1uuqn9e9on().s[278]++;
        expression = expression.replace(regex, String(
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[97][0]++, value) ||
        /* istanbul ignore next */
        (cov_1uuqn9e9on().b[97][1]++, 0)));
      }
      // Basic mathematical operations (in a real implementation, use a proper expression parser)
      // This is a simplified version for demonstration
      const result =
      /* istanbul ignore next */
      (cov_1uuqn9e9on().s[279]++, this.safeEvaluate(expression));
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[280]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[281]++;
      console.error('Calculation error:', error);
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[282]++;
      return 0;
    }
  }
  safeEvaluate(expression) {
    /* istanbul ignore next */
    cov_1uuqn9e9on().f[46]++;
    // Remove any non-mathematical characters for safety
    const sanitized =
    /* istanbul ignore next */
    (cov_1uuqn9e9on().s[283]++, expression.replace(/[^0-9+\-*/().\s]/g, ''));
    /* istanbul ignore next */
    cov_1uuqn9e9on().s[284]++;
    try {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[285]++;
      // Use Function constructor instead of eval for better safety
      return new Function(`return ${sanitized}`)();
    } catch {
      /* istanbul ignore next */
      cov_1uuqn9e9on().s[286]++;
      return 0;
    }
  }
}
/* istanbul ignore next */
cov_1uuqn9e9on().s[287]++;
exports.default = AdvancedFormBuilderService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,