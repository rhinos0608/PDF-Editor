8dcbd47d47335742c8d728efc4751b13
"use strict";

/* istanbul ignore next */
function cov_1qujngdbya() {
  var path = "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\utils\\ErrorHandler.ts";
  var hash = "90c2eb5f018596595d0aea0b0aef5707bcd6f5ea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\utils\\ErrorHandler.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "3": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 18,
          column: 13
        }
      },
      "4": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "5": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "6": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "7": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "8": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 38
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 37
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 41,
          column: 29
        }
      },
      "14": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 29
        }
      },
      "15": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "17": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "19": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "20": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "21": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 32
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "23": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "25": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 25
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "27": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "28": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 28
        }
      },
      "30": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 25
        }
      },
      "31": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 82,
          column: 28
        }
      },
      "32": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 28
        }
      },
      "33": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 51
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "35": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 30
        }
      },
      "36": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "37": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 26
        }
      },
      "38": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "39": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 25
        }
      },
      "40": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 24
        }
      },
      "41": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 103,
          column: 27
        }
      },
      "42": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 27
        }
      },
      "43": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "44": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 31
        }
      },
      "45": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 41
        }
      },
      "46": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 32
        }
      },
      "47": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "48": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "49": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 37
        }
      },
      "50": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "51": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 69
        }
      },
      "52": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "53": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 109
        }
      },
      "54": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 105
        }
      },
      "55": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 90
        }
      },
      "56": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 89
        }
      },
      "57": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 94
        }
      },
      "58": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 98
        }
      },
      "59": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 93
        }
      },
      "60": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 73
        }
      },
      "61": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "62": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 72
        }
      },
      "63": {
        start: {
          line: 164,
          column: 22
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "64": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 55
        }
      },
      "65": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 55
        }
      },
      "66": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 59
        }
      },
      "67": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 60
        }
      },
      "68": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 21
        }
      },
      "69": {
        start: {
          line: 182,
          column: 27
        },
        end: {
          line: 182,
          column: 59
        }
      },
      "70": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 66
        }
      },
      "71": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 28
        }
      },
      "72": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 76
        }
      },
      "73": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "74": {
        start: {
          line: 186,
          column: 27
        },
        end: {
          line: 186,
          column: 28
        }
      },
      "75": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "76": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 84
        }
      },
      "77": {
        start: {
          line: 189,
          column: 31
        },
        end: {
          line: 189,
          column: 48
        }
      },
      "78": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 192,
          column: 17
        }
      },
      "79": {
        start: {
          line: 191,
          column: 20
        },
        end: {
          line: 191,
          column: 96
        }
      },
      "80": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 49
        }
      },
      "81": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 61
        }
      },
      "82": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 49
        }
      },
      "83": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 97
        }
      },
      "84": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 202,
          column: 17
        }
      },
      "85": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 90
        }
      },
      "86": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 216,
          column: 17
        }
      },
      "87": {
        start: {
          line: 205,
          column: 38
        },
        end: {
          line: 205,
          column: 92
        }
      },
      "88": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 215,
          column: 21
        }
      },
      "89": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 207,
          column: 95
        }
      },
      "90": {
        start: {
          line: 209,
          column: 38
        },
        end: {
          line: 209,
          column: 77
        }
      },
      "91": {
        start: {
          line: 210,
          column: 24
        },
        end: {
          line: 210,
          column: 81
        }
      },
      "92": {
        start: {
          line: 210,
          column: 53
        },
        end: {
          line: 210,
          column: 79
        }
      },
      "93": {
        start: {
          line: 211,
          column: 24
        },
        end: {
          line: 211,
          column: 33
        }
      },
      "94": {
        start: {
          line: 214,
          column: 24
        },
        end: {
          line: 214,
          column: 85
        }
      },
      "95": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 73
        }
      },
      "96": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "97": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "98": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 235,
          column: 18
        }
      },
      "99": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 248,
          column: 18
        }
      },
      "100": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 244,
          column: 25
        }
      },
      "101": {
        start: {
          line: 243,
          column: 28
        },
        end: {
          line: 243,
          column: 40
        }
      },
      "102": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 60
        }
      },
      "103": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 258,
          column: 18
        }
      },
      "104": {
        start: {
          line: 255,
          column: 24
        },
        end: {
          line: 255,
          column: 82
        }
      },
      "105": {
        start: {
          line: 256,
          column: 24
        },
        end: {
          line: 256,
          column: 61
        }
      },
      "106": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 268,
          column: 18
        }
      },
      "107": {
        start: {
          line: 265,
          column: 24
        },
        end: {
          line: 265,
          column: 77
        }
      },
      "108": {
        start: {
          line: 266,
          column: 24
        },
        end: {
          line: 266,
          column: 36
        }
      },
      "109": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 274,
          column: 18
        }
      },
      "110": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 283,
          column: 18
        }
      },
      "111": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 74
        }
      },
      "112": {
        start: {
          line: 281,
          column: 24
        },
        end: {
          line: 281,
          column: 58
        }
      },
      "113": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 288,
          column: 18
        }
      },
      "114": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 294,
          column: 18
        }
      },
      "115": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "116": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 25
        }
      },
      "117": {
        start: {
          line: 304,
          column: 29
        },
        end: {
          line: 304,
          column: 50
        }
      },
      "118": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "119": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 348,
          column: 13
        }
      },
      "120": {
        start: {
          line: 310,
          column: 20
        },
        end: {
          line: 310,
          column: 32
        }
      },
      "121": {
        start: {
          line: 312,
          column: 20
        },
        end: {
          line: 315,
          column: 21
        }
      },
      "122": {
        start: {
          line: 313,
          column: 24
        },
        end: {
          line: 313,
          column: 69
        }
      },
      "123": {
        start: {
          line: 314,
          column: 24
        },
        end: {
          line: 314,
          column: 36
        }
      },
      "124": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 26
        }
      },
      "125": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 321,
          column: 21
        }
      },
      "126": {
        start: {
          line: 319,
          column: 24
        },
        end: {
          line: 319,
          column: 74
        }
      },
      "127": {
        start: {
          line: 320,
          column: 24
        },
        end: {
          line: 320,
          column: 36
        }
      },
      "128": {
        start: {
          line: 322,
          column: 20
        },
        end: {
          line: 322,
          column: 26
        }
      },
      "129": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 327,
          column: 21
        }
      },
      "130": {
        start: {
          line: 325,
          column: 24
        },
        end: {
          line: 325,
          column: 75
        }
      },
      "131": {
        start: {
          line: 326,
          column: 24
        },
        end: {
          line: 326,
          column: 36
        }
      },
      "132": {
        start: {
          line: 328,
          column: 20
        },
        end: {
          line: 328,
          column: 26
        }
      },
      "133": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 334,
          column: 21
        }
      },
      "134": {
        start: {
          line: 331,
          column: 24
        },
        end: {
          line: 331,
          column: 69
        }
      },
      "135": {
        start: {
          line: 333,
          column: 24
        },
        end: {
          line: 333,
          column: 37
        }
      },
      "136": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 26
        }
      },
      "137": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 337,
          column: 68
        }
      },
      "138": {
        start: {
          line: 338,
          column: 20
        },
        end: {
          line: 340,
          column: 21
        }
      },
      "139": {
        start: {
          line: 339,
          column: 24
        },
        end: {
          line: 339,
          column: 49
        }
      },
      "140": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 33
        }
      },
      "141": {
        start: {
          line: 344,
          column: 20
        },
        end: {
          line: 344,
          column: 33
        }
      },
      "142": {
        start: {
          line: 347,
          column: 20
        },
        end: {
          line: 347,
          column: 33
        }
      },
      "143": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 82
        }
      },
      "144": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 25
        }
      },
      "145": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 21
        }
      },
      "146": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 361,
          column: 29
        }
      },
      "147": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 29
        }
      },
      "148": {
        start: {
          line: 362,
          column: 24
        },
        end: {
          line: 362,
          column: 51
        }
      },
      "149": {
        start: {
          line: 363,
          column: 22
        },
        end: {
          line: 363,
          column: 54
        }
      },
      "150": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "151": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 28
        }
      },
      "152": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "153": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 25
        }
      },
      "154": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "155": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 25
        }
      },
      "156": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "157": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 26
        }
      },
      "158": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "159": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 29
        }
      },
      "160": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 395,
          column: 9
        }
      },
      "161": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 32
        }
      },
      "162": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "163": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 30
        }
      },
      "164": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "165": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 25
        }
      },
      "166": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "167": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 25
        }
      },
      "168": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "169": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 28
        }
      },
      "170": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 25
        }
      },
      "171": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 57
        }
      },
      "172": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "173": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "174": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 430,
          column: 60
        }
      },
      "175": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 67
        }
      },
      "176": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 68
        }
      },
      "177": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 451,
          column: 9
        }
      },
      "178": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 97
        }
      },
      "179": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 24
        }
      },
      "180": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 74
        }
      },
      "181": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 25
        }
      },
      "182": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 63
        }
      },
      "183": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "184": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 89
        }
      },
      "185": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 72
        }
      },
      "186": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 24
        }
      },
      "187": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 483,
          column: 11
        }
      },
      "188": {
        start: {
          line: 472,
          column: 27
        },
        end: {
          line: 476,
          column: 14
        }
      },
      "189": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 482,
          column: 13
        }
      },
      "190": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 478,
          column: 39
        }
      },
      "191": {
        start: {
          line: 481,
          column: 16
        },
        end: {
          line: 481,
          column: 37
        }
      },
      "192": {
        start: {
          line: 489,
          column: 25
        },
        end: {
          line: 489,
          column: 52
        }
      },
      "193": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 39
        }
      },
      "194": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 491,
          column: 36
        }
      },
      "195": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 493,
          column: 27
        }
      },
      "196": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 507,
          column: 9
        }
      },
      "197": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 503,
          column: 13
        }
      },
      "198": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 502,
          column: 19
        }
      },
      "199": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 75
        }
      },
      "200": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 508,
          column: 24
        }
      },
      "201": {
        start: {
          line: 514,
          column: 23
        },
        end: {
          line: 532,
          column: 9
        }
      },
      "202": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 47
        }
      },
      "203": {
        start: {
          line: 536,
          column: 0
        },
        end: {
          line: 536,
          column: 36
        }
      },
      "204": {
        start: {
          line: 537,
          column: 0
        },
        end: {
          line: 537,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 34
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 36
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 80
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 38
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 101
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 38
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 121
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 22
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 149
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 45
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 163
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 75
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 181
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 210,
            column: 42
          },
          end: {
            line: 210,
            column: 43
          }
        },
        loc: {
          start: {
            line: 210,
            column: 53
          },
          end: {
            line: 210,
            column: 79
          }
        },
        line: 210
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 44
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 228
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 240,
            column: 41
          },
          end: {
            line: 240,
            column: 42
          }
        },
        loc: {
          start: {
            line: 240,
            column: 53
          },
          end: {
            line: 247,
            column: 21
          }
        },
        line: 240
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 253,
            column: 36
          },
          end: {
            line: 253,
            column: 37
          }
        },
        loc: {
          start: {
            line: 253,
            column: 48
          },
          end: {
            line: 257,
            column: 21
          }
        },
        line: 253
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 263,
            column: 36
          },
          end: {
            line: 263,
            column: 37
          }
        },
        loc: {
          start: {
            line: 263,
            column: 48
          },
          end: {
            line: 267,
            column: 21
          }
        },
        line: 263
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 279,
            column: 42
          },
          end: {
            line: 279,
            column: 43
          }
        },
        loc: {
          start: {
            line: 279,
            column: 54
          },
          end: {
            line: 282,
            column: 21
          }
        },
        line: 279
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 57
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 300
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 36
          },
          end: {
            line: 419,
            column: 5
          }
        },
        line: 359
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        loc: {
          start: {
            line: 424,
            column: 42
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 424
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 42
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 440
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 456,
            column: 5
          }
        },
        loc: {
          start: {
            line: 456,
            column: 40
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 456
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        },
        loc: {
          start: {
            line: 470,
            column: 41
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 470
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 471,
            column: 27
          },
          end: {
            line: 471,
            column: 28
          }
        },
        loc: {
          start: {
            line: 471,
            column: 54
          },
          end: {
            line: 483,
            column: 9
          }
        },
        line: 471
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 47
          },
          end: {
            line: 509,
            column: 5
          }
        },
        line: 488
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 513,
            column: 5
          }
        },
        loc: {
          start: {
            line: 513,
            column: 38
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 513
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 17
          }
        }, {
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 46
          }
        }, {
          start: {
            line: 8,
            column: 50
          },
          end: {
            line: 8,
            column: 63
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 21
          },
          end: {
            line: 27,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 49
          },
          end: {
            line: 27,
            column: 54
          }
        }, {
          start: {
            line: 27,
            column: 57
          },
          end: {
            line: 27,
            column: 84
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 36
          }
        }, {
          start: {
            line: 44,
            column: 40
          },
          end: {
            line: 44,
            column: 64
          }
        }, {
          start: {
            line: 44,
            column: 68
          },
          end: {
            line: 44,
            column: 97
          }
        }, {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 42
          }
        }, {
          start: {
            line: 45,
            column: 46
          },
          end: {
            line: 45,
            column: 72
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 50,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 39
          }
        }, {
          start: {
            line: 49,
            column: 43
          },
          end: {
            line: 49,
            column: 73
          }
        }, {
          start: {
            line: 49,
            column: 77
          },
          end: {
            line: 49,
            column: 104
          }
        }, {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 37
          }
        }, {
          start: {
            line: 50,
            column: 41
          },
          end: {
            line: 50,
            column: 68
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 55,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 42
          }
        }, {
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 54,
            column: 73
          }
        }, {
          start: {
            line: 54,
            column: 77
          },
          end: {
            line: 54,
            column: 105
          }
        }, {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 38
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 60,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 40
          }
        }, {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 72
          }
        }, {
          start: {
            line: 59,
            column: 76
          },
          end: {
            line: 59,
            column: 106
          }
        }, {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 42
          }
        }, {
          start: {
            line: 60,
            column: 46
          },
          end: {
            line: 60,
            column: 75
          }
        }, {
          start: {
            line: 60,
            column: 79
          },
          end: {
            line: 60,
            column: 110
          }
        }],
        line: 59
      },
      "12": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 65,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 35
          }
        }, {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 64,
            column: 67
          }
        }, {
          start: {
            line: 64,
            column: 71
          },
          end: {
            line: 64,
            column: 95
          }
        }, {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 42
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "15": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 35
          }
        }, {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 69,
            column: 68
          }
        }, {
          start: {
            line: 69,
            column: 72
          },
          end: {
            line: 69,
            column: 108
          }
        }],
        line: 69
      },
      "16": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "17": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 74,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 73,
            column: 38
          }
        }, {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 73,
            column: 72
          }
        }, {
          start: {
            line: 73,
            column: 76
          },
          end: {
            line: 73,
            column: 100
          }
        }, {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 45
          }
        }, {
          start: {
            line: 74,
            column: 49
          },
          end: {
            line: 74,
            column: 75
          }
        }],
        line: 73
      },
      "18": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 82,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 82,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "19": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "20": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 86,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 40
          }
        }, {
          start: {
            line: 85,
            column: 44
          },
          end: {
            line: 85,
            column: 69
          }
        }, {
          start: {
            line: 85,
            column: 73
          },
          end: {
            line: 85,
            column: 103
          }
        }, {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 45
          }
        }],
        line: 85
      },
      "21": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "22": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 91,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 38
          }
        }, {
          start: {
            line: 90,
            column: 42
          },
          end: {
            line: 90,
            column: 67
          }
        }, {
          start: {
            line: 90,
            column: 71
          },
          end: {
            line: 90,
            column: 100
          }
        }, {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 37
          }
        }, {
          start: {
            line: 91,
            column: 41
          },
          end: {
            line: 91,
            column: 68
          }
        }],
        line: 90
      },
      "23": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "24": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 39
          }
        }, {
          start: {
            line: 95,
            column: 43
          },
          end: {
            line: 95,
            column: 73
          }
        }, {
          start: {
            line: 95,
            column: 77
          },
          end: {
            line: 95,
            column: 103
          }
        }],
        line: 95
      },
      "25": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 103,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 103,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "26": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 27
          }
        }, {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 23
          }
        }, {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 108,
            column: 31
          }
        }, {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 110,
            column: 41
          }
        }, {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 112,
            column: 32
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 24
          }
        }, {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 30
          }
        }, {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 27
          }
        }, {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 117,
            column: 33
          }
        }],
        line: 104
      },
      "27": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "28": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "29": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 130,
            column: 109
          }
        }, {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 132,
            column: 105
          }
        }, {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 134,
            column: 90
          }
        }, {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 136,
            column: 89
          }
        }, {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 138,
            column: 94
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 140,
            column: 98
          }
        }, {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 142,
            column: 93
          }
        }, {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 143,
            column: 27
          }
        }, {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 145,
            column: 73
          }
        }],
        line: 128
      },
      "30": {
        loc: {
          start: {
            line: 151,
            column: 23
          },
          end: {
            line: 151,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 23
          },
          end: {
            line: 151,
            column: 53
          }
        }, {
          start: {
            line: 151,
            column: 57
          },
          end: {
            line: 151,
            column: 81
          }
        }],
        line: 151
      },
      "31": {
        loc: {
          start: {
            line: 152,
            column: 22
          },
          end: {
            line: 152,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 22
          },
          end: {
            line: 152,
            column: 36
          }
        }, {
          start: {
            line: 152,
            column: 40
          },
          end: {
            line: 152,
            column: 49
          }
        }],
        line: 152
      },
      "32": {
        loc: {
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 153,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 153,
            column: 36
          }
        }, {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 48
          }
        }],
        line: 153
      },
      "33": {
        loc: {
          start: {
            line: 154,
            column: 18
          },
          end: {
            line: 154,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 18
          },
          end: {
            line: 154,
            column: 28
          }
        }, {
          start: {
            line: 154,
            column: 32
          },
          end: {
            line: 154,
            column: 47
          }
        }],
        line: 154
      },
      "34": {
        loc: {
          start: {
            line: 165,
            column: 21
          },
          end: {
            line: 165,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 21
          },
          end: {
            line: 165,
            column: 28
          }
        }, {
          start: {
            line: 165,
            column: 32
          },
          end: {
            line: 165,
            column: 51
          }
        }],
        line: 165
      },
      "35": {
        loc: {
          start: {
            line: 182,
            column: 27
          },
          end: {
            line: 182,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 27
          },
          end: {
            line: 182,
            column: 54
          }
        }, {
          start: {
            line: 182,
            column: 58
          },
          end: {
            line: 182,
            column: 59
          }
        }],
        line: 182
      },
      "36": {
        loc: {
          start: {
            line: 183,
            column: 29
          },
          end: {
            line: 183,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 29
          },
          end: {
            line: 183,
            column: 58
          }
        }, {
          start: {
            line: 183,
            column: 62
          },
          end: {
            line: 183,
            column: 66
          }
        }],
        line: 183
      },
      "37": {
        loc: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 192,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 192,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "38": {
        loc: {
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "39": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "40": {
        loc: {
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 215,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 215,
            column: 21
          }
        }, {
          start: {
            line: 213,
            column: 25
          },
          end: {
            line: 215,
            column: 21
          }
        }],
        line: 206
      },
      "41": {
        loc: {
          start: {
            line: 222,
            column: 19
          },
          end: {
            line: 222,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 19
          },
          end: {
            line: 222,
            column: 28
          }
        }, {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 222,
            column: 123
          }
        }],
        line: 222
      },
      "42": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 235,
            column: 18
          }
        }, {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 248,
            column: 18
          }
        }, {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 258,
            column: 18
          }
        }, {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 268,
            column: 18
          }
        }, {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 274,
            column: 18
          }
        }, {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 283,
            column: 18
          }
        }, {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 288,
            column: 18
          }
        }, {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 294,
            column: 18
          }
        }],
        line: 229
      },
      "43": {
        loc: {
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 244,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 244,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "44": {
        loc: {
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "45": {
        loc: {
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 348,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 307,
            column: 16
          },
          end: {
            line: 307,
            column: 29
          }
        }, {
          start: {
            line: 308,
            column: 16
          },
          end: {
            line: 310,
            column: 32
          }
        }, {
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 316,
            column: 26
          }
        }, {
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 322,
            column: 26
          }
        }, {
          start: {
            line: 323,
            column: 16
          },
          end: {
            line: 328,
            column: 26
          }
        }, {
          start: {
            line: 329,
            column: 16
          },
          end: {
            line: 335,
            column: 26
          }
        }, {
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 341,
            column: 33
          }
        }, {
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 344,
            column: 33
          }
        }, {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 28
          }
        }, {
          start: {
            line: 346,
            column: 16
          },
          end: {
            line: 347,
            column: 33
          }
        }],
        line: 306
      },
      "46": {
        loc: {
          start: {
            line: 312,
            column: 20
          },
          end: {
            line: 315,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 20
          },
          end: {
            line: 315,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "47": {
        loc: {
          start: {
            line: 318,
            column: 20
          },
          end: {
            line: 321,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 20
          },
          end: {
            line: 321,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "48": {
        loc: {
          start: {
            line: 324,
            column: 20
          },
          end: {
            line: 327,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 20
          },
          end: {
            line: 327,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "49": {
        loc: {
          start: {
            line: 330,
            column: 20
          },
          end: {
            line: 334,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 20
          },
          end: {
            line: 334,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "50": {
        loc: {
          start: {
            line: 338,
            column: 20
          },
          end: {
            line: 340,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 20
          },
          end: {
            line: 340,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "51": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 361,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 361,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "52": {
        loc: {
          start: {
            line: 363,
            column: 22
          },
          end: {
            line: 363,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 22
          },
          end: {
            line: 363,
            column: 48
          }
        }, {
          start: {
            line: 363,
            column: 52
          },
          end: {
            line: 363,
            column: 54
          }
        }],
        line: 363
      },
      "53": {
        loc: {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "54": {
        loc: {
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 366,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 365,
            column: 38
          }
        }, {
          start: {
            line: 365,
            column: 42
          },
          end: {
            line: 365,
            column: 64
          }
        }, {
          start: {
            line: 365,
            column: 68
          },
          end: {
            line: 365,
            column: 96
          }
        }, {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 366,
            column: 40
          }
        }],
        line: 365
      },
      "55": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "56": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 371,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 35
          }
        }, {
          start: {
            line: 370,
            column: 39
          },
          end: {
            line: 370,
            column: 65
          }
        }, {
          start: {
            line: 370,
            column: 69
          },
          end: {
            line: 370,
            column: 93
          }
        }, {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 371,
            column: 41
          }
        }, {
          start: {
            line: 371,
            column: 45
          },
          end: {
            line: 371,
            column: 76
          }
        }],
        line: 370
      },
      "57": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "58": {
        loc: {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 376,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 375,
            column: 35
          }
        }, {
          start: {
            line: 375,
            column: 39
          },
          end: {
            line: 375,
            column: 64
          }
        }, {
          start: {
            line: 375,
            column: 68
          },
          end: {
            line: 375,
            column: 94
          }
        }, {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 376,
            column: 53
          }
        }, {
          start: {
            line: 376,
            column: 57
          },
          end: {
            line: 376,
            column: 85
          }
        }],
        line: 375
      },
      "59": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "60": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 382,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 380,
            column: 36
          }
        }, {
          start: {
            line: 380,
            column: 40
          },
          end: {
            line: 380,
            column: 64
          }
        }, {
          start: {
            line: 380,
            column: 68
          },
          end: {
            line: 380,
            column: 97
          }
        }, {
          start: {
            line: 381,
            column: 12
          },
          end: {
            line: 381,
            column: 42
          }
        }, {
          start: {
            line: 381,
            column: 46
          },
          end: {
            line: 381,
            column: 72
          }
        }, {
          start: {
            line: 381,
            column: 76
          },
          end: {
            line: 381,
            column: 102
          }
        }, {
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 382,
            column: 38
          }
        }, {
          start: {
            line: 382,
            column: 42
          },
          end: {
            line: 382,
            column: 68
          }
        }],
        line: 380
      },
      "61": {
        loc: {
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "62": {
        loc: {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 388,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 386,
            column: 39
          }
        }, {
          start: {
            line: 386,
            column: 43
          },
          end: {
            line: 386,
            column: 73
          }
        }, {
          start: {
            line: 386,
            column: 77
          },
          end: {
            line: 386,
            column: 104
          }
        }, {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 387,
            column: 37
          }
        }, {
          start: {
            line: 387,
            column: 41
          },
          end: {
            line: 387,
            column: 68
          }
        }, {
          start: {
            line: 387,
            column: 72
          },
          end: {
            line: 387,
            column: 96
          }
        }, {
          start: {
            line: 388,
            column: 12
          },
          end: {
            line: 388,
            column: 37
          }
        }],
        line: 386
      },
      "63": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 395,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 395,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "64": {
        loc: {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 393,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 42
          }
        }, {
          start: {
            line: 392,
            column: 46
          },
          end: {
            line: 392,
            column: 73
          }
        }, {
          start: {
            line: 392,
            column: 77
          },
          end: {
            line: 392,
            column: 105
          }
        }, {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 393,
            column: 38
          }
        }, {
          start: {
            line: 393,
            column: 42
          },
          end: {
            line: 393,
            column: 67
          }
        }, {
          start: {
            line: 393,
            column: 71
          },
          end: {
            line: 393,
            column: 97
          }
        }],
        line: 392
      },
      "65": {
        loc: {
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "66": {
        loc: {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 399,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 397,
            column: 40
          }
        }, {
          start: {
            line: 397,
            column: 44
          },
          end: {
            line: 397,
            column: 72
          }
        }, {
          start: {
            line: 397,
            column: 76
          },
          end: {
            line: 397,
            column: 106
          }
        }, {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 42
          }
        }, {
          start: {
            line: 398,
            column: 46
          },
          end: {
            line: 398,
            column: 75
          }
        }, {
          start: {
            line: 398,
            column: 79
          },
          end: {
            line: 398,
            column: 110
          }
        }, {
          start: {
            line: 399,
            column: 12
          },
          end: {
            line: 399,
            column: 38
          }
        }, {
          start: {
            line: 399,
            column: 42
          },
          end: {
            line: 399,
            column: 66
          }
        }],
        line: 397
      },
      "67": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "68": {
        loc: {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 404,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 403,
            column: 35
          }
        }, {
          start: {
            line: 403,
            column: 39
          },
          end: {
            line: 403,
            column: 67
          }
        }, {
          start: {
            line: 403,
            column: 71
          },
          end: {
            line: 403,
            column: 95
          }
        }, {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 404,
            column: 42
          }
        }, {
          start: {
            line: 404,
            column: 46
          },
          end: {
            line: 404,
            column: 71
          }
        }, {
          start: {
            line: 404,
            column: 75
          },
          end: {
            line: 404,
            column: 102
          }
        }],
        line: 403
      },
      "69": {
        loc: {
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "70": {
        loc: {
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 409,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 408,
            column: 35
          }
        }, {
          start: {
            line: 408,
            column: 39
          },
          end: {
            line: 408,
            column: 68
          }
        }, {
          start: {
            line: 408,
            column: 72
          },
          end: {
            line: 408,
            column: 108
          }
        }, {
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 409,
            column: 38
          }
        }, {
          start: {
            line: 409,
            column: 42
          },
          end: {
            line: 409,
            column: 69
          }
        }],
        line: 408
      },
      "71": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "72": {
        loc: {
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 415,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 413,
            column: 38
          }
        }, {
          start: {
            line: 413,
            column: 42
          },
          end: {
            line: 413,
            column: 72
          }
        }, {
          start: {
            line: 413,
            column: 76
          },
          end: {
            line: 413,
            column: 100
          }
        }, {
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 414,
            column: 45
          }
        }, {
          start: {
            line: 414,
            column: 49
          },
          end: {
            line: 414,
            column: 75
          }
        }, {
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 415,
            column: 50
          }
        }, {
          start: {
            line: 415,
            column: 54
          },
          end: {
            line: 415,
            column: 84
          }
        }],
        line: 413
      },
      "73": {
        loc: {
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "74": {
        loc: {
          start: {
            line: 472,
            column: 65
          },
          end: {
            line: 472,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 65
          },
          end: {
            line: 472,
            column: 81
          }
        }, {
          start: {
            line: 472,
            column: 85
          },
          end: {
            line: 472,
            column: 96
          }
        }],
        line: 472
      },
      "75": {
        loc: {
          start: {
            line: 474,
            column: 28
          },
          end: {
            line: 474,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 474,
            column: 28
          },
          end: {
            line: 474,
            column: 47
          }
        }, {
          start: {
            line: 474,
            column: 51
          },
          end: {
            line: 474,
            column: 52
          }
        }],
        line: 474
      },
      "76": {
        loc: {
          start: {
            line: 475,
            column: 30
          },
          end: {
            line: 475,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 30
          },
          end: {
            line: 475,
            column: 51
          }
        }, {
          start: {
            line: 475,
            column: 55
          },
          end: {
            line: 475,
            column: 59
          }
        }],
        line: 475
      },
      "77": {
        loc: {
          start: {
            line: 477,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 477,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        }, {
          start: {
            line: 480,
            column: 17
          },
          end: {
            line: 482,
            column: 13
          }
        }],
        line: 477
      },
      "78": {
        loc: {
          start: {
            line: 496,
            column: 12
          },
          end: {
            line: 503,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 12
          },
          end: {
            line: 503,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "79": {
        loc: {
          start: {
            line: 515,
            column: 23
          },
          end: {
            line: 515,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 23
          },
          end: {
            line: 515,
            column: 53
          }
        }, {
          start: {
            line: 515,
            column: 57
          },
          end: {
            line: 515,
            column: 81
          }
        }],
        line: 515
      },
      "80": {
        loc: {
          start: {
            line: 516,
            column: 22
          },
          end: {
            line: 516,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 22
          },
          end: {
            line: 516,
            column: 36
          }
        }, {
          start: {
            line: 516,
            column: 40
          },
          end: {
            line: 516,
            column: 49
          }
        }],
        line: 516
      },
      "81": {
        loc: {
          start: {
            line: 517,
            column: 22
          },
          end: {
            line: 517,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 517,
            column: 22
          },
          end: {
            line: 517,
            column: 36
          }
        }, {
          start: {
            line: 517,
            column: 40
          },
          end: {
            line: 517,
            column: 48
          }
        }],
        line: 517
      },
      "82": {
        loc: {
          start: {
            line: 521,
            column: 26
          },
          end: {
            line: 521,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 26
          },
          end: {
            line: 521,
            column: 44
          }
        }, {
          start: {
            line: 521,
            column: 48
          },
          end: {
            line: 521,
            column: 49
          }
        }],
        line: 521
      },
      "83": {
        loc: {
          start: {
            line: 523,
            column: 30
          },
          end: {
            line: 523,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 30
          },
          end: {
            line: 523,
            column: 61
          }
        }, {
          start: {
            line: 523,
            column: 65
          },
          end: {
            line: 523,
            column: 71
          }
        }],
        line: 523
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0, 0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0, 0, 0, 0, 0, 0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0, 0, 0],
      "55": [0, 0],
      "56": [0, 0, 0, 0, 0],
      "57": [0, 0],
      "58": [0, 0, 0, 0, 0],
      "59": [0, 0],
      "60": [0, 0, 0, 0, 0, 0, 0, 0],
      "61": [0, 0],
      "62": [0, 0, 0, 0, 0, 0, 0],
      "63": [0, 0],
      "64": [0, 0, 0, 0, 0, 0],
      "65": [0, 0],
      "66": [0, 0, 0, 0, 0, 0, 0, 0],
      "67": [0, 0],
      "68": [0, 0, 0, 0, 0, 0],
      "69": [0, 0],
      "70": [0, 0, 0, 0, 0],
      "71": [0, 0],
      "72": [0, 0, 0, 0, 0, 0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\utils\\ErrorHandler.ts",
      mappings: ";;;AA2DA,4BAA4B;AAC5B,MAAa,YAAY;IACvB,MAAM,CAAC,MAAM,CAAC,KAAU,EAAE,OAAgB;QACxC,yCAAyC;QACzC,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;YACxD,MAAM,QAAQ,GAAqB;gBACjC,GAAG,KAAK;gBACR,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC9B,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,OAAO;gBACP,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC;YAEF,yDAAyD;YACzD,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACrD,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACrD,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;YAEzD,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,0CAA0C;QAC1C,MAAM,QAAQ,GAAqB;YACjC,OAAO,EAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,2BAA2B;YACxE,IAAI,EAAE,cAAc;YACpB,OAAO;YACP,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC;QAEF,eAAe;QACf,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC9B,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,QAAQ,CAAC,UAAU,GAAG,OAAO,CAAC;QAE9B,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,kDAAkD;IAC1C,MAAM,CAAC,iBAAiB,CAAC,KAAuB;QACtD,IAAI,CAAC,KAAK,CAAC,OAAO;YAAE,OAAO,SAAS,CAAC;QAErC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAE5C,sBAAsB;QACtB,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;YACrF,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjE,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,yBAAyB;QACzB,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC5F,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;YAC7D,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,oBAAoB;QACpB,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC7F,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC/B,OAAO,YAAY,CAAC;QACtB,CAAC;QAED,kBAAkB;QAClB,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC9F,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;YACvG,OAAO,UAAU,CAAC;QACpB,CAAC;QAED,wBAAwB;QACxB,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnF,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YACnC,OAAO,KAAK,CAAC;QACf,CAAC;QAED,aAAa;QACb,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;YACrG,OAAO,KAAK,CAAC;QACf,CAAC;QAED,gBAAgB;QAChB,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;YACxF,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YACpE,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,kDAAkD;IAC1C,MAAM,CAAC,iBAAiB,CAAC,KAAuB;QACtD,IAAI,CAAC,KAAK,CAAC,OAAO;YAAE,OAAO,QAAQ,CAAC;QAEpC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAE5C,kBAAkB;QAClB,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC3F,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC;YACtC,OAAO,UAAU,CAAC;QACpB,CAAC;QAED,uBAAuB;QACvB,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;YACxF,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;YAC7D,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,sBAAsB;QACtB,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAChG,OAAO,KAAK,CAAC;QACf,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,2DAA2D;IACnD,MAAM,CAAC,mBAAmB,CAAC,KAAuB;QACxD,IAAI,CAAC,KAAK,CAAC,QAAQ;YAAE,OAAO,OAAO,CAAC;QAEpC,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;YACvB,KAAK,SAAS,CAAC;YACf,KAAK,KAAK,CAAC;YACX,KAAK,KAAK;gBACR,OAAO,OAAO,CAAC;YAEjB,KAAK,UAAU;gBACb,OAAO,iBAAiB,CAAC;YAE3B,KAAK,QAAQ;gBACX,OAAO,QAAQ,CAAC;YAElB,KAAK,MAAM,CAAC;YACZ,KAAK,YAAY,CAAC;YAClB,KAAK,SAAS,CAAC;YACf;gBACE,OAAO,SAAS,CAAC;QACrB,CAAC;IACH,CAAC;IAED,wDAAwD;IACxD,MAAM,CAAC,mBAAmB,CAAC,KAAuB;QAChD,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC;YACtB,OAAO,KAAK,CAAC,WAAW,CAAC;QAC3B,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YACpB,OAAO,iDAAiD,CAAC;QAC3D,CAAC;QAED,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;YACvB,KAAK,MAAM;gBACT,OAAO,qFAAqF,CAAC;YAE/F,KAAK,SAAS;gBACZ,OAAO,iFAAiF,CAAC;YAE3F,KAAK,YAAY;gBACf,OAAO,kEAAkE,CAAC;YAE5E,KAAK,UAAU;gBACb,OAAO,iEAAiE,CAAC;YAE3E,KAAK,KAAK;gBACR,OAAO,sEAAsE,CAAC;YAEhF,KAAK,KAAK;gBACR,OAAO,0EAA0E,CAAC;YAEpF,KAAK,QAAQ;gBACX,OAAO,qEAAqE,CAAC;YAE/E,KAAK,SAAS,CAAC;YACf;gBACE,OAAO,iDAAiD,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,mCAAmC;IACnC,MAAM,CAAC,GAAG,CAAC,KAAuB;QAChC,MAAM,QAAQ,GAAG;YACf,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACrE,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,SAAS;YACrC,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,QAAQ;YACpC,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,eAAe;YACnC,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ;SACzB,CAAC;QAEF,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,yBAAyB;IACzB,MAAM,CAAC,QAAQ,CACb,IAAY,EACZ,OAAgB,EAChB,QAA8B;QAE9B,MAAM,KAAK,GAAqB;YAC9B,OAAO,EAAE,OAAO,IAAI,mBAAmB;YACvC,IAAI;YACJ,QAAQ;YACR,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC;QAEF,0CAA0C;QAC1C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC/C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC/C,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACnD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAEpD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,gEAAgE;IAEhE;;OAEG;IACH,MAAM,CAAC,KAAK,CAAC,eAAe,CAC1B,SAA2B,EAC3B,YAAoB,EACpB,eAA0C;QAE1C,MAAM,UAAU,GAAG,eAAe,EAAE,UAAU,IAAI,CAAC,CAAC;QACpD,MAAM,YAAY,GAAG,eAAe,EAAE,YAAY,IAAI,IAAI,CAAC;QAC3D,IAAI,SAAS,GAA4B,IAAI,CAAC;QAE9C,OAAO,CAAC,GAAG,CAAC,wCAAwC,YAAY,EAAE,CAAC,CAAC;QAEpE,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,UAAU,EAAE,OAAO,EAAE,EAAE,CAAC;YACvD,IAAI,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,cAAc,OAAO,IAAI,UAAU,KAAK,YAAY,EAAE,CAAC,CAAC;gBAEpE,MAAM,MAAM,GAAG,MAAM,SAAS,EAAE,CAAC;gBAEjC,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;oBAChB,OAAO,CAAC,GAAG,CAAC,oCAAoC,OAAO,KAAK,YAAY,EAAE,CAAC,CAAC;gBAC9E,CAAC;gBAED,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;YAEnC,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAc,EAAE,YAAY,CAAC,CAAC;gBACtD,SAAS,CAAC,YAAY,GAAG,OAAO,CAAC;gBAEjC,OAAO,CAAC,KAAK,CAAC,aAAa,OAAO,YAAY,YAAY,EAAE,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;gBAEjF,8BAA8B;gBAC9B,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;oBAC/B,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;gBACxE,CAAC;gBAED,+CAA+C;gBAC/C,IAAI,OAAO,GAAG,UAAU,EAAE,CAAC;oBACzB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBAEzE,IAAI,SAAS,EAAE,CAAC;wBACd,OAAO,CAAC,GAAG,CAAC,2CAA2C,YAAY,EAAE,CAAC,CAAC;wBAEvE,4BAA4B;wBAC5B,MAAM,KAAK,GAAG,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;wBACtD,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;wBAEzD,SAAS;oBACX,CAAC;yBAAM,CAAC;wBACN,OAAO,CAAC,IAAI,CAAC,gCAAgC,YAAY,EAAE,CAAC,CAAC;oBAC/D,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,mCAAmC,YAAY,EAAE,CAAC,CAAC;QACjE,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,8BAA8B,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;SAChH,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,yBAAyB,CAAC,KAAuB;QAC9D,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;YACvB,KAAK,SAAS;gBACZ,OAAO;oBACL,QAAQ,EAAE,oBAAoB;oBAC9B,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,IAAI;iBACnB,CAAC;YAEJ,KAAK,QAAQ;gBACX,OAAO;oBACL,QAAQ,EAAE,eAAe;oBACzB,UAAU,EAAE,CAAC;oBACb,mBAAmB,EAAE,KAAK,IAAI,EAAE;wBAC9B,wCAAwC;wBACxC,IAAI,MAAM,CAAC,EAAE,EAAE,CAAC;4BACd,MAAM,CAAC,EAAE,EAAE,CAAC;wBACd,CAAC;wBACD,eAAe;wBACf,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBACtC,CAAC;iBACF,CAAC;YAEJ,KAAK,KAAK;gBACR,OAAO;oBACL,QAAQ,EAAE,iBAAiB;oBAC3B,UAAU,EAAE,CAAC;oBACb,cAAc,EAAE,KAAK,IAAI,EAAE;wBACzB,2BAA2B;wBAC3B,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;wBAC1D,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBACvC,CAAC;iBACF,CAAC;YAEJ,KAAK,MAAM;gBACT,OAAO;oBACL,QAAQ,EAAE,UAAU;oBACpB,UAAU,EAAE,CAAC;oBACb,cAAc,EAAE,KAAK,IAAI,EAAE;wBACzB,qCAAqC;wBACrC,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;wBACrD,OAAO,IAAI,CAAC;oBACd,CAAC;iBACF,CAAC;YAEJ,KAAK,KAAK;gBACR,OAAO;oBACL,QAAQ,EAAE,oBAAoB;oBAC9B,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,IAAI;iBACnB,CAAC;YAEJ,KAAK,KAAK;gBACR,OAAO;oBACL,QAAQ,EAAE,iBAAiB;oBAC3B,UAAU,EAAE,CAAC;oBACb,oBAAoB,EAAE,KAAK,IAAI,EAAE;wBAC/B,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;wBAClD,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBACpC,CAAC;iBACF,CAAC;YAEJ,KAAK,QAAQ;gBACX,OAAO;oBACL,QAAQ,EAAE,YAAY;oBACtB,UAAU,EAAE,CAAC;iBACd,CAAC;YAEJ;gBACE,OAAO;oBACL,QAAQ,EAAE,OAAO;oBACjB,UAAU,EAAE,CAAC;oBACb,YAAY,EAAE,IAAI;iBACnB,CAAC;QACN,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAC1C,KAAuB,EACvB,OAAe;QAEf,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;YAC3B,OAAO,KAAK,CAAC;QACf,CAAC;QAED,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,eAAe,CAAC;QAE3C,IAAI,CAAC;YACH,QAAQ,QAAQ,EAAE,CAAC;gBACjB,KAAK,OAAO,CAAC;gBACb,KAAK,oBAAoB;oBACvB,wCAAwC;oBACxC,OAAO,IAAI,CAAC;gBAEd,KAAK,UAAU;oBACb,IAAI,KAAK,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;wBACzC,MAAM,KAAK,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;wBAC7C,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,MAAM;gBAER,KAAK,eAAe;oBAClB,IAAI,KAAK,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;wBAC9C,MAAM,KAAK,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;wBAClD,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,MAAM;gBAER,KAAK,iBAAiB;oBACpB,IAAI,KAAK,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;wBAC/C,MAAM,KAAK,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;wBACnD,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,MAAM;gBAER,KAAK,iBAAiB;oBACpB,IAAI,KAAK,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;wBACzC,MAAM,KAAK,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;wBAC7C,sCAAsC;wBACtC,OAAO,KAAK,CAAC;oBACf,CAAC;oBACD,MAAM;gBAER,KAAK,YAAY;oBACf,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;oBAChD,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACpB,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;oBAC3B,CAAC;oBACD,OAAO,KAAK,CAAC;gBAEf,KAAK,aAAa;oBAChB,yCAAyC;oBACzC,OAAO,KAAK,CAAC;gBAEf,KAAK,MAAM,CAAC;gBACZ;oBACE,OAAO,KAAK,CAAC;YACjB,CAAC;QACH,CAAC;QAAC,OAAO,aAAa,EAAE,CAAC;YACvB,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,aAAa,CAAC,CAAC;YACtE,OAAO,KAAK,CAAC;QACf,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,iBAAiB,CAAC,KAAuB;QACtD,IAAI,CAAC,KAAK,CAAC,OAAO;YAAE,OAAO,SAAS,CAAC;QAErC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAC5C,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;QAE/C,sBAAsB;QACtB,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;YACpF,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YACjC,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,2BAA2B;QAC3B,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;YACjF,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC;YACrE,OAAO,KAAK,CAAC;QACf,CAAC;QAED,qBAAqB;QACrB,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAClF,OAAO,CAAC,QAAQ,CAAC,uBAAuB,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YAC9E,OAAO,KAAK,CAAC;QACf,CAAC;QAED,sBAAsB;QACtB,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;YACrF,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC1F,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7D,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,yBAAyB;QACzB,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC5F,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;YACpF,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAC9B,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,oBAAoB;QACpB,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC7F,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC1F,OAAO,YAAY,CAAC;QACtB,CAAC;QAED,kBAAkB;QAClB,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC9F,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC;YAClG,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3D,OAAO,UAAU,CAAC;QACpB,CAAC;QAED,wBAAwB;QACxB,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnF,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;YAC/F,OAAO,KAAK,CAAC;QACf,CAAC;QAED,aAAa;QACb,IAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YAChG,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;YAC9D,OAAO,KAAK,CAAC;QACf,CAAC;QAED,gBAAgB;QAChB,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;YACxF,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC/D,OAAO,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YAC7E,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,oDAAoD;IAEpD;;OAEG;IACK,MAAM,CAAC,KAAK,CAAC,sBAAsB;QACzC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAEjD,IAAI,CAAC;YACH,wBAAwB;YACxB,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;gBAClC,wCAAwC;gBACxC,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,KAAK,CAAC,sBAAsB;QACzC,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAE5D,IAAI,CAAC;YACH,mDAAmD;YACnD,+BAA+B;YAC/B,OAAO,CAAC,GAAG,CAAC,uEAAuE,CAAC,CAAC;YACrF,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;YAC9D,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED;;OAEG;IACK,MAAM,CAAC,KAAK,CAAC,oBAAoB;QACvC,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QAEvD,IAAI,CAAC;YACH,iFAAiF;YACjF,OAAO,CAAC,GAAG,CAAC,+DAA+D,CAAC,CAAC;QAC/E,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,SAAS,CACd,SAA2B,EAC3B,OAIC;QAED,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,SAAS,EACT,OAAO,EAAE,OAAO,IAAI,WAAW,EAC/B;gBACE,QAAQ,EAAE,oBAAoB;gBAC9B,UAAU,EAAE,OAAO,EAAE,UAAU,IAAI,CAAC;gBACpC,YAAY,EAAE,OAAO,EAAE,YAAY,IAAI,IAAI;aAC5C,CACF,CAAC;YAEF,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACnB,OAAO,CAAC,MAAM,CAAC,MAAO,CAAC,CAAC;YAC1B,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,mBAAmB,CAAC,KAAU,EAAE,OAAgB;QACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAC7C,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC/B,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;QAE5B,iCAAiC;QACjC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEnB,kCAAkC;QAClC,IAAI,CAAC;YACH,IAAI,MAAM,CAAC,WAAW,EAAE,mBAAmB,EAAE,CAAC;gBAC5C,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC;oBACrC,OAAO,EAAE,QAAQ,CAAC,OAAO;oBACzB,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACrB,OAAO,EAAE,QAAQ,CAAC,OAAO;oBACzB,SAAS,EAAE,QAAQ,CAAC,SAAS;iBAC9B,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAAC,OAAO,WAAW,EAAE,CAAC;YACrB,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,WAAW,CAAC,CAAC;QACjE,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,mBAAmB,CAAC,KAAuB;QAChD,MAAM,MAAM,GAAG;YACb,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACrE,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,SAAS;YACrC,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,QAAQ;YACpC,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,YAAY,EAAE,KAAK,CAAC,YAAY,IAAI,CAAC;YACrC,UAAU,EAAE,KAAK,CAAC,UAAU,KAAK,KAAK;YACtC,gBAAgB,EAAE,KAAK,CAAC,eAAe,EAAE,QAAQ,IAAI,MAAM;YAC3D,UAAU,EAAE;gBACV,SAAS,EAAE,SAAS,CAAC,SAAS;gBAC9B,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,GAAG,KAAK,CAAC,UAAU;aACpB;YACD,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ;SACzB,CAAC;QAEF,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC;CACF;AAnoBD,oCAmoBC;AAED,kBAAe,YAAY,CAAC",
      names: [],
      sources: ["C:\\Users\\Admin\\Documents\\RST\\PDF Editor\\src\\renderer\\utils\\ErrorHandler.ts"],
      sourcesContent: ["import { AppError } from '../services/LoggerService';\n\n// Define error categories\nexport type ErrorCategory = \n  | 'file'\n  | 'network'\n  | 'validation'\n  | 'security'\n  | 'pdf'\n  | 'ocr'\n  | 'memory'\n  | 'system'\n  | 'ipc'\n  | 'gpu'\n  | 'unknown';\n\n// Define error severity levels\nexport type ErrorSeverity = 'low' | 'medium' | 'high' | 'critical';\n\n// Define recovery strategies\nexport type RecoveryStrategy = \n  | 'retry'\n  | 'retry-with-backoff'\n  | 'fallback'\n  | 'recover-state'\n  | 'restart-service'\n  | 'disable-feature'\n  | 'reload-app'\n  | 'user-action'\n  | 'none';\n\n// Recovery context interface\nexport interface RecoveryContext {\n  strategy: RecoveryStrategy;\n  maxRetries?: number;\n  backoffDelay?: number;\n  fallbackAction?: () => Promise<any>;\n  stateRecoveryAction?: () => Promise<void>;\n  serviceRestartAction?: () => Promise<void>;\n}\n\n// Extended error interface with more context\nexport interface ExtendedAppError extends AppError {\n  category?: ErrorCategory;\n  severity?: ErrorSeverity;\n  userAction?: 'retry' | 'dismiss' | 'contact-support' | 'reload';\n  context?: string;\n  timestamp?: Date;\n  recoveryContext?: RecoveryContext;\n  attemptCount?: number;\n  canRecover?: boolean;\n  originalError?: Error;\n  systemInfo?: {\n    platform?: string;\n    memoryUsage?: number;\n    gpuEnabled?: boolean;\n  };\n}\n\n// Centralized error handler\nexport class ErrorHandler {\n  static handle(error: any, context?: string): ExtendedAppError {\n    // If it's already an AppError, extend it\n    if (error && typeof error === 'object' && error.message) {\n      const appError: ExtendedAppError = {\n        ...error,\n        message: error.message,\n        stack: error.stack,\n        code: error.code,\n        userMessage: error.userMessage,\n        metadata: error.metadata,\n        context,\n        timestamp: new Date()\n      };\n      \n      // Determine category and severity based on error details\n      appError.category = this.determineCategory(appError);\n      appError.severity = this.determineSeverity(appError);\n      appError.userAction = this.determineUserAction(appError);\n      \n      return appError;\n    }\n    \n    // Create new error from string or unknown\n    const appError: ExtendedAppError = {\n      message: typeof error === 'string' ? error : 'An unknown error occurred',\n      name: 'UnknownError',\n      context,\n      timestamp: new Date()\n    };\n    \n    // Set defaults\n    appError.category = 'unknown';\n    appError.severity = 'medium';\n    appError.userAction = 'retry';\n    \n    return appError;\n  }\n  \n  // Determine error category based on error details\n  private static determineCategory(error: ExtendedAppError): ErrorCategory {\n    if (!error.message) return 'unknown';\n    \n    const message = error.message.toLowerCase();\n    \n    // File-related errors\n    if (message.includes('file') || message.includes('path') || message.includes('directory') || \n        message.includes('permission') || message.includes('access')) {\n      return 'file';\n    }\n    \n    // Network-related errors\n    if (message.includes('network') || message.includes('connection') || message.includes('timeout') ||\n        message.includes('fetch') || message.includes('request')) {\n      return 'network';\n    }\n    \n    // Validation errors\n    if (message.includes('validation') || message.includes('invalid') || message.includes('required') ||\n        message.includes('format')) {\n      return 'validation';\n    }\n    \n    // Security errors\n    if (message.includes('security') || message.includes('password') || message.includes('encryption') ||\n        message.includes('decryption') || message.includes('signature') || message.includes('certificate')) {\n      return 'security';\n    }\n    \n    // PDF processing errors\n    if (message.includes('pdf') || message.includes('document') || message.includes('page') ||\n        message.includes('annotation')) {\n      return 'pdf';\n    }\n    \n    // OCR errors\n    if (message.includes('ocr') || message.includes('tesseract') || message.includes('text recognition')) {\n      return 'ocr';\n    }\n    \n    // Memory errors\n    if (message.includes('memory') || message.includes('allocation') || message.includes('heap') ||\n        message.includes('out of memory') || message.includes('buffer')) {\n      return 'memory';\n    }\n    \n    return 'unknown';\n  }\n  \n  // Determine error severity based on error details\n  private static determineSeverity(error: ExtendedAppError): ErrorSeverity {\n    if (!error.message) return 'medium';\n    \n    const message = error.message.toLowerCase();\n    \n    // Critical errors\n    if (message.includes('critical') || message.includes('fatal') || message.includes('corruption') ||\n        message.includes('unrecoverable')) {\n      return 'critical';\n    }\n    \n    // High severity errors\n    if (message.includes('failed') || message.includes('error') || message.includes('exception') ||\n        message.includes('crash') || message.includes('timeout')) {\n      return 'high';\n    }\n    \n    // Low severity errors\n    if (message.includes('warning') || message.includes('deprecated') || message.includes('notice')) {\n      return 'low';\n    }\n    \n    return 'medium';\n  }\n  \n  // Determine recommended user action based on error details\n  private static determineUserAction(error: ExtendedAppError): 'retry' | 'dismiss' | 'contact-support' | 'reload' {\n    if (!error.category) return 'retry';\n    \n    switch (error.category) {\n      case 'network':\n      case 'pdf':\n      case 'ocr':\n        return 'retry';\n        \n      case 'security':\n        return 'contact-support';\n        \n      case 'memory':\n        return 'reload';\n        \n      case 'file':\n      case 'validation':\n      case 'unknown':\n      default:\n        return 'dismiss';\n    }\n  }\n  \n  // Generate user-friendly message based on error details\n  static generateUserMessage(error: ExtendedAppError): string {\n    if (error.userMessage) {\n      return error.userMessage;\n    }\n    \n    if (!error.category) {\n      return 'An unexpected error occurred. Please try again.';\n    }\n    \n    switch (error.category) {\n      case 'file':\n        return 'There was a problem accessing the file. Please check the file path and permissions.';\n        \n      case 'network':\n        return 'Network connection failed. Please check your internet connection and try again.';\n        \n      case 'validation':\n        return 'Invalid input detected. Please check your entries and try again.';\n        \n      case 'security':\n        return 'Security error occurred. Please contact support for assistance.';\n        \n      case 'pdf':\n        return 'PDF processing failed. Please try again or use a different PDF file.';\n        \n      case 'ocr':\n        return 'Text recognition failed. Please try again or check the document quality.';\n        \n      case 'memory':\n        return 'Insufficient memory. Please close other applications and try again.';\n        \n      case 'unknown':\n      default:\n        return 'An unexpected error occurred. Please try again.';\n    }\n  }\n  \n  // Log error with structured format\n  static log(error: ExtendedAppError): void {\n    const logEntry = {\n      timestamp: error.timestamp?.toISOString() || new Date().toISOString(),\n      category: error.category || 'unknown',\n      severity: error.severity || 'medium',\n      code: error.code || 'UNKNOWN_ERROR',\n      message: error.message,\n      context: error.context,\n      stack: error.stack,\n      metadata: error.metadata\n    };\n    \n    console.error('[APP ERROR]', JSON.stringify(logEntry, null, 2));\n  }\n  \n  // Create error from code\n  static fromCode(\n    code: string,\n    message?: string,\n    metadata?: Record<string, any>\n  ): ExtendedAppError {\n    const error: ExtendedAppError = {\n      message: message || 'An error occurred',\n      code,\n      metadata,\n      timestamp: new Date()\n    };\n    \n    // Set category and severity based on code\n    error.category = this.determineCategory(error);\n    error.severity = this.determineSeverity(error);\n    error.userAction = this.determineUserAction(error);\n    error.userMessage = this.generateUserMessage(error);\n    \n    return error;\n  }\n\n  // ============ COMPREHENSIVE ERROR RECOVERY SYSTEM ============\n\n  /**\n   * Enhanced error recovery with multiple strategies\n   */\n  static async attemptRecovery<T>(\n    operation: () => Promise<T>,\n    errorContext: string,\n    recoveryOptions?: Partial<RecoveryContext>\n  ): Promise<{ success: boolean; result?: T; error?: ExtendedAppError }> {\n    const maxRetries = recoveryOptions?.maxRetries || 3;\n    const backoffDelay = recoveryOptions?.backoffDelay || 1000;\n    let lastError: ExtendedAppError | null = null;\n\n    console.log(`\uD83D\uDD04 Starting operation with recovery: ${errorContext}`);\n\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        console.log(`\uD83D\uDD04 Attempt ${attempt}/${maxRetries}: ${errorContext}`);\n        \n        const result = await operation();\n        \n        if (attempt > 1) {\n          console.log(`\u2705 Recovery successful on attempt ${attempt}: ${errorContext}`);\n        }\n        \n        return { success: true, result };\n\n      } catch (error) {\n        lastError = this.handle(error as Error, errorContext);\n        lastError.attemptCount = attempt;\n        \n        console.error(`\u274C Attempt ${attempt} failed: ${errorContext}`, lastError.message);\n        \n        // Determine recovery strategy\n        if (!lastError.recoveryContext) {\n          lastError.recoveryContext = this.determineRecoveryStrategy(lastError);\n        }\n\n        // If this isn't the last attempt, try recovery\n        if (attempt < maxRetries) {\n          const recovered = await this.executeRecoveryStrategy(lastError, attempt);\n          \n          if (recovered) {\n            console.log(`\uD83D\uDD04 Recovery strategy applied, retrying: ${errorContext}`);\n            \n            // Apply exponential backoff\n            const delay = backoffDelay * Math.pow(2, attempt - 1);\n            await new Promise(resolve => setTimeout(resolve, delay));\n            \n            continue;\n          } else {\n            console.warn(`\u26A0\uFE0F Recovery strategy failed: ${errorContext}`);\n          }\n        }\n      }\n    }\n\n    console.error(`\u274C All recovery attempts failed: ${errorContext}`);\n    return { \n      success: false, \n      error: lastError || this.fromCode('RECOVERY_FAILED', 'All recovery attempts failed', { context: errorContext })\n    };\n  }\n\n  /**\n   * Determine the best recovery strategy for an error\n   */\n  private static determineRecoveryStrategy(error: ExtendedAppError): RecoveryContext {\n    switch (error.category) {\n      case 'network':\n        return {\n          strategy: 'retry-with-backoff',\n          maxRetries: 5,\n          backoffDelay: 2000\n        };\n\n      case 'memory':\n        return {\n          strategy: 'recover-state',\n          maxRetries: 2,\n          stateRecoveryAction: async () => {\n            // Force garbage collection if available\n            if (global.gc) {\n              global.gc();\n            }\n            // Clear caches\n            await this.clearApplicationCaches();\n          }\n        };\n\n      case 'gpu':\n        return {\n          strategy: 'disable-feature',\n          maxRetries: 1,\n          fallbackAction: async () => {\n            // Disable GPU acceleration\n            console.log('\uD83D\uDD27 Disabling GPU acceleration due to error');\n            return this.disableGPUAcceleration();\n          }\n        };\n\n      case 'file':\n        return {\n          strategy: 'fallback',\n          maxRetries: 2,\n          fallbackAction: async () => {\n            // Try alternative file access method\n            console.log('\uD83D\uDD27 Attempting alternative file access');\n            return true;\n          }\n        };\n\n      case 'pdf':\n        return {\n          strategy: 'retry-with-backoff',\n          maxRetries: 3,\n          backoffDelay: 1000\n        };\n\n      case 'ipc':\n        return {\n          strategy: 'restart-service',\n          maxRetries: 2,\n          serviceRestartAction: async () => {\n            console.log('\uD83D\uDD27 Attempting IPC service recovery');\n            await this.restartIPCConnection();\n          }\n        };\n\n      case 'system':\n        return {\n          strategy: 'reload-app',\n          maxRetries: 1\n        };\n\n      default:\n        return {\n          strategy: 'retry',\n          maxRetries: 2,\n          backoffDelay: 1000\n        };\n    }\n  }\n\n  /**\n   * Execute the recovery strategy\n   */\n  private static async executeRecoveryStrategy(\n    error: ExtendedAppError, \n    attempt: number\n  ): Promise<boolean> {\n    if (!error.recoveryContext) {\n      return false;\n    }\n\n    const { strategy } = error.recoveryContext;\n\n    try {\n      switch (strategy) {\n        case 'retry':\n        case 'retry-with-backoff':\n          // Just return true to continue retrying\n          return true;\n\n        case 'fallback':\n          if (error.recoveryContext.fallbackAction) {\n            await error.recoveryContext.fallbackAction();\n            return true;\n          }\n          break;\n\n        case 'recover-state':\n          if (error.recoveryContext.stateRecoveryAction) {\n            await error.recoveryContext.stateRecoveryAction();\n            return true;\n          }\n          break;\n\n        case 'restart-service':\n          if (error.recoveryContext.serviceRestartAction) {\n            await error.recoveryContext.serviceRestartAction();\n            return true;\n          }\n          break;\n\n        case 'disable-feature':\n          if (error.recoveryContext.fallbackAction) {\n            await error.recoveryContext.fallbackAction();\n            // Don't retry after disabling feature\n            return false;\n          }\n          break;\n\n        case 'reload-app':\n          console.log('\uD83D\uDD04 Requesting application reload');\n          if (window.location) {\n            window.location.reload();\n          }\n          return false;\n\n        case 'user-action':\n          // User action required, don't auto-retry\n          return false;\n\n        case 'none':\n        default:\n          return false;\n      }\n    } catch (recoveryError) {\n      console.error('\u274C Recovery strategy execution failed:', recoveryError);\n      return false;\n    }\n\n    return false;\n  }\n\n  /**\n   * Enhanced error categorization with more specific detection\n   */\n  private static determineCategory(error: ExtendedAppError): ErrorCategory {\n    if (!error.message) return 'unknown';\n    \n    const message = error.message.toLowerCase();\n    const stack = error.stack?.toLowerCase() || '';\n    \n    // System-level errors\n    if (message.includes('system') || message.includes('os') || message.includes('platform') ||\n        message.includes('electron')) {\n      return 'system';\n    }\n    \n    // IPC communication errors\n    if (message.includes('ipc') || message.includes('invoke') || message.includes('send') ||\n        stack.includes('ipcrenderer') || stack.includes('contextbridge')) {\n      return 'ipc';\n    }\n    \n    // GPU-related errors\n    if (message.includes('gpu') || message.includes('webgl') || message.includes('canvas') ||\n        message.includes('hardware acceleration') || message.includes('graphics')) {\n      return 'gpu';\n    }\n\n    // File-related errors\n    if (message.includes('file') || message.includes('path') || message.includes('directory') || \n        message.includes('permission') || message.includes('access') || message.includes('enoent') ||\n        message.includes('eisdir') || message.includes('eacces')) {\n      return 'file';\n    }\n    \n    // Network-related errors\n    if (message.includes('network') || message.includes('connection') || message.includes('timeout') ||\n        message.includes('fetch') || message.includes('request') || message.includes('cors') ||\n        message.includes('net::')) {\n      return 'network';\n    }\n    \n    // Validation errors\n    if (message.includes('validation') || message.includes('invalid') || message.includes('required') ||\n        message.includes('format') || message.includes('parse') || message.includes('syntax')) {\n      return 'validation';\n    }\n    \n    // Security errors\n    if (message.includes('security') || message.includes('password') || message.includes('encryption') ||\n        message.includes('decryption') || message.includes('signature') || message.includes('certificate') ||\n        message.includes('crypto') || message.includes('auth')) {\n      return 'security';\n    }\n    \n    // PDF processing errors\n    if (message.includes('pdf') || message.includes('document') || message.includes('page') ||\n        message.includes('annotation') || message.includes('pdfjs') || message.includes('pdf-lib')) {\n      return 'pdf';\n    }\n    \n    // OCR errors\n    if (message.includes('ocr') || message.includes('tesseract') || message.includes('text recognition') ||\n        message.includes('worker') || stack.includes('tesseract')) {\n      return 'ocr';\n    }\n    \n    // Memory errors\n    if (message.includes('memory') || message.includes('allocation') || message.includes('heap') ||\n        message.includes('out of memory') || message.includes('buffer') || \n        message.includes('maximum call stack') || message.includes('rangeerror')) {\n      return 'memory';\n    }\n    \n    return 'unknown';\n  }\n\n  // ============ RECOVERY HELPER METHODS ============\n\n  /**\n   * Clear application caches to free memory\n   */\n  private static async clearApplicationCaches(): Promise<void> {\n    console.log('\uD83E\uDDF9 Clearing application caches...');\n    \n    try {\n      // Clear any cached data\n      if (typeof window !== 'undefined') {\n        // Clear any application-specific caches\n        console.log('\u2705 Application caches cleared');\n      }\n    } catch (error) {\n      console.warn('\u26A0\uFE0F Failed to clear some caches:', error);\n    }\n  }\n\n  /**\n   * Disable GPU acceleration\n   */\n  private static async disableGPUAcceleration(): Promise<boolean> {\n    console.log('\uD83D\uDD27 Attempting to disable GPU acceleration...');\n    \n    try {\n      // This would typically require IPC to main process\n      // For now, just log the intent\n      console.log('\u26A0\uFE0F GPU acceleration disable requested - requires main process support');\n      return true;\n    } catch (error) {\n      console.error('\u274C Failed to disable GPU acceleration:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Restart IPC connection\n   */\n  private static async restartIPCConnection(): Promise<void> {\n    console.log('\uD83D\uDD04 Attempting IPC connection restart...');\n    \n    try {\n      // This is a placeholder - actual implementation would depend on IPC architecture\n      console.log('\u26A0\uFE0F IPC restart requested - requires main process coordination');\n    } catch (error) {\n      console.error('\u274C Failed to restart IPC connection:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create a retry wrapper for operations\n   */\n  static withRetry<T>(\n    operation: () => Promise<T>,\n    options?: {\n      maxRetries?: number;\n      backoffDelay?: number;\n      context?: string;\n    }\n  ): Promise<T> {\n    return new Promise(async (resolve, reject) => {\n      const result = await this.attemptRecovery(\n        operation,\n        options?.context || 'operation',\n        {\n          strategy: 'retry-with-backoff',\n          maxRetries: options?.maxRetries || 3,\n          backoffDelay: options?.backoffDelay || 1000\n        }\n      );\n\n      if (result.success) {\n        resolve(result.result!);\n      } else {\n        reject(result.error);\n      }\n    });\n  }\n\n  /**\n   * Handle critical errors that might require app restart\n   */\n  static handleCriticalError(error: any, context?: string): ExtendedAppError {\n    const appError = this.handle(error, context);\n    appError.severity = 'critical';\n    appError.canRecover = false;\n    \n    // Log critical error immediately\n    this.log(appError);\n    \n    // Notify main process if possible\n    try {\n      if (window.electronAPI?.reportCriticalError) {\n        window.electronAPI.reportCriticalError({\n          message: appError.message,\n          stack: appError.stack,\n          context: appError.context,\n          timestamp: appError.timestamp\n        });\n      }\n    } catch (reportError) {\n      console.error('Failed to report critical error:', reportError);\n    }\n    \n    return appError;\n  }\n\n  /**\n   * Generate comprehensive error report\n   */\n  static generateErrorReport(error: ExtendedAppError): string {\n    const report = {\n      timestamp: error.timestamp?.toISOString() || new Date().toISOString(),\n      category: error.category || 'unknown',\n      severity: error.severity || 'medium',\n      message: error.message,\n      code: error.code,\n      context: error.context,\n      attemptCount: error.attemptCount || 0,\n      canRecover: error.canRecover !== false,\n      recoveryStrategy: error.recoveryContext?.strategy || 'none',\n      systemInfo: {\n        userAgent: navigator.userAgent,\n        platform: navigator.platform,\n        language: navigator.language,\n        ...error.systemInfo\n      },\n      stack: error.stack,\n      metadata: error.metadata\n    };\n    \n    return JSON.stringify(report, null, 2);\n  }\n}\n\nexport default ErrorHandler;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "90c2eb5f018596595d0aea0b0aef5707bcd6f5ea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qujngdbya = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qujngdbya();
cov_1qujngdbya().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1qujngdbya().s[1]++;
exports.ErrorHandler = void 0;
// Centralized error handler
class ErrorHandler {
  static handle(error, context) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[0]++;
    cov_1qujngdbya().s[2]++;
    // If it's already an AppError, extend it
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[1][0]++, error) &&
    /* istanbul ignore next */
    (cov_1qujngdbya().b[1][1]++, typeof error === 'object') &&
    /* istanbul ignore next */
    (cov_1qujngdbya().b[1][2]++, error.message)) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[0][0]++;
      const appError =
      /* istanbul ignore next */
      (cov_1qujngdbya().s[3]++, {
        ...error,
        message: error.message,
        stack: error.stack,
        code: error.code,
        userMessage: error.userMessage,
        metadata: error.metadata,
        context,
        timestamp: new Date()
      });
      // Determine category and severity based on error details
      /* istanbul ignore next */
      cov_1qujngdbya().s[4]++;
      appError.category = this.determineCategory(appError);
      /* istanbul ignore next */
      cov_1qujngdbya().s[5]++;
      appError.severity = this.determineSeverity(appError);
      /* istanbul ignore next */
      cov_1qujngdbya().s[6]++;
      appError.userAction = this.determineUserAction(appError);
      /* istanbul ignore next */
      cov_1qujngdbya().s[7]++;
      return appError;
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[0][1]++;
    }
    // Create new error from string or unknown
    const appError =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[8]++, {
      message: typeof error === 'string' ?
      /* istanbul ignore next */
      (cov_1qujngdbya().b[2][0]++, error) :
      /* istanbul ignore next */
      (cov_1qujngdbya().b[2][1]++, 'An unknown error occurred'),
      name: 'UnknownError',
      context,
      timestamp: new Date()
    });
    // Set defaults
    /* istanbul ignore next */
    cov_1qujngdbya().s[9]++;
    appError.category = 'unknown';
    /* istanbul ignore next */
    cov_1qujngdbya().s[10]++;
    appError.severity = 'medium';
    /* istanbul ignore next */
    cov_1qujngdbya().s[11]++;
    appError.userAction = 'retry';
    /* istanbul ignore next */
    cov_1qujngdbya().s[12]++;
    return appError;
  }
  // Determine error category based on error details
  static determineCategory(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[1]++;
    cov_1qujngdbya().s[13]++;
    if (!error.message) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[3][0]++;
      cov_1qujngdbya().s[14]++;
      return 'unknown';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[3][1]++;
    }
    const message =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[15]++, error.message.toLowerCase());
    // File-related errors
    /* istanbul ignore next */
    cov_1qujngdbya().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[5][0]++, message.includes('file')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[5][1]++, message.includes('path')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[5][2]++, message.includes('directory')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[5][3]++, message.includes('permission')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[5][4]++, message.includes('access'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[4][0]++;
      cov_1qujngdbya().s[17]++;
      return 'file';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[4][1]++;
    }
    // Network-related errors
    cov_1qujngdbya().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[7][0]++, message.includes('network')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[7][1]++, message.includes('connection')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[7][2]++, message.includes('timeout')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[7][3]++, message.includes('fetch')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[7][4]++, message.includes('request'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[6][0]++;
      cov_1qujngdbya().s[19]++;
      return 'network';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[6][1]++;
    }
    // Validation errors
    cov_1qujngdbya().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[9][0]++, message.includes('validation')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[9][1]++, message.includes('invalid')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[9][2]++, message.includes('required')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[9][3]++, message.includes('format'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[8][0]++;
      cov_1qujngdbya().s[21]++;
      return 'validation';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[8][1]++;
    }
    // Security errors
    cov_1qujngdbya().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[11][0]++, message.includes('security')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[11][1]++, message.includes('password')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[11][2]++, message.includes('encryption')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[11][3]++, message.includes('decryption')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[11][4]++, message.includes('signature')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[11][5]++, message.includes('certificate'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[10][0]++;
      cov_1qujngdbya().s[23]++;
      return 'security';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[10][1]++;
    }
    // PDF processing errors
    cov_1qujngdbya().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[13][0]++, message.includes('pdf')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[13][1]++, message.includes('document')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[13][2]++, message.includes('page')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[13][3]++, message.includes('annotation'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[12][0]++;
      cov_1qujngdbya().s[25]++;
      return 'pdf';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[12][1]++;
    }
    // OCR errors
    cov_1qujngdbya().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[15][0]++, message.includes('ocr')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[15][1]++, message.includes('tesseract')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[15][2]++, message.includes('text recognition'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[14][0]++;
      cov_1qujngdbya().s[27]++;
      return 'ocr';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[14][1]++;
    }
    // Memory errors
    cov_1qujngdbya().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[17][0]++, message.includes('memory')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[17][1]++, message.includes('allocation')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[17][2]++, message.includes('heap')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[17][3]++, message.includes('out of memory')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[17][4]++, message.includes('buffer'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[16][0]++;
      cov_1qujngdbya().s[29]++;
      return 'memory';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[16][1]++;
    }
    cov_1qujngdbya().s[30]++;
    return 'unknown';
  }
  // Determine error severity based on error details
  static determineSeverity(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[2]++;
    cov_1qujngdbya().s[31]++;
    if (!error.message) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[18][0]++;
      cov_1qujngdbya().s[32]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[18][1]++;
    }
    const message =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[33]++, error.message.toLowerCase());
    // Critical errors
    /* istanbul ignore next */
    cov_1qujngdbya().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[20][0]++, message.includes('critical')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[20][1]++, message.includes('fatal')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[20][2]++, message.includes('corruption')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[20][3]++, message.includes('unrecoverable'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[19][0]++;
      cov_1qujngdbya().s[35]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[19][1]++;
    }
    // High severity errors
    cov_1qujngdbya().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[22][0]++, message.includes('failed')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[22][1]++, message.includes('error')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[22][2]++, message.includes('exception')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[22][3]++, message.includes('crash')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[22][4]++, message.includes('timeout'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[21][0]++;
      cov_1qujngdbya().s[37]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[21][1]++;
    }
    // Low severity errors
    cov_1qujngdbya().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[24][0]++, message.includes('warning')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[24][1]++, message.includes('deprecated')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[24][2]++, message.includes('notice'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[23][0]++;
      cov_1qujngdbya().s[39]++;
      return 'low';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[23][1]++;
    }
    cov_1qujngdbya().s[40]++;
    return 'medium';
  }
  // Determine recommended user action based on error details
  static determineUserAction(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[3]++;
    cov_1qujngdbya().s[41]++;
    if (!error.category) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[25][0]++;
      cov_1qujngdbya().s[42]++;
      return 'retry';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[25][1]++;
    }
    cov_1qujngdbya().s[43]++;
    switch (error.category) {
      case 'network':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][0]++;
      case 'pdf':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][1]++;
      case 'ocr':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][2]++;
        cov_1qujngdbya().s[44]++;
        return 'retry';
      case 'security':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][3]++;
        cov_1qujngdbya().s[45]++;
        return 'contact-support';
      case 'memory':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][4]++;
        cov_1qujngdbya().s[46]++;
        return 'reload';
      case 'file':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][5]++;
      case 'validation':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][6]++;
      case 'unknown':
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][7]++;
      default:
        /* istanbul ignore next */
        cov_1qujngdbya().b[26][8]++;
        cov_1qujngdbya().s[47]++;
        return 'dismiss';
    }
  }
  // Generate user-friendly message based on error details
  static generateUserMessage(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[4]++;
    cov_1qujngdbya().s[48]++;
    if (error.userMessage) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[27][0]++;
      cov_1qujngdbya().s[49]++;
      return error.userMessage;
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[27][1]++;
    }
    cov_1qujngdbya().s[50]++;
    if (!error.category) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[28][0]++;
      cov_1qujngdbya().s[51]++;
      return 'An unexpected error occurred. Please try again.';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[28][1]++;
    }
    cov_1qujngdbya().s[52]++;
    switch (error.category) {
      case 'file':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][0]++;
        cov_1qujngdbya().s[53]++;
        return 'There was a problem accessing the file. Please check the file path and permissions.';
      case 'network':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][1]++;
        cov_1qujngdbya().s[54]++;
        return 'Network connection failed. Please check your internet connection and try again.';
      case 'validation':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][2]++;
        cov_1qujngdbya().s[55]++;
        return 'Invalid input detected. Please check your entries and try again.';
      case 'security':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][3]++;
        cov_1qujngdbya().s[56]++;
        return 'Security error occurred. Please contact support for assistance.';
      case 'pdf':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][4]++;
        cov_1qujngdbya().s[57]++;
        return 'PDF processing failed. Please try again or use a different PDF file.';
      case 'ocr':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][5]++;
        cov_1qujngdbya().s[58]++;
        return 'Text recognition failed. Please try again or check the document quality.';
      case 'memory':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][6]++;
        cov_1qujngdbya().s[59]++;
        return 'Insufficient memory. Please close other applications and try again.';
      case 'unknown':
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][7]++;
      default:
        /* istanbul ignore next */
        cov_1qujngdbya().b[29][8]++;
        cov_1qujngdbya().s[60]++;
        return 'An unexpected error occurred. Please try again.';
    }
  }
  // Log error with structured format
  static log(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[5]++;
    const logEntry =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[61]++, {
      timestamp:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[30][0]++, error.timestamp?.toISOString()) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[30][1]++, new Date().toISOString()),
      category:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[31][0]++, error.category) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[31][1]++, 'unknown'),
      severity:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[32][0]++, error.severity) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[32][1]++, 'medium'),
      code:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[33][0]++, error.code) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[33][1]++, 'UNKNOWN_ERROR'),
      message: error.message,
      context: error.context,
      stack: error.stack,
      metadata: error.metadata
    });
    /* istanbul ignore next */
    cov_1qujngdbya().s[62]++;
    console.error('[APP ERROR]', JSON.stringify(logEntry, null, 2));
  }
  // Create error from code
  static fromCode(code, message, metadata) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[6]++;
    const error =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[63]++, {
      message:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[34][0]++, message) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[34][1]++, 'An error occurred'),
      code,
      metadata,
      timestamp: new Date()
    });
    // Set category and severity based on code
    /* istanbul ignore next */
    cov_1qujngdbya().s[64]++;
    error.category = this.determineCategory(error);
    /* istanbul ignore next */
    cov_1qujngdbya().s[65]++;
    error.severity = this.determineSeverity(error);
    /* istanbul ignore next */
    cov_1qujngdbya().s[66]++;
    error.userAction = this.determineUserAction(error);
    /* istanbul ignore next */
    cov_1qujngdbya().s[67]++;
    error.userMessage = this.generateUserMessage(error);
    /* istanbul ignore next */
    cov_1qujngdbya().s[68]++;
    return error;
  }
  // ============ COMPREHENSIVE ERROR RECOVERY SYSTEM ============
  /**
   * Enhanced error recovery with multiple strategies
   */
  static async attemptRecovery(operation, errorContext, recoveryOptions) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[7]++;
    const maxRetries =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[69]++,
    /* istanbul ignore next */
    (cov_1qujngdbya().b[35][0]++, recoveryOptions?.maxRetries) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[35][1]++, 3));
    const backoffDelay =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[70]++,
    /* istanbul ignore next */
    (cov_1qujngdbya().b[36][0]++, recoveryOptions?.backoffDelay) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[36][1]++, 1000));
    let lastError =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[71]++, null);
    /* istanbul ignore next */
    cov_1qujngdbya().s[72]++;
    console.log(`🔄 Starting operation with recovery: ${errorContext}`);
    /* istanbul ignore next */
    cov_1qujngdbya().s[73]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[74]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_1qujngdbya().s[75]++;
      try {
        /* istanbul ignore next */
        cov_1qujngdbya().s[76]++;
        console.log(`🔄 Attempt ${attempt}/${maxRetries}: ${errorContext}`);
        const result =
        /* istanbul ignore next */
        (cov_1qujngdbya().s[77]++, await operation());
        /* istanbul ignore next */
        cov_1qujngdbya().s[78]++;
        if (attempt > 1) {
          /* istanbul ignore next */
          cov_1qujngdbya().b[37][0]++;
          cov_1qujngdbya().s[79]++;
          console.log(`✅ Recovery successful on attempt ${attempt}: ${errorContext}`);
        } else
        /* istanbul ignore next */
        {
          cov_1qujngdbya().b[37][1]++;
        }
        cov_1qujngdbya().s[80]++;
        return {
          success: true,
          result
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1qujngdbya().s[81]++;
        lastError = this.handle(error, errorContext);
        /* istanbul ignore next */
        cov_1qujngdbya().s[82]++;
        lastError.attemptCount = attempt;
        /* istanbul ignore next */
        cov_1qujngdbya().s[83]++;
        console.error(`❌ Attempt ${attempt} failed: ${errorContext}`, lastError.message);
        // Determine recovery strategy
        /* istanbul ignore next */
        cov_1qujngdbya().s[84]++;
        if (!lastError.recoveryContext) {
          /* istanbul ignore next */
          cov_1qujngdbya().b[38][0]++;
          cov_1qujngdbya().s[85]++;
          lastError.recoveryContext = this.determineRecoveryStrategy(lastError);
        } else
        /* istanbul ignore next */
        {
          cov_1qujngdbya().b[38][1]++;
        }
        // If this isn't the last attempt, try recovery
        cov_1qujngdbya().s[86]++;
        if (attempt < maxRetries) {
          /* istanbul ignore next */
          cov_1qujngdbya().b[39][0]++;
          const recovered =
          /* istanbul ignore next */
          (cov_1qujngdbya().s[87]++, await this.executeRecoveryStrategy(lastError, attempt));
          /* istanbul ignore next */
          cov_1qujngdbya().s[88]++;
          if (recovered) {
            /* istanbul ignore next */
            cov_1qujngdbya().b[40][0]++;
            cov_1qujngdbya().s[89]++;
            console.log(`🔄 Recovery strategy applied, retrying: ${errorContext}`);
            // Apply exponential backoff
            const delay =
            /* istanbul ignore next */
            (cov_1qujngdbya().s[90]++, backoffDelay * Math.pow(2, attempt - 1));
            /* istanbul ignore next */
            cov_1qujngdbya().s[91]++;
            await new Promise(resolve => {
              /* istanbul ignore next */
              cov_1qujngdbya().f[8]++;
              cov_1qujngdbya().s[92]++;
              return setTimeout(resolve, delay);
            });
            /* istanbul ignore next */
            cov_1qujngdbya().s[93]++;
            continue;
          } else {
            /* istanbul ignore next */
            cov_1qujngdbya().b[40][1]++;
            cov_1qujngdbya().s[94]++;
            console.warn(`⚠️ Recovery strategy failed: ${errorContext}`);
          }
        } else
        /* istanbul ignore next */
        {
          cov_1qujngdbya().b[39][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1qujngdbya().s[95]++;
    console.error(`❌ All recovery attempts failed: ${errorContext}`);
    /* istanbul ignore next */
    cov_1qujngdbya().s[96]++;
    return {
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[41][0]++, lastError) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[41][1]++, this.fromCode('RECOVERY_FAILED', 'All recovery attempts failed', {
        context: errorContext
      }))
    };
  }
  /**
   * Determine the best recovery strategy for an error
   */
  static determineRecoveryStrategy(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[9]++;
    cov_1qujngdbya().s[97]++;
    switch (error.category) {
      case 'network':
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][0]++;
        cov_1qujngdbya().s[98]++;
        return {
          strategy: 'retry-with-backoff',
          maxRetries: 5,
          backoffDelay: 2000
        };
      case 'memory':
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][1]++;
        cov_1qujngdbya().s[99]++;
        return {
          strategy: 'recover-state',
          maxRetries: 2,
          stateRecoveryAction: async () => {
            /* istanbul ignore next */
            cov_1qujngdbya().f[10]++;
            cov_1qujngdbya().s[100]++;
            // Force garbage collection if available
            if (global.gc) {
              /* istanbul ignore next */
              cov_1qujngdbya().b[43][0]++;
              cov_1qujngdbya().s[101]++;
              global.gc();
            } else
            /* istanbul ignore next */
            {
              cov_1qujngdbya().b[43][1]++;
            }
            // Clear caches
            cov_1qujngdbya().s[102]++;
            await this.clearApplicationCaches();
          }
        };
      case 'gpu':
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][2]++;
        cov_1qujngdbya().s[103]++;
        return {
          strategy: 'disable-feature',
          maxRetries: 1,
          fallbackAction: async () => {
            /* istanbul ignore next */
            cov_1qujngdbya().f[11]++;
            cov_1qujngdbya().s[104]++;
            // Disable GPU acceleration
            console.log('🔧 Disabling GPU acceleration due to error');
            /* istanbul ignore next */
            cov_1qujngdbya().s[105]++;
            return this.disableGPUAcceleration();
          }
        };
      case 'file':
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][3]++;
        cov_1qujngdbya().s[106]++;
        return {
          strategy: 'fallback',
          maxRetries: 2,
          fallbackAction: async () => {
            /* istanbul ignore next */
            cov_1qujngdbya().f[12]++;
            cov_1qujngdbya().s[107]++;
            // Try alternative file access method
            console.log('🔧 Attempting alternative file access');
            /* istanbul ignore next */
            cov_1qujngdbya().s[108]++;
            return true;
          }
        };
      case 'pdf':
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][4]++;
        cov_1qujngdbya().s[109]++;
        return {
          strategy: 'retry-with-backoff',
          maxRetries: 3,
          backoffDelay: 1000
        };
      case 'ipc':
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][5]++;
        cov_1qujngdbya().s[110]++;
        return {
          strategy: 'restart-service',
          maxRetries: 2,
          serviceRestartAction: async () => {
            /* istanbul ignore next */
            cov_1qujngdbya().f[13]++;
            cov_1qujngdbya().s[111]++;
            console.log('🔧 Attempting IPC service recovery');
            /* istanbul ignore next */
            cov_1qujngdbya().s[112]++;
            await this.restartIPCConnection();
          }
        };
      case 'system':
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][6]++;
        cov_1qujngdbya().s[113]++;
        return {
          strategy: 'reload-app',
          maxRetries: 1
        };
      default:
        /* istanbul ignore next */
        cov_1qujngdbya().b[42][7]++;
        cov_1qujngdbya().s[114]++;
        return {
          strategy: 'retry',
          maxRetries: 2,
          backoffDelay: 1000
        };
    }
  }
  /**
   * Execute the recovery strategy
   */
  static async executeRecoveryStrategy(error, attempt) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[14]++;
    cov_1qujngdbya().s[115]++;
    if (!error.recoveryContext) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[44][0]++;
      cov_1qujngdbya().s[116]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[44][1]++;
    }
    const {
      strategy
    } =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[117]++, error.recoveryContext);
    /* istanbul ignore next */
    cov_1qujngdbya().s[118]++;
    try {
      /* istanbul ignore next */
      cov_1qujngdbya().s[119]++;
      switch (strategy) {
        case 'retry':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][0]++;
        case 'retry-with-backoff':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][1]++;
          cov_1qujngdbya().s[120]++;
          // Just return true to continue retrying
          return true;
        case 'fallback':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][2]++;
          cov_1qujngdbya().s[121]++;
          if (error.recoveryContext.fallbackAction) {
            /* istanbul ignore next */
            cov_1qujngdbya().b[46][0]++;
            cov_1qujngdbya().s[122]++;
            await error.recoveryContext.fallbackAction();
            /* istanbul ignore next */
            cov_1qujngdbya().s[123]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_1qujngdbya().b[46][1]++;
          }
          cov_1qujngdbya().s[124]++;
          break;
        case 'recover-state':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][3]++;
          cov_1qujngdbya().s[125]++;
          if (error.recoveryContext.stateRecoveryAction) {
            /* istanbul ignore next */
            cov_1qujngdbya().b[47][0]++;
            cov_1qujngdbya().s[126]++;
            await error.recoveryContext.stateRecoveryAction();
            /* istanbul ignore next */
            cov_1qujngdbya().s[127]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_1qujngdbya().b[47][1]++;
          }
          cov_1qujngdbya().s[128]++;
          break;
        case 'restart-service':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][4]++;
          cov_1qujngdbya().s[129]++;
          if (error.recoveryContext.serviceRestartAction) {
            /* istanbul ignore next */
            cov_1qujngdbya().b[48][0]++;
            cov_1qujngdbya().s[130]++;
            await error.recoveryContext.serviceRestartAction();
            /* istanbul ignore next */
            cov_1qujngdbya().s[131]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_1qujngdbya().b[48][1]++;
          }
          cov_1qujngdbya().s[132]++;
          break;
        case 'disable-feature':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][5]++;
          cov_1qujngdbya().s[133]++;
          if (error.recoveryContext.fallbackAction) {
            /* istanbul ignore next */
            cov_1qujngdbya().b[49][0]++;
            cov_1qujngdbya().s[134]++;
            await error.recoveryContext.fallbackAction();
            // Don't retry after disabling feature
            /* istanbul ignore next */
            cov_1qujngdbya().s[135]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1qujngdbya().b[49][1]++;
          }
          cov_1qujngdbya().s[136]++;
          break;
        case 'reload-app':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][6]++;
          cov_1qujngdbya().s[137]++;
          console.log('🔄 Requesting application reload');
          /* istanbul ignore next */
          cov_1qujngdbya().s[138]++;
          if (window.location) {
            /* istanbul ignore next */
            cov_1qujngdbya().b[50][0]++;
            cov_1qujngdbya().s[139]++;
            window.location.reload();
          } else
          /* istanbul ignore next */
          {
            cov_1qujngdbya().b[50][1]++;
          }
          cov_1qujngdbya().s[140]++;
          return false;
        case 'user-action':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][7]++;
          cov_1qujngdbya().s[141]++;
          // User action required, don't auto-retry
          return false;
        case 'none':
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][8]++;
        default:
          /* istanbul ignore next */
          cov_1qujngdbya().b[45][9]++;
          cov_1qujngdbya().s[142]++;
          return false;
      }
    } catch (recoveryError) {
      /* istanbul ignore next */
      cov_1qujngdbya().s[143]++;
      console.error('❌ Recovery strategy execution failed:', recoveryError);
      /* istanbul ignore next */
      cov_1qujngdbya().s[144]++;
      return false;
    }
    /* istanbul ignore next */
    cov_1qujngdbya().s[145]++;
    return false;
  }
  /**
   * Enhanced error categorization with more specific detection
   */
  static determineCategory(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[15]++;
    cov_1qujngdbya().s[146]++;
    if (!error.message) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[51][0]++;
      cov_1qujngdbya().s[147]++;
      return 'unknown';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[51][1]++;
    }
    const message =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[148]++, error.message.toLowerCase());
    const stack =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[149]++,
    /* istanbul ignore next */
    (cov_1qujngdbya().b[52][0]++, error.stack?.toLowerCase()) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[52][1]++, ''));
    // System-level errors
    /* istanbul ignore next */
    cov_1qujngdbya().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[54][0]++, message.includes('system')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[54][1]++, message.includes('os')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[54][2]++, message.includes('platform')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[54][3]++, message.includes('electron'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[53][0]++;
      cov_1qujngdbya().s[151]++;
      return 'system';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[53][1]++;
    }
    // IPC communication errors
    cov_1qujngdbya().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[56][0]++, message.includes('ipc')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[56][1]++, message.includes('invoke')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[56][2]++, message.includes('send')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[56][3]++, stack.includes('ipcrenderer')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[56][4]++, stack.includes('contextbridge'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[55][0]++;
      cov_1qujngdbya().s[153]++;
      return 'ipc';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[55][1]++;
    }
    // GPU-related errors
    cov_1qujngdbya().s[154]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[58][0]++, message.includes('gpu')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[58][1]++, message.includes('webgl')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[58][2]++, message.includes('canvas')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[58][3]++, message.includes('hardware acceleration')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[58][4]++, message.includes('graphics'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[57][0]++;
      cov_1qujngdbya().s[155]++;
      return 'gpu';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[57][1]++;
    }
    // File-related errors
    cov_1qujngdbya().s[156]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][0]++, message.includes('file')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][1]++, message.includes('path')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][2]++, message.includes('directory')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][3]++, message.includes('permission')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][4]++, message.includes('access')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][5]++, message.includes('enoent')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][6]++, message.includes('eisdir')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[60][7]++, message.includes('eacces'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[59][0]++;
      cov_1qujngdbya().s[157]++;
      return 'file';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[59][1]++;
    }
    // Network-related errors
    cov_1qujngdbya().s[158]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[62][0]++, message.includes('network')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[62][1]++, message.includes('connection')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[62][2]++, message.includes('timeout')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[62][3]++, message.includes('fetch')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[62][4]++, message.includes('request')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[62][5]++, message.includes('cors')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[62][6]++, message.includes('net::'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[61][0]++;
      cov_1qujngdbya().s[159]++;
      return 'network';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[61][1]++;
    }
    // Validation errors
    cov_1qujngdbya().s[160]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[64][0]++, message.includes('validation')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[64][1]++, message.includes('invalid')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[64][2]++, message.includes('required')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[64][3]++, message.includes('format')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[64][4]++, message.includes('parse')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[64][5]++, message.includes('syntax'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[63][0]++;
      cov_1qujngdbya().s[161]++;
      return 'validation';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[63][1]++;
    }
    // Security errors
    cov_1qujngdbya().s[162]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][0]++, message.includes('security')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][1]++, message.includes('password')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][2]++, message.includes('encryption')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][3]++, message.includes('decryption')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][4]++, message.includes('signature')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][5]++, message.includes('certificate')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][6]++, message.includes('crypto')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[66][7]++, message.includes('auth'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[65][0]++;
      cov_1qujngdbya().s[163]++;
      return 'security';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[65][1]++;
    }
    // PDF processing errors
    cov_1qujngdbya().s[164]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[68][0]++, message.includes('pdf')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[68][1]++, message.includes('document')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[68][2]++, message.includes('page')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[68][3]++, message.includes('annotation')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[68][4]++, message.includes('pdfjs')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[68][5]++, message.includes('pdf-lib'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[67][0]++;
      cov_1qujngdbya().s[165]++;
      return 'pdf';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[67][1]++;
    }
    // OCR errors
    cov_1qujngdbya().s[166]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[70][0]++, message.includes('ocr')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[70][1]++, message.includes('tesseract')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[70][2]++, message.includes('text recognition')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[70][3]++, message.includes('worker')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[70][4]++, stack.includes('tesseract'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[69][0]++;
      cov_1qujngdbya().s[167]++;
      return 'ocr';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[69][1]++;
    }
    // Memory errors
    cov_1qujngdbya().s[168]++;
    if (
    /* istanbul ignore next */
    (cov_1qujngdbya().b[72][0]++, message.includes('memory')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[72][1]++, message.includes('allocation')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[72][2]++, message.includes('heap')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[72][3]++, message.includes('out of memory')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[72][4]++, message.includes('buffer')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[72][5]++, message.includes('maximum call stack')) ||
    /* istanbul ignore next */
    (cov_1qujngdbya().b[72][6]++, message.includes('rangeerror'))) {
      /* istanbul ignore next */
      cov_1qujngdbya().b[71][0]++;
      cov_1qujngdbya().s[169]++;
      return 'memory';
    } else
    /* istanbul ignore next */
    {
      cov_1qujngdbya().b[71][1]++;
    }
    cov_1qujngdbya().s[170]++;
    return 'unknown';
  }
  // ============ RECOVERY HELPER METHODS ============
  /**
   * Clear application caches to free memory
   */
  static async clearApplicationCaches() {
    /* istanbul ignore next */
    cov_1qujngdbya().f[16]++;
    cov_1qujngdbya().s[171]++;
    console.log('🧹 Clearing application caches...');
    /* istanbul ignore next */
    cov_1qujngdbya().s[172]++;
    try {
      /* istanbul ignore next */
      cov_1qujngdbya().s[173]++;
      // Clear any cached data
      if (typeof window !== 'undefined') {
        /* istanbul ignore next */
        cov_1qujngdbya().b[73][0]++;
        cov_1qujngdbya().s[174]++;
        // Clear any application-specific caches
        console.log('✅ Application caches cleared');
      } else
      /* istanbul ignore next */
      {
        cov_1qujngdbya().b[73][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1qujngdbya().s[175]++;
      console.warn('⚠️ Failed to clear some caches:', error);
    }
  }
  /**
   * Disable GPU acceleration
   */
  static async disableGPUAcceleration() {
    /* istanbul ignore next */
    cov_1qujngdbya().f[17]++;
    cov_1qujngdbya().s[176]++;
    console.log('🔧 Attempting to disable GPU acceleration...');
    /* istanbul ignore next */
    cov_1qujngdbya().s[177]++;
    try {
      /* istanbul ignore next */
      cov_1qujngdbya().s[178]++;
      // This would typically require IPC to main process
      // For now, just log the intent
      console.log('⚠️ GPU acceleration disable requested - requires main process support');
      /* istanbul ignore next */
      cov_1qujngdbya().s[179]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1qujngdbya().s[180]++;
      console.error('❌ Failed to disable GPU acceleration:', error);
      /* istanbul ignore next */
      cov_1qujngdbya().s[181]++;
      return false;
    }
  }
  /**
   * Restart IPC connection
   */
  static async restartIPCConnection() {
    /* istanbul ignore next */
    cov_1qujngdbya().f[18]++;
    cov_1qujngdbya().s[182]++;
    console.log('🔄 Attempting IPC connection restart...');
    /* istanbul ignore next */
    cov_1qujngdbya().s[183]++;
    try {
      /* istanbul ignore next */
      cov_1qujngdbya().s[184]++;
      // This is a placeholder - actual implementation would depend on IPC architecture
      console.log('⚠️ IPC restart requested - requires main process coordination');
    } catch (error) {
      /* istanbul ignore next */
      cov_1qujngdbya().s[185]++;
      console.error('❌ Failed to restart IPC connection:', error);
      /* istanbul ignore next */
      cov_1qujngdbya().s[186]++;
      throw error;
    }
  }
  /**
   * Create a retry wrapper for operations
   */
  static withRetry(operation, options) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[19]++;
    cov_1qujngdbya().s[187]++;
    return new Promise(async (resolve, reject) => {
      /* istanbul ignore next */
      cov_1qujngdbya().f[20]++;
      const result =
      /* istanbul ignore next */
      (cov_1qujngdbya().s[188]++, await this.attemptRecovery(operation,
      /* istanbul ignore next */
      (cov_1qujngdbya().b[74][0]++, options?.context) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[74][1]++, 'operation'), {
        strategy: 'retry-with-backoff',
        maxRetries:
        /* istanbul ignore next */
        (cov_1qujngdbya().b[75][0]++, options?.maxRetries) ||
        /* istanbul ignore next */
        (cov_1qujngdbya().b[75][1]++, 3),
        backoffDelay:
        /* istanbul ignore next */
        (cov_1qujngdbya().b[76][0]++, options?.backoffDelay) ||
        /* istanbul ignore next */
        (cov_1qujngdbya().b[76][1]++, 1000)
      }));
      /* istanbul ignore next */
      cov_1qujngdbya().s[189]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_1qujngdbya().b[77][0]++;
        cov_1qujngdbya().s[190]++;
        resolve(result.result);
      } else {
        /* istanbul ignore next */
        cov_1qujngdbya().b[77][1]++;
        cov_1qujngdbya().s[191]++;
        reject(result.error);
      }
    });
  }
  /**
   * Handle critical errors that might require app restart
   */
  static handleCriticalError(error, context) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[21]++;
    const appError =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[192]++, this.handle(error, context));
    /* istanbul ignore next */
    cov_1qujngdbya().s[193]++;
    appError.severity = 'critical';
    /* istanbul ignore next */
    cov_1qujngdbya().s[194]++;
    appError.canRecover = false;
    // Log critical error immediately
    /* istanbul ignore next */
    cov_1qujngdbya().s[195]++;
    this.log(appError);
    // Notify main process if possible
    /* istanbul ignore next */
    cov_1qujngdbya().s[196]++;
    try {
      /* istanbul ignore next */
      cov_1qujngdbya().s[197]++;
      if (window.electronAPI?.reportCriticalError) {
        /* istanbul ignore next */
        cov_1qujngdbya().b[78][0]++;
        cov_1qujngdbya().s[198]++;
        window.electronAPI.reportCriticalError({
          message: appError.message,
          stack: appError.stack,
          context: appError.context,
          timestamp: appError.timestamp
        });
      } else
      /* istanbul ignore next */
      {
        cov_1qujngdbya().b[78][1]++;
      }
    } catch (reportError) {
      /* istanbul ignore next */
      cov_1qujngdbya().s[199]++;
      console.error('Failed to report critical error:', reportError);
    }
    /* istanbul ignore next */
    cov_1qujngdbya().s[200]++;
    return appError;
  }
  /**
   * Generate comprehensive error report
   */
  static generateErrorReport(error) {
    /* istanbul ignore next */
    cov_1qujngdbya().f[22]++;
    const report =
    /* istanbul ignore next */
    (cov_1qujngdbya().s[201]++, {
      timestamp:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[79][0]++, error.timestamp?.toISOString()) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[79][1]++, new Date().toISOString()),
      category:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[80][0]++, error.category) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[80][1]++, 'unknown'),
      severity:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[81][0]++, error.severity) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[81][1]++, 'medium'),
      message: error.message,
      code: error.code,
      context: error.context,
      attemptCount:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[82][0]++, error.attemptCount) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[82][1]++, 0),
      canRecover: error.canRecover !== false,
      recoveryStrategy:
      /* istanbul ignore next */
      (cov_1qujngdbya().b[83][0]++, error.recoveryContext?.strategy) ||
      /* istanbul ignore next */
      (cov_1qujngdbya().b[83][1]++, 'none'),
      systemInfo: {
        userAgent: navigator.userAgent,
        platform: navigator.platform,
        language: navigator.language,
        ...error.systemInfo
      },
      stack: error.stack,
      metadata: error.metadata
    });
    /* istanbul ignore next */
    cov_1qujngdbya().s[202]++;
    return JSON.stringify(report, null, 2);
  }
}
/* istanbul ignore next */
cov_1qujngdbya().s[203]++;
exports.ErrorHandler = ErrorHandler;
/* istanbul ignore next */
cov_1qujngdbya().s[204]++;
exports.default = ErrorHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,