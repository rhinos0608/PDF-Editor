# Qodo Workflow Configuration for Professional PDF Editor
# Defines when and how Qodo analysis should run

workflows:
  # Pull Request Analysis
  pull_request:
    name: "Qodo PR Analysis"
    trigger:
      events:
        - "pull_request"
        - "pull_request_target"
      branches:
        - "main"
        - "develop"
        - "release/*"
    
    steps:
      - name: "Security Scan"
        enabled: true
        severity_threshold: "medium"
        fail_on_issues: true
        
      - name: "Code Quality Analysis"
        enabled: true
        metrics:
          - "complexity"
          - "maintainability"
          - "duplication"
          - "test_coverage"
        thresholds:
          complexity: 10
          maintainability: 70
          duplication: 5
          test_coverage: 70
          
      - name: "Performance Analysis"
        enabled: true
        focus_areas:
          - "bundle_size"
          - "memory_usage"
          - "electron_startup"
          - "pdf_processing"
        
      - name: "Dependency Scan"
        enabled: true
        check_vulnerabilities: true
        check_licenses: true
        allowed_licenses:
          - "MIT"
          - "Apache-2.0"
          - "BSD-3-Clause"
          - "ISC"
        
      - name: "Documentation Check"
        enabled: true
        require_docs_for:
          - "new_features"
          - "api_changes"
          - "breaking_changes"

  # Push to Main Branch
  main_branch:
    name: "Qodo Main Branch Analysis"
    trigger:
      events:
        - "push"
      branches:
        - "main"
    
    steps:
      - name: "Full Security Audit"
        enabled: true
        deep_scan: true
        
      - name: "Performance Benchmarking"
        enabled: true
        compare_with_baseline: true
        
      - name: "Code Quality Metrics"
        enabled: true
        generate_report: true
        
      - name: "Dependency Update Check"
        enabled: true
        auto_create_pr: false

  # Scheduled Analysis
  scheduled:
    name: "Qodo Scheduled Analysis"
    trigger:
      schedule: "0 2 * * 1" # Every Monday at 2 AM
    
    steps:
      - name: "Comprehensive Security Scan"
        enabled: true
        include_dependencies: true
        
      - name: "Code Health Report"
        enabled: true
        generate_trends: true
        
      - name: "Performance Trend Analysis"
        enabled: true
        historical_comparison: true
        
      - name: "Dependency Audit"
        enabled: true
        check_outdated: true
        security_advisories: true

  # Release Preparation
  release:
    name: "Qodo Release Analysis"
    trigger:
      events:
        - "push"
      branches:
        - "release/*"
      tags:
        - "v*"
    
    steps:
      - name: "Release Security Validation"
        enabled: true
        strict_mode: true
        
      - name: "Performance Validation"
        enabled: true
        benchmark_against_previous: true
        
      - name: "Documentation Completeness"
        enabled: true
        require_changelog: true
        require_migration_guide: true
        
      - name: "Build Artifact Analysis"
        enabled: true
        scan_binaries: true
        check_signatures: true

# Notification Configuration
notifications:
  # Slack notifications
  slack:
    enabled: true
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channels:
      critical: "#security-alerts"
      important: "#dev-team"
      info: "#qodo-reports"
    
    message_templates:
      security_issue: |
        ðŸš¨ Security Issue Detected in PDF Editor
        Severity: {severity}
        File: {file}
        Issue: {description}
        PR: {pr_url}
      
      performance_regression: |
        ðŸ“‰ Performance Regression Detected
        Metric: {metric}
        Change: {change}
        Threshold: {threshold}
        PR: {pr_url}
      
      quality_improvement: |
        âœ… Code Quality Improved
        Metric: {metric}
        Improvement: {improvement}
        PR: {pr_url}

  # Email notifications
  email:
    enabled: true
    recipients:
      critical: ["security-team@company.com"]
      important: ["dev-team@company.com"]
    
    templates:
      weekly_report: "qodo-weekly-report"
      security_alert: "qodo-security-alert"

# Integration Settings
integrations:
  # GitHub integration
  github:
    enabled: true
    auto_comment: true
    status_checks: true
    labels:
      security: "security"
      performance: "performance"
      quality: "code-quality"
      documentation: "documentation"
    
    comment_templates:
      security_issues: |
        ## ðŸ”’ Qodo Security Analysis
        
        Found {count} security issues:
        {issues_list}
        
        Please address these issues before merging.
      
      performance_issues: |
        ## âš¡ Qodo Performance Analysis
        
        Performance impact detected:
        {performance_summary}
        
        Consider optimizing before merging.
      
      quality_summary: |
        ## ðŸ“Š Qodo Code Quality Summary
        
        - Complexity: {complexity_score}
        - Maintainability: {maintainability_score}
        - Test Coverage: {coverage_percentage}%
        - Duplication: {duplication_percentage}%

  # Jira integration (if used)
  jira:
    enabled: false
    server_url: "${JIRA_SERVER_URL}"
    project_key: "PDF"
    auto_create_tickets: false

# Custom Metrics for PDF Editor
custom_metrics:
  # Electron-specific metrics
  electron:
    - name: "main_process_memory"
      description: "Memory usage of main Electron process"
      threshold: "500MB"
      
    - name: "renderer_process_memory"
      description: "Memory usage of renderer processes"
      threshold: "1GB"
      
    - name: "startup_time"
      description: "Application startup time"
      threshold: "3s"

  # PDF processing metrics
  pdf_processing:
    - name: "pdf_load_time"
      description: "Time to load and render PDF"
      threshold: "2s"
      
    - name: "pdf_memory_usage"
      description: "Memory usage when processing PDFs"
      threshold: "200MB"
      
    - name: "pdf_export_time"
      description: "Time to export/save PDF"
      threshold: "5s"

  # UI performance metrics
  ui_performance:
    - name: "first_paint"
      description: "Time to first paint"
      threshold: "1s"
      
    - name: "interactive_time"
      description: "Time to interactive"
      threshold: "2s"
      
    - name: "bundle_size"
      description: "JavaScript bundle size"
      threshold: "5MB"

# Environment-specific configurations
environments:
  development:
    analysis_depth: "basic"
    fail_on_issues: false
    generate_reports: false
    
  staging:
    analysis_depth: "standard"
    fail_on_issues: true
    generate_reports: true
    
  production:
    analysis_depth: "comprehensive"
    fail_on_issues: true
    generate_reports: true
    archive_reports: true